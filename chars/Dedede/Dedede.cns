; Constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
life = 1000			;Amount of life to start with
power = 3000		;Amount of maximum power
attack = 100		;attack power (more is stronger)
defence = 119		;defensive power (more is stronger)
fall.defence_up = 50	;Percentage to increase defense everytime player is knocked down
liedown.time = 60		;Time which player lies down for, before getting up
airjuggle = 15		;Number of points for juggling
sparkno = 2			;Default hit spark number for HitDefs
guard.sparkno = 40	;Default guard spark number
KO.echo = 0			;1 to enable echo on KO
volume = 0			;Volume offset (negative for softer)
IntPersistIndex = 58	;Variables with this index and above will not have their values
FloatPersistIndex = 40  ;reset to 0 between rounds or matches. There are 60 int variables,
  				;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
  				;If omitted, then it defaults to 60 and 40 for integer and float
  				;variables repectively, meaning that none are persistent, i.e. all
  				;are reset. If you want your variables to persist between matches,
  				;you need to override state 5900 from common1.cns.


[Size]
xscale = 1.5			;Horizontal scaling factor.
yscale = 1.5			;Vertical scaling factor.
ground.back = 15		;Player width (back, ground)
ground.front = 16		;Player width (front, ground)
air.back = 12		;Player width (back, air)
air.front = 12		;Player width (front, air)
height = 60			;Height of player (for opponent to jump over)
attack.dist = 160		;Default attack distance
proj.attack.dist = 90	;Default attack distance for projectiles
proj.doscale = 0		;Set to 1 to scale projectiles too   
head.pos = -5, -90	;Approximate position of head
mid.pos = -5, -60		;Approximate position of midsection
shadowoffset = 0		;Number of pixels to vertically offset the shadow
draw.offset = 0,0		;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 1.5		;Walk forward
walk.back = -1.5		;Walk backward
run.fwd  = 2.0, 0		;Run forward (x, y)
run.back = -3.5,-3.8	;Hop backward (x, y)
jump.neu = 0,-8.4		;Neutral jumping velocity (x, y)
jump.back = -2.55		;Jump back Speed (x, y)
jump.fwd = 2.5		;Jump forward Speed (x, y)
runjump.back = -2.55,-8.1;Running jump speeds (opt)
runjump.fwd = 4,-8.1	;.
airjump.neu = 0,-8.1	;.
airjump.back = -2.55	;Air jump speeds (opt)
airjump.fwd = 2.5		;.

[Movement]
airjump.num = 4		;Number of air jumps allowed (opt)
airjump.height = 35	;Minimum distance from ground before you can air jump (opt)
yaccel = .44		;Vertical acceleration
stand.friction = .85	;Friction coefficient when standing
crouch.friction = .82	;Friction coefficient when crouching

[Quotes]
; Up to 100 victory quotes can be specified per language (victory0 - victory99)
victory1 = "Surely you jestin"

;---------------------------------------------------------------------------
; Format:
; [Statedef STATENO]
; type = ?      S/C/A/L  stand/crouch/air/liedown
; movetype = ?  I/A/H    idle/attack/gethit
; physics = ?   S/C/A/N  stand/crouch/air/none
; juggle = ?             air juggle points move requires
;
; [State STATENO, ?]     ? - any number you choose
; type = ?
; ...

;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S
 
[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181+(random%3) 

;---------------------------------------------------------------------------
; Win pose 1
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 180
velset = 0,0

[State 181, PlaySnd]
type = PlaySnd
trigger1 = Time = 0
value = 0,11

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win pose 2
; CNS difficulty: basic
[Statedef 182]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, PlaySnd]
type = PlaySnd
trigger1 = Time = 0
value = 0,3

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win pose 3
; CNS difficulty: basic
[Statedef 183]
type = S
ctrl = 0
anim = 182
velset = 0,0

[State 181, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 3,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1




;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 190]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 190, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 9
value = 1,25

[State 190, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 190, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 22 
value = 1,8

[State 190, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 190, 4] ;Change to stand state
type = ChangeState
trigger1 = AnimTime = 0
value = 0

;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2

[State 195, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 3
value = 0,0

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Punch
; CNS difficulty: easy
[Statedef 200]
type    = S				;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A				;Move-type: A-attack, I-idle, H-gethit
physics = S				;Physics: S-stand, C-crouch, A-air
juggle  = 1				;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0			;Set velocity (x,y) (Def: no change)
ctrl = 0				;Set ctrl (Def: no change)
anim = 200				;Change animation (Def: no change)
poweradd = 20			;Power to add (Def: 0)
sprpriority = 2			;Set layering priority to 2 (in front)

[State 0, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 3
value = 2,7

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 40, 30			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12			;Time before opponent regains control in air

[State 200, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Punch
; CNS difficulty: easy
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 65
ctrl = 0
velset = 0,0
anim = 210

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,8

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 50, 40			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 2				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Punch
; CNS difficulty: easy
[Statedef 220]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 65
ctrl = 0
velset = 0,0
anim = 220

[State 220, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,11

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3 || AnimElem = 4 || AnimElem = 5 || AnimElem = 6 || AnimElem = 7
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 10			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 5		;Time attacker pauses, time opponent shakes
sparkno = 2				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = 1		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-5	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-1		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall=1

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 8
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 10			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 5		;Time attacker pauses, time opponent shakes
sparkno = 2				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = 1,-7	;Velocity at which opponent is pushed
airguard.velocity = -1.9,-8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-9		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall=1


[State 220, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Light Kick
; CNS difficulty: easy
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 22
ctrl = 0
velset = -1,0
anim = 230

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1 
value = 0,7

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 40, 25			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 5, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12

[State 230, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Medium Kick
; CNS difficulty: easy
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 65
ctrl = 0
velset = 0,0
anim = 240

[State 240, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,4

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3 || AnimElem = 4 || AnimElem = 5 || AnimElem = 6 || AnimElem = 7 || AnimElem = 8 || AnimElem = 9 || AnimElem = 10 || AnimElem = 11 || AnimElem = 12 || AnimElem = 13 || AnimElem = 14
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 17, 8			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 11		;Time attacker pauses, time opponent shakes
sparkno = 1				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 15
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 10			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 1				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S4, 2			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -6, -5		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -3.4,-5		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 240, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Standing Strong Kick
; CNS difficulty: easy
[Statedef 250]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 65
ctrl = 0
velset = 0,0
anim = 250

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 0,10

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 4
value = 2,0

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 230, 180			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 6, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -5,-2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 1013, Shaking]
type = EnvShake
trigger1 = AnimElem = 4
freq = 150
ampl = -10
time = 20


[State 250, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning the
;     player will get hit instead of trading hits with the opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 15
ctrl = 0
anim = 400

[State 400, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,15

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 70, 55			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 0, VelAdd]
type = VelAdd
trigger1 = AnimElem = 1
x = 5


[State 400, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Medium Punch
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50
ctrl = 0
anim = 410

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,8

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1,7


[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 160, 140			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 12			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -6, -8		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -4.4,-6		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 0, VelAdd]
type = VelAdd
trigger1 = AnimElem = 1
x = 5

[State 0, VelAdd]
type = VelAdd
trigger1 = AnimElem = 2
x = 5

[State 410, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Strong Punch
[Statedef 420]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50
ctrl = 0
anim = 420

[State 420, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0,18

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 140, 120			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 20			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 10		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -1,-9		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1,-9		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 420, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Light Kick
; CNS difficulty: easy
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 430

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 50, 20			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 1		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -3		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3


[State 430, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouching Medium Kick
; CNS difficulty: easy
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22
ctrl = 0
anim = 440

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 80, 50			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 13			;Time attacker pauses, time opponent shakes
sparkno = 1				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 8		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -1,-9		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-9



[State 440, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
[Statedef 450]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 70
ctrl = 0
anim = 450

[State 450, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,14

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 130, 110		;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 14, 14		;Time attacker pauses, time opponent shakes
sparkno = 2				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 8		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -9 ,-3		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3
fall = 1

[State 450, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; Jump Light Punch
; CNS difficulty: easy
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 2
poweradd= 11
ctrl = 0
anim = 600

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1 
value = 0,15

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 30			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 4			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 1		;Time that the opponent slides back
ground.hittime  = 5		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3

[State 600, 5]
type = CtrlSet
trigger1 = Time = 50
value = 1

;---------------------------------------------------------------------------
; Jump Medium Punch
; CNS difficulty: easy
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 610

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,11

[State 1300, 2]
type = HitDef
trigger1 = Animelem = 1 || Animelem = 2 || Animelem = 3 || Animelem = 4
attr = A, SA
damage   = 25,14
animtype = Light
guardflag = MA
pausetime = 5,6
sparkno = 0
sparkxy = -10,-42
hitsound   = S2,1
guardsound = 6,0
ground.type = High
ground.slidetime = 8
ground.hittime  = 20
ground.velocity = -1, -5
air.velocity = -1.5,-5.5

[State 610, 5]
type = CtrlSet
trigger1 = Time = 40
value = 1

;---------------------------------------------------------------------------
; Jump Strong Punch
; CNS difficulty: easy
[Statedef 620]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 70
ctrl = 0
anim = 620

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 3
value = 2,5


[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 100, 65			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 5, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10		;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3

[State 620, 5]
type = CtrlSet
trigger1 = Time = 50
value = 1

;---------------------------------------------------------------------------
; Jump Light Kick
; CNS difficulty: easy
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 20
ctrl = 0
anim = 630

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1 
value = 2,62

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 55, 28			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 1, 1			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 5		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3


[State 630, 5]
type = CtrlSet
trigger1 = Time = 20
value = 1

;---------------------------------------------------------------------------
; Jump Medium Kick
; CNS difficulty: easy
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 65
ctrl = 0
anim = 640
sprpriority = 2

[State 640, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,11

[State 1300, 2]
type = HitDef
trigger1 = Animelem = 1 || Animelem = 2 || Animelem = 3 || Animelem = 4
attr = A, SA
damage   = 25,14
animtype = Light
guardflag = MA
pausetime = 5,6
sparkno = 0
sparkxy = -10,-42
hitsound   = S2,1
guardsound = 6,0
ground.type = High
ground.slidetime = 8
ground.hittime  = 20
ground.velocity = -2, 3
air.velocity = -2.5,3.5

[State 640, 5]
type = CtrlSet
trigger1 = Time = 50
value = 1

;---------------------------------------------------------------------------
; Jump Strong Kick
; CNS difficulty: easy
[Statedef 650]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 70
ctrl = 0
anim = 650

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 3
value = 2,5

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 150, 120			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 15, 15			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5		;Time that the opponent slides back
ground.hittime  = 5		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3


[State 640, 5]
type = CtrlSet
trigger1 = Time = 50
value = 1


;---------------------------------------------------------------------------------------------------------------------
; Inhale 
[Statedef 654]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 50
ctrl = 0
anim = 654

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1,47
channel = 2

[State 0, StopSnd]
type = StopSnd
trigger1 = AnimTime = 0
channel = 2

[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, NT          ;Attributes: Standing, Normal Throw
hitflag = M-          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1       ;Draw in front of p2
p1facing = ifelse (command = "holdfwd", -1, 1) ;Turn if holding forwards
p2facing = 1          ;Force p2 to face player
p1stateno = 560      ;On success, player changes to state 810
p2stateno = 570      ;If hit, p2 changes to state 820 in player's cns
fall = 1              ;Force p2 into falling down

[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Throwing the opponent
; Description: In this state, the player throws the opponent by binding him to
;     various offsets based on his current frame of animation. For
;     example, [State 810, Bind 1] binds the opponent to an offset of
;     28 pixels in front of the player. That puts him around where the hand
;     is at. Is is important to keep the opponent bound using a
;     TargetBind controller at all times, until you let him go. This
;     is especially important if your player has a Clsn2 box that
;     allows him to get hit while throwing someone. Each time a player
;     gets hit, all his bound targets will be set to a fall state. If
;     the opponent is not bound, then he might get stuck in his thrown
;     state when his attacker is knocked out of the throw halfway.
; Notes: There is a TargetLifeAdd controller to decrease the opponent's
;     life, and a TargetState controller to change his state to a
;     falling state when KFM lets go of him.
[Statedef 560]
type    = S
movetype= A
physics = N
anim = 676
poweradd = 60
sprpriority = 2

[State 0, StopSnd]
type = StopSnd
trigger1 = AnimElem = 1
channel = 2

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,12

[State 0, Turn]
type = Turn
trigger1 = Time = 0

[State 0, Turn]
type = Turn
trigger1 = Time = 1

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 1
pos = 1, 0


[State 810, Bind 2-4]
type = TargetBind
trigger1 = AnimElem = 2
pos = 80, -10

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 5
value = 1,51


[State 810, TargetLifeAdd]
type = TargetLifeAdd
trigger1 = AnimElem = 5
value = -90
kill = 1

[State 810, State End]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


[State 0, TargetState]
type = TargetState
triggerall = NumTarget;()
trigger1 = AnimElem = 5,
value = 571


[State 654, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Opponent Thrown
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by the throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 570]
type    = A
movetype= H
physics = N
velset = 0,0

[State 570, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 675

;---------------------------------------------------------------------------
; Opponent thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 571]
type    = A
movetype= H
physics = N
velset = 8,0
poweradd = 40
sprpriority = -1


[State 821, 1] ;Gravity
type = VelAdd
Trigger1 = 1
y = .4

[State 821, 2] ; Recover near ground (use ChangeState)
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;HITFALL_RECOVER

[State 821, 3] ; Recover in mid air (use SelfState)
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;HITFALL_AIRRECOVER

[State 821, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground

;---------------------------------------------------------------------------------------------------------------------
; Inhale Air
[Statedef 660]
type    = A
movetype= A
physics = A
juggle  = 6
poweradd= 50
ctrl = 0
anim = 654

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1,47
channel = 3

[State 0, StopSnd]
type = StopSnd
trigger1 = AnimTime = 0
channel = 3

[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = A, NT          ;Attributes: Standing, Normal Throw
hitflag = AF        ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1       ;Draw in front of p2
p1facing = ifelse (command = "holdfwd", -1, 1) ;Turn if holding forwards
p2facing = 1          ;Force p2 to face player
p1stateno = 665     ;On success, player changes to state 810
p2stateno = 570      ;If hit, p2 changes to state 820 in player's cns
fall = 1              ;Force p2 into falling down

[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 50
ctrl = 1



;---------------------------------------------------------------------------
; Throwing the opponent Air
; Description: In this state, the player throws the opponent by binding him to
;     various offsets based on his current frame of animation. For
;     example, [State 810, Bind 1] binds the opponent to an offset of
;     28 pixels in front of the player. That puts him around where the hand
;     is at. Is is important to keep the opponent bound using a
;     TargetBind controller at all times, until you let him go. This
;     is especially important if your player has a Clsn2 box that
;     allows him to get hit while throwing someone. Each time a player
;     gets hit, all his bound targets will be set to a fall state. If
;     the opponent is not bound, then he might get stuck in his thrown
;     state when his attacker is knocked out of the throw halfway.
; Notes: There is a TargetLifeAdd controller to decrease the opponent's
;     life, and a TargetState controller to change his state to a
;     falling state when KFM lets go of him.
[Statedef 665]
type    = A
movetype= A
physics = N
anim = 676
poweradd = 60
sprpriority = 2

[State 0, StopSnd]
type = StopSnd
trigger1 = AnimElem = 1
channel = 3

[State 921, VelSet]
type = VelSet
trigger1 = AnimElem = 1
x = -.01
y = .5


[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,12

[State 0, Turn]
type = Turn
trigger1 = Time = 0

[State 0, Turn]
type = Turn
trigger1 = Time = 1

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 1
pos = 1, 0

[State 921, VelSet]
type = VelSet
trigger1 = AnimElem = 1
x = -.01
y = 1

[State 810, Bind 2-4]
type = TargetBind
trigger1 = AnimElem = 2
pos = 80, -10


[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 5
value = 1,51


[State 810, TargetLifeAdd]
type = TargetLifeAdd
trigger1 = AnimElem = 5
value = -90
kill = 1

[State 921, 11]
type = ChangeState
trigger1 = AnimTime = 0 
Value = 50
ctrl = 1


[State 0, TargetState]
type = TargetState
triggerall = NumTarget;()
trigger1 = AnimElem = 5,
value = 571


[State 921, 9]
type = PosSet
trigger1 = Pos Y >= 0
y = 0

[State 921, 10]
type = VelSet
trigger1 = Pos Y >= 0
x = 0
y = 0

;---------------------------------------------------------------------------
; Godo Toss (Far)
[Statedef 655]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 20			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	

[State 0, Helper]
type = Helper
trigger1 = AnimElem = 1
name = "Gordo"
ID = 656
stateno = 656
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 655, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-----------------------------------------------------------------------------
;Gordo
[Statedef 656]
type    = A
movetype= A
physics = N
juggle  = 4
ctrl = 0
anim = 656

[State 200, 1]
type = HitDef
trigger1 = Time = 18
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 80, 65			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 5, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10		;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 0, 0		;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3

[State 656, VelSet]
type = VelSet
trigger1 = Time = 5
y = -Vel Y / 2


[State 656, Veladd]
type = VelAdd
trigger1 = Time = 18
x= 1.5
y = 1


[State 656, VelSet]
type = VelSet
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
y = -Vel Y / 2

[State 656, VelSet]
type = VelSet
trigger1 = Time = 100
y = 0.8

[State 656, DestroySelf]
type = DestroySelf
trigger1 = Time = 200
trigger2 = movecontact

;---------------------------------------------------------------------------
; Godo Toss (light)
[Statedef 670]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 10			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	


[State 0, Helper]
type = Helper
trigger1 = AnimElem = 1
name = "Gordolight"
ID = 657
stateno = 671
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 655, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-----------------------------------------------------------------------------
;Gordo (light)
[Statedef 671]
type    = A
movetype= A
physics = N
juggle  = 4
ctrl = 0
anim = 656

[State 200, 1]
type = HitDef
trigger1 = Time = 18
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 80, 65			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 5, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10		;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 0, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 4		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = Low			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3

[State 656, VelSet]
type = VelSet
trigger1 = Time = 5
y = -Vel Y / 2


[State 656, Veladd]
type = VelAdd
trigger1 = Time = 18
x= .5
y = 1


[State 656, VelSet]
type = VelSet
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
y = -Vel Y / 2

[State 656, VelSet]
type = VelSet
trigger1 = Time = 100
y = 0.8

[State 656, VelSet]
type = VelSet
trigger1 = Time = 210
y = 0.8

[State 656, DestroySelf]
type = DestroySelf
trigger1 = Time = 300
trigger2 = movecontact

;---------------------------------------------------------------------------
; Godo Toss Air (Far)
[Statedef 675]
type    = A
movetype= A
physics = A
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 1
y = -4

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 2
y = 3

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 30, 20			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	



[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 0, Helper]
type = Helper
trigger1 = AnimElem = 1
name = "Gordo"
ID = 656
stateno = 656
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 655, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
; Godo Toss Air (light)
[Statedef 676]
type    = A
movetype= A
physics = A
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 1
y = -4

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 2
y = 3

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 10			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 0, Helper]
type = Helper
trigger1 = AnimElem = 1
name = "Gordolight"
ID = 657
stateno = 671
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 655, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------------------------
; Waddle Dee Toss
[Statedef 657]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 15, 10			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 2
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0


[State 654, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------------------------
; Waddle Doo Toss
[Statedef 700]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9


[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 15, 10			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	

[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 2
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 654, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------------------------
; Waddle Doo Toss Air
[Statedef 705]
type    = A
movetype= A
physics = A
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655


[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 1
y = -4

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 2
y = 3


[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 15, 10			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 705, Projectile]
type = Projectile
trigger1 = AnimElem = 2
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 654, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 0

;---------------------------------------------------------------------------------------------
; Waddle Dee Toss Air
[Statedef 658]
type    = A
movetype= A
physics = A
juggle  = 6
poweradd= 50
ctrl = 0
anim = 655

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 1
y = -4

[State 0, VelSet]
type = VelSet
trigger1 = AnimElem = 2
y = 3


[State 200, 1]
type = HitDef
trigger1 = Time = 0
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 15, 10			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 4, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12	

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 2,9

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 2
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0


[State 654, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1



;---------------------------------------------------------------------------
; Throw - Attempt
; CNS difficulty: medium-advanced
; Description: Throws are not difficult to make, although then can be
;     tedious at times. Throw attempt states have a HitDef of a
;     special format. The key parameters in a throw are p1stateno
;     and p2stateno. If the HitDef successfully connects, then
;     the attacker will change to the state number specified by
;     p1stateno, and the opponent will be change to the state
;     number assigned to p2stateno. The special thing about p2stateno
;     is that the opponent will be temporarily brought into the
;     attacker's state file. In this case, no matter who the
;     opponent is, he will be taken to state 820 of this file (kfm.cns)
;     and remain here until the end of the throw (look at his debug
;     information when he is being thrown; the text changes to yellow
;     to mean that he is in another player's state file).
[Statedef 800]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 800

; Notes: The '-' symbol in the hitflag field means that it only affects
;   players who are not in a hit state. This prevents the player from combo-ing
;   into the throw. The priority should be set to a low number, such as
;   1 or 2, so that the throw does not take precedence over normal attacks.
;   The type of priority must always be set to "Miss" or "Dodge" for throws,
;   otherwise strange behavior can result.
[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, NT          ;Attributes: Standing, Normal Throw
hitflag = M-          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1       ;Draw in front of p2
p1facing = ifelse (command = "holdfwd", -1, 1) ;Turn if holding forwards
p2facing = 1          ;Force p2 to face player
p1stateno = 810       ;On success, player changes to state 810
p2stateno = 820       ;If hit, p2 changes to state 820 in player's cns
fall = 1              ;Force p2 into falling down

[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Throwing the opponent
; Description: In this state, the player throws the opponent by binding him to
;     various offsets based on his current frame of animation. For
;     example, [State 810, Bind 1] binds the opponent to an offset of
;     28 pixels in front of the player. That puts him around where the hand
;     is at. Is is important to keep the opponent bound using a
;     TargetBind controller at all times, until you let him go. This
;     is especially important if your player has a Clsn2 box that
;     allows him to get hit while throwing someone. Each time a player
;     gets hit, all his bound targets will be set to a fall state. If
;     the opponent is not bound, then he might get stuck in his thrown
;     state when his attacker is knocked out of the throw halfway.
; Notes: There is a TargetLifeAdd controller to decrease the opponent's
;     life, and a TargetState controller to change his state to a
;     falling state when KFM lets go of him.
[Statedef 810]
type    = S
movetype= A
physics = N
anim = 810
poweradd = 60
sprpriority = 2

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,12

[State 0, Turn]
type = Turn
trigger1 = Animelem = 2


[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 1
pos = 8, 0


[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 2
pos = 8, 0

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 3
pos = 8, 0

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 4
pos = 8, 0

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 5
pos = 8, 0

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 6
pos = 8, 0

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 7
pos = 8.5, -15

[State 810, Shaking]
type = EnvShake
trigger1 = AnimElem = 6
freq = 65
ampl = -10
time = 10

[State 810, TargetLifeAdd]
type = TargetLifeAdd
trigger1 = AnimElem = 6
value = -90
kill = 1

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 6
value = 3,0


[State 810, State End]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


[State 0, TargetState]
type = TargetState
triggerall = NumTarget;()
trigger1 = AnimElem = 8
value = 821


;---------------------------------------------------------------------------
; Opponent Thrown
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by the throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 820]
type    = A
movetype= H
physics = N
velset = 0,0

[State 820, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 820

;---------------------------------------------------------------------------
; Opponent thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 821]
type    = A
movetype= H
physics = N
velset = 0,0
poweradd = 40
sprpriority = -1


[State 821, 1] ;Gravity
type = VelAdd
Trigger1 = 1
y = .1

[State 821, 2] ; Recover near ground (use ChangeState)
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;HITFALL_RECOVER

[State 821, 3] ; Recover in mid air (use SelfState)
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;HITFALL_AIRRECOVER

[State 821, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground

;---------------------------------------------------------------------------------------------
; Super Dedede Jump
[Statedef 830]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= 50
ctrl = 0
anim = 658

[State 181, PlaySnd]
type = PlaySnd
trigger1 = Time = 0
value = 0,3

[State 181, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1,37

[State 0, VelAdd]
type = VelAdd
trigger1 =  Time = 15 
y = -9.4

[State 658, VelSet]
type = VelAdd
trigger1 = Time = 40
y = 10.4

[State 658, VelSet]
type = VelAdd
trigger1 = Time = 50
y = 11.4

[State 654, 1]
type = HitDef
trigger1 = Time = 0 
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 60, 40			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = 5, 0			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -4		;Velocity at which opponent is pushed
airguard.velocity = 0,4	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = 0,6		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12


[State 1012, 3]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 835
ctrl = 0


;---------------------------------------------------------------------------------------------------------------------------------

;Super Dedede Jump Landing
[Statedef 835]                                   
type = S
movetype = A
physics = C
velset = 0,0
ctrl = 0
anim = 659
sprpriority = 2

[State 652, 0]
type = PosSet
trigger1 = AnimElem = 1 || AnimElem = 2 || AnimElem = 3 || AnimElem = 4
y = 0

[State 1013, 1]
type = hitdef
trigger1 = AnimElem = 1 
attr = S, SA
hitflag = MAFD
guardflag = MA
animtype = HEAVY
damage = 60
pausetime = 15,20
hitsound = S5, 3           
guardsound = 6, 0          
ground.type = Trip         
ground.slidetime = 0       
ground.hittime  = 9             
ground.velocity = -1.5           
airguard.velocity = -1.2,-.8     
air.type = Trip                 
air.velocity = -1.2,-3 
fall = 1

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 1
ProjID = 701
projanim = 701
projscale = 1,1
projremove = 1
projremovetime = 10
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 60,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 20,5
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 1013, MakeDust]
type = MakeDust
trigger1 = AnimElem = 1 || AnimElem = 2
trigger2 = Time = 0 
spacing = 1
pos = -3, 0

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 1
ProjID = 703
projanim = 703
projscale = 1,1
projremove = 1
projremovetime = 10
velocity = -4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = -25,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 20,5
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 1013]
type = PlaySnd
trigger1 = Time = 0
trigger2 = Time = 0
value = 0, 4
volume = 200

[State 181, PlaySnd]
type = PlaySnd
trigger1 = Time = 0
value = 1,38

[State 1013, Shaking]
type = EnvShake
trigger1 = AnimElem = 1 || AnimElem = 2 
trigger2 = Time = 0 
freq = 80
ampl = -7
time = 20

[State 1013, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Jet Hammer
[Statedef 840]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 65
ctrl = 0
velset = 0,0
anim = 840

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,32
channel = 2
volume = 200


[State 0, StopSnd]
type = StopSnd
trigger1 = AnimElem = 8
channel = 2

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 8
value = 1,45

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 8
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 360			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = 			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 6, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -10,-16		;Velocity at which opponent is pushed
airguard.velocity = -8.9,-.15	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -10.4,-17		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 9
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 40			;Damage that move inflicts, guard damage
animtype = Light			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = 			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 6, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -5,-2		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1

[State 1013, Shaking]
type = EnvShake
trigger1 = AnimElem = 2
freq = 80
ampl = -10
time = 10

[State 1013, Shaking]
type = EnvShake
trigger1 = AnimElem = 8
freq = 160
ampl = -10
time = 20


[State 250, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Jet Hammer Half
[Statedef 850]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 65
ctrl = 0
velset = 0,0
anim = 850

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,32
channel = 2
volume = 200


[State 0, StopSnd]
type = StopSnd
trigger1 = AnimElem = 4
channel = 2

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 4
value = 1,44

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 4
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 90			;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = 			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 6, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10			;Time attacker pauses, time opponent shakes
sparkno = 3				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -5		;Velocity at which opponent is pushed
airguard.velocity = -3.9,-.1	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -5.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 0

[State 1013, Shaking]
type = EnvShake
trigger1 = AnimElem = 4
freq = 60
ampl = -10
time = 5


[State 250, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;-------------------------------------------------------------------------------------------------------------------------------------------------------------------
;Dedede Dance (Big Gay Dance)

[Statedef 1100, Dedede Dance]
type    = S
movetype= A
physics = S
juggle  = 10
poweradd= -1000
ctrl = 0
velset = 0,0
anim = 1100

[State 1100, SuperPause]
type = SuperPause
trigger1 = time = 1
time = 25
anim = 100
pos = 0,0
movetime = 70
darken = 1
unhittable = 1

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 4,0
channel = 2

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 1
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 20, 10			;Damage that move inflicts, guard damage
animtype = Medium			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 3, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 20   		;Time attacker pauses, time opponent shakes
sparkno = 1				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S4, 2			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -8, -5		;Velocity at which opponent is pushed
airguard.velocity = -4.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -6.4,-5		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 0

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 7
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0


[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 7
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 18
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 18
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 0, Helper]
type = Helper
trigger1 = AnimElem = 18
name = "Gordo"
ID = 656
stateno = 656
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 29
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 29
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 40
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 40
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 0, Helper]
type = Helper
trigger1 = AnimElem = 40
name = "Gordolight"
ID = 657
stateno = 671
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 51
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 51
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 0, Projectile]
type = Projectile
trigger1 = AnimElem = 62
ProjID = 657
projanim = 657
projscale = 2,2
projremove = 1
projremovetime = 100
velocity = 4,0
remvelocity = 0,0
accel = 0,0
velmul = 1
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
projheightbound = -240
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 30,10
pausetime = 8,8
guard.pausetime = 4,4
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -1
guard.velocity = 0
air.velocity = 0,0

[State 700, Projectile]
type = Projectile
trigger1 = AnimElem = 62
ProjID = 700
projanim = 700
projscale = 2,2
projremove = 1
projremovetime = 150
velocity = 3,-4
remvelocity = 0,0
accel = 0,0
projhits = 1
projpriority = 1
projsprpriority = 3
projedgebound = 40
projstagebound = 40
offset = 65,-20
postype = p1         ;p2,front,back,left,right
projshadow = 0,0,0
supermovetime = 0
pausemovetime = 0
attr = S,SP        ;SCA,NA,SA,HA,NP,SP,HP,NT,ST,HT
hitflag = MAF        ;HLAFD+-
guardflag = MA         ;HLA
animtype = light          ;light,medium,hard,back,up,diagup
air.animtype = light
fall.animtype = Back
priority = 4,Hit   ;Hit,Miss,Dodge
damage = 50,20
pausetime = 10,10
guard.pausetime = 8,8
sparkno = 0
guard.sparkno = 0
sparkxy = 0,0
hitsound = 0,0
guardsound = 0,0
ground.type = High      ;Low,Trip,None
air.type = High
ground.slidetime = 0
guard.slidetime = 0
ground.hittime = 0
guard.hittime = 0
air.hittime = 20
guard.ctrltime  = 0
guard.dist = 320
yaccel = 0.5
ground.velocity = -4
guard.velocity = 0
air.velocity = -4,-2

[State 0, Helper]
type = Helper
trigger1 = AnimElem = 62
name = "Gordo"
ID = 656
stateno = 656
pos = 65,-20
postype = p1    ;p2,front,back,left,right
facing = 1
keyctrl = 0
ownpal = 0
supermovetime = 0
pausemovetime = 0
size.xscale = 0.8
size.yscale = 0.8

[State 1000, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;-------------------------------------------------------------------------------------------------------------------------------------
;Dedede Super Attempt
[Statedef 1310]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= -3000
ctrl = 0
anim = 1300

[State 1100, SuperPause]
type = SuperPause
trigger1 = time = 1
time = 45
anim = 100
sound = S0,22
pos = 0,0
movetime = 70
darken = 1
unhittable = 1


[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 2
value = 1,47
channel = 2

[State 0, StopSnd]
type = StopSnd
trigger1 = AnimTime = 0
channel = 2

[State 800, 1]
type = HitDef
Trigger1 = Time = 0
attr = S, NT          ;Attributes: Standing, Normal Throw
hitflag = M-          ;Affect only ground people who are not being hit
priority = 1, Miss    ;Throw has low priority, must be miss or dodge type.
sparkno = -1          ;No spark
p1sprpriority = 1       ;Draw in front of p2
p1facing = ifelse (command = "holdfwd", -1, 1) ;Turn if holding forwards
p2facing = 1          ;Force p2 to face player
p1stateno = 1300      ;On success, player changes to state 810
p2stateno = 1320     ;If hit, p2 changes to state 820 in player's cns
fall = 1              ;Force p2 into falling down

[State 800, 2]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
; Opponent Thrown
; (a custom gethit state)
; Description: This is the state that the opponent changes to after being
;     hit by the throw HitDef. The important thing here is to use a
;     ChangeAnim2 controller. The difference between ChangeAnim2 and
;     ChangeAnim is that ChangeAnim2 changes the player's animation to
;     an action in the AIR file of the attacker (in this case, kfm.air),
;     whereas ChangeAnim always changes the player to an action in his
;     own AIR file. Look at Action 820 in kfm.air for some extra
;     comments.
[Statedef 1320]
type    = A
movetype= H
physics = N
velset = 0,0


[State 570, 1]
type = ChangeAnim2
Trigger1 = Time = 0
value = 1320

;---------------------------------------------------------------------------
; Opponent thrown into the air
; (a custom gethit state)
; Description: This state has the opponent flying through the air and
;     falling down onto the ground. The SelfState controller sets the
;     opponent back using to his own state file when he his the ground.
;     Controllers 821,2 and 821,3 allow the opponent to recover by
;     hitting his recovery command when he is falling.
[Statedef 1325]
type    = A
movetype= H
physics = N
velset = 8,0
poweradd = 40
sprpriority = -1


[State 821, 1] ;Gravity
type = VelAdd
Trigger1 = 1
y = .4

[State 821, 2] ; Recover near ground (use ChangeState)
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;HITFALL_RECOVER

[State 821, 3] ; Recover in mid air (use SelfState)
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;HITFALL_AIRRECOVER

[State 821, 4] ;Hit ground
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100 ;Hit ground


;-------------------------------------------------------------------------------------------------------------------------------------
;Dedede Super
[Statedef 1300]
type    = S
movetype= A
physics = N
anim = 1310
sprpriority = 2

[State 0, StopSnd]
type = StopSnd
trigger1 = AnimElem = 1
channel = 2

[State 410, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 1,12

[State 181, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 1
value = 0,11

[State 810, TargetBind]
type = TargetBind
trigger1 = AnimElem = 1
pos = 65, 0

[State 810, State End]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 39
value = 0,10

[State 250, PlaySnd]
type = PlaySnd
trigger1 = AnimElem = 42
value = 2,0

[State 1013, Shaking]
type = EnvShake
trigger1 = AnimElem = 42
freq = 170
ampl = -10
time = 20



[State 0, TargetState]
type = TargetState
triggerall = NumTarget;()
trigger1 = AnimElem = 43,
value = 571


[State 654, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


[State 1300, 2]
type = HitDef
trigger1 = AnimElem = 15 || AnimElem = 23 || AnimElem = 31 
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 105, 95    		;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = 			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 6, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 100			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 1			;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = 0		;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 0


[State 1300, 3]
type = HitDef
trigger1 = AnimElem = 42
attr = S, NA			;Attribute: Standing, Normal Attack
damage = 240, 200    		;Damage that move inflicts, guard damage
animtype = Heavy			;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = 			;Flags on how move is to be guarded against
hitflag = MAF			;Flags of conditions that move can hit
priority = 6, Hit			;Attack priority: 0 (least) to 7 (most), 4 default
					;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 10			;Time attacker pauses, time opponent shakes
sparkno = 0				;Spark anim no (Def: set above)
sparkxy = -10, -35		;X-offset for the "hit spark" rel. to p2,
					;Y-offset for the spark rel. to p1
hitsound = S2, 3		;Sound to play on hit
guardsound = 6, 0			;Sound to play on guard
ground.type = High		;Type: High, Low, Trip (def: Normal)
ground.slidetime = 12		;Time that the opponent slides back
ground.hittime  = 12		;Time opponent is in hit state
ground.velocity = -15,-15		;Velocity at which opponent is pushed
airguard.velocity = -10.9,-5.8	;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High			;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -15.4,-15		;X-velocity at which opponent is pushed,
					;Y-velocity at which opponent is pushed
air.hittime = 12
fall = 1



[State 1300, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1











;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------

[Statedef -2]

[State -2, Get Hit Sounds]
type = PlaySnd
triggerall = alive && time = 1
trigger1 = (stateno = 5000 || stateno = 5010 || stateno = 5020 || stateno = 5070 || stateno = 5080)
trigger1 = enemynear,hitdefattr = SCA,NA,SA,HA
trigger1 = random < 666
value = S0,24+(random%4)
volume = 255
channel = -1
;--------------------
; KO Scream
[State -2, VarSet]
type = VarSet
trigger1 = Alive
trigger1 = Life > 0
ignorehitpause = 1
v = 55
value = -1
     
[State -2, VarAdd]
type = VarAdd
trigger1 = Alive <= 0
trigger1 = Life <= 0
trigger1 = Var(55) <= 10
ignorehitpause = 1
v = 55
value = 1
     
[State -2, PlaySnd]
Type = PlaySnd
triggerall = Alive <= 0
triggerall = Life <= 0
trigger1 = Var(55) = 0
value = 0, 29

[State -2, StopSnd]
type = StopSnd
trigger1 = movetype = H
channel = 2

[State -2, StopSnd]
type = StopSnd
trigger1 = Pos Y >= 0
channel = 3
 

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime the player lands from a jump, or
;from a back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0

[State -3, Jumping Sound]
type = PlaySnd
triggerall = Time = 6 ;Whenever you want the sound to play
trigger1 = stateno = 40 ;This is the jumping state
value = 1, 10


