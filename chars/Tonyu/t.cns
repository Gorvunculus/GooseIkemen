
;===========================================================================
; コンスタンツ（定数）
;===========================================================================
;---------------------------------------------------------------------------
; ここがキャラの心臓部とも言うべき場所。
; １キャラ単位のライフや大きさなど、標準のステータスを予め決めておく部分。
; このコーナー自体省略出来ません。
;---------------------------------------------------------------------------
; 基本データ
;---------------------------------------------------------------------------
[Data]
life              = 1000   ;ライフ（体力ゲージ）最大値
power             = 6000   ;パワーゲージ最大値（オプション・デフォルトは3000=Lv.3）
attack            = 90    ;攻撃力（デフォルトは１００％）
defence           = 88    ;防御力（デフォルトは１００％）
fall.defence_up   = 50     ;横に倒れている時に一時的に加える防御力（％）
liedown.time      = 60     ;横に倒れている時間（フレーム）
airjuggle         = 15     ;ジャグルポイント限界値（「小ネタ.txt」参照）
sparkno           = 2      ;デフォルトのヒットスパーク（fightfxから）
guard.sparkno     = 40     ;デフォルトのガードスパーク（fightfxから）
KO.echo           = 0      ;ＫＯ時の音声（11,0）にエコーを掛けるか否か（0=掛けない,1=掛ける）
volume            = 0      ;キャラの標準の音量（最小-255・最大255）
IntPersistIndex   = 50;59  ;次のラウンドへ持ち越せる「Var」のアドレスの範囲を決める（※１）
FloatPersistIndex = 40     ;次のラウンドへ持ち越せる「FVar」のアドレスの範囲を決める（※１）

;---------------------------------------------------------------------------
; ※１：変数のラウンド持ち越し方法
;
; 　変数を次のラウンドへ持ち越したい場合は、↑の
; 　「IntPersistIndex」と「FloatPersistIndex」を使う。
; 　そのやり方はM.U.G.E.Nの説明書にすら載ってないので、ここで例を元に解説。
;
; 　①IntPersistIndex = 23　（Var(23)～Var(59)までを全て次のラウンドへ持ち越せる）
; 　②FloatPersistIndex = 18（FVar(18)～FVar(39)までを全て次のラウンドへ持ち越せる）
;
; 　つまり「Var(**)（Fvar(**)）以降全ての変数を持ち越す」という命令になる。
; 　それ以前のアドレスの変数は全て持ち越さなくなる。
;
; 　全ての変数を持ち越さない場合は、
; 　IntPersistIndexは60以上、FloatPersistIndexは40以上にしておこう。
;
; 　×これはダメ×
; 　　①IntPersistIndex = 10,15,20,25　（15,20,25の部分は意味無し）
; 　　②FloatPersistIndex = 4,16 　　　（16の部分は意味無し）
; 　　これらは最初の数字以外全て無効。
; 
;---------------------------------------------------------------------------
; 改訂前の和訳ＫＦＭではPersistIndexの解釈が無茶苦茶間違ってました。
; 大変失礼致しました。(人・ω・｀)ごめんなさい
; 今回はちゃんと調べて正確な情報を載せてるんで安心してください（苦笑
;---------------------------------------------------------------------------
; サイズ
;---------------------------------------------------------------------------
[Size]
xscale           = 1       ;キャラの横の大きさ（絶対値・float）
yscale           = 1       ;キャラの縦の大きさ（絶対値・float）
ground.back      = 15      ;地上にいる時の「後方の物理的な幅」
ground.front     = 16      ;地上にいる時の「前方の物理的な幅」
air.back         = 12      ;空中にいる時の「後方の物理的な幅」
air.front        = 12      ;空中にいる時の「前方の物理的な幅」
height           = 60      ;キャラの物理的な高さ（高いほど相手は飛び越しにくくなる）
attack.dist      = 160     ;相手がガード態勢に入る最低の距離
proj.attack.dist = 90      ;自分の「Projectile」に対して相手がガード態勢に入る最低の距離
proj.doscale     = 0       ;xscaleとyscaleを「Projectile」にも影響させるか否か（0=させない・1=させる）
head.pos         = -5,-90  ;キャラの標準の頭の座標（Bind系で適用される）
mid.pos          = -5,-60  ;キャラの標準の体中心の座標（Bind系で適用される）
shadowoffset     = 0       ;影のＹ軸方向の位置座標
draw.offset      = 0,0     ;キャラの表示座標（Ｘ軸,Ｙ軸）

;---------------------------------------------------------------------------
; 移動速度
;---------------------------------------------------------------------------
[Velocity]
walk.fwd     = 5.5      ;前進速度（Ｘ軸・[Statedef 20]に適用される）
walk.back    = -5.5      ;後退速度（Ｘ軸・[Statedef 20]に適用される）
run.fwd      = 9,0       ;前方に走る速度（Ｘ軸,Ｙ軸・[Statedef 100]に適用される）
run.back     = -9,-4   ;後方に走る速度（Ｘ軸,Ｙ軸・[Statedef 105]に適用される）
jump.neu     = 0,-8.4      ;垂直ジャンプの速度（Ｘ軸,Ｙ軸・[Statedef 40]に適用される）
jump.back    = -2.55       ;後方ジャンプの速度（Ｘ軸・[Statedef 40]に適用される）
jump.fwd     = 2.5         ;前方ジャンプの速度（Ｘ軸・[Statedef 40]に適用される）
runjump.back = -6,-8.1  ;後方に走ってからのジャンプ速度（Ｘ軸,Ｙ軸・[Statedef 40]に適用される）
runjump.fwd  = 9,-8.1      ;前方に走ってからのジャンプ速度（Ｘ軸,Ｙ軸・[Statedef 40]に適用される）
airjump.neu  = 0,-8.1      ;空中垂直ジャンプ速度（Ｘ軸,Ｙ軸・[Statedef 45]に適用される）
airjump.back = -2.55       ;空中後方ジャンプ速度（Ｘ軸・[Statedef 45]に適用される）
airjump.fwd  = 2.5         ;空中前方ジャンプ速度（Ｘ軸・[Statedef 45]に適用される）

;---------------------------------------------------------------------------
; 運動関係
;---------------------------------------------------------------------------
[Movement]
airjump.num     = 3        ;空中ジャンプが出来る回数
airjump.height  = 35       ;空中ジャンプが出来る最低の高度（Ｙ軸）
yaccel          = .25      ;Ｙ軸加速度（重力）
stand.friction  = .85      ;立っている時の摩擦係数（ステートのPhysicsが「S」の時）
crouch.friction = .82      ;しゃがんでいる時の摩擦係数（ステートのPhysicsが「C」の時）

;===========================================================================
; ステート
;===========================================================================
;---------------------------------------------------------------------------
; ここからはキャラのそれぞれの行動（ステート）を設定する。
; 番号（ステートナンバー）に気を付ければ良いだけで、
; 行動の決め方もステートの数も作りたいキャラによって自由。
;
; 本来ステートは別のファイルとして扱っているものだけど、
; このようにコンスタンツファイルと一緒にまとめる事も可能。
;
; ステートの基本的な設定はおまけフォルダの「テンプレート.txt」を参照。
;===========================================================================
; 基本行動
;===========================================================================
;---------------------------------------------------------------------------
; Walk(FWD) AI
[Statedef 19]
type    = S
physics = S
sprpriority = 0
ctrl = 0

[State 19, 1]
type = VelSet
trigger1 = 1
x = const(velocity.walk.fwd.x)

[State 19, 3]
type = ChangeAnim
trigger1 = Anim != 20
value = 20

[State 19, Ctrl]
type = ChangeState
trigger1 = P2Dist x<0
trigger2 = roundstate!=2
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; Walk(BACK) AI
[Statedef 21]
type    = S
physics = S
sprpriority = 0
ctrl = 0

[State 21, 2]
type = VelSet
trigger1 = 1
x = const(velocity.walk.back.x)

[State 21, 4]
type = ChangeAnim
trigger1 = Anim != 21
value = 21

[State 21, Ctrl]
type = ChangeState
trigger1 = P2Dist x<0
trigger2 = roundstate!=2
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Walk Stop AI
[State -1, AI]
Type = ChangeState
triggerall = (stateno=19||stateno=21)
trigger1 = var(59)<0
trigger2 = roundstate!=2
Value = 0
Ctrl = 1

[State -1, AI]
Type = ChangeState
triggerall = (stateno=19||stateno=21)&&(var(59)>0)
trigger1 = time > 12 || var(59)>8
trigger1 = P2bodydist x < 30
Trigger1 = anim = 20
trigger2 = time > 24 || var(59)>8
trigger2 = P2bodydist x >= 90
Trigger2 = anim = 21
trigger3 = inguarddist
Trigger3 = Anim = 21 || Random < 60*(var(59)-1)||var(59) >8
trigger4 = roundstate != 2
Value = 0
Ctrl = 1

;---------------------------------------------------------------------------
; Jump Start
[Statedef 40]
type    = S
physics = S
anim = 40
ctrl = 0
sprpriority = 1

[State -1, AI]
Type = ChangeState
TriggerAll = Var(59) >= 1
Trigger1 = Time = 0
Value = 21

[State 40, 1]
type = VarSet
trigger1 = Time = 0
sysvar(1) = 0

[State 40, 2]
type = VarSet
trigger1 = command = "holdfwd"
sysvar(1) = 1

[State 40, 3]
type = VarSet
trigger1 = command = "holdback"
sysvar(1) = -1

[State 40, 4]
type = VelSet
trigger1 = AnimTime = 0
x = ifelse(sysvar(1)=0, const(velocity.jump.neu.x), ifelse(sysvar(1)=1, const(velocity.jump.fwd.x), const(velocity.jump.back.x)))
y = const(velocity.jump.y)

[State 40, 5]
type = VelSet
trigger1 = AnimTime = 0
trigger1 = prevstateno = 100 ;RUN_FWD
trigger1 = sysvar(1) = 1
x = const(velocity.runjump.fwd.x)

[State 40, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; Jump Start(AI)
[Statedef 41]
type    = S
physics = S
anim = 40
ctrl = 0
sprpriority = 1

[State 41, 1]
type = VarSet
trigger1 = Time = 0
sysvar(1) = 0

[State 40, 2]
type = VarSet
trigger1 = var(59)>0
trigger1 = sysvar(1)!=-1
;trigger1 = command = "holdfwd"
sysvar(1) = 1

[State 40, 3]
type = VarSet
trigger1 = var(59)=0
trigger1 = command = "holdback"
trigger2 = var(59)>0
Trigger2 = EnemyNear(var(50)),MoveType != H
Trigger2 = BackEdgeBodyDist>60
trigger2 = p2bodydist x <= 60 && (enemynear(var(50)),backedgebodydist <= 15 || EnemyNear(var(50)),StateType = L)
Trigger2 = Random <= 200
sysvar(1) = -1

[State 41, 4]
type = VelSet
trigger1 = AnimTime = 0
x = ifelse(sysvar(1)=0, const(velocity.jump.neu.x), ifelse(sysvar(1)=1, const(velocity.jump.fwd.x), const(velocity.jump.back.x)))
y = const(velocity.jump.y)

[State 41, 5]
type = VelSet
trigger1 = AnimTime = 0
trigger1 = prevstateno = 100 || prevstateno = 99;RUN_FWD
trigger1 = sysvar(1) = 1
x = const(velocity.runjump.fwd.x)

[State 41, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1

;---------------------------------------------------------------------------
; RUN_FWD(AI)
[Statedef 99]
type    = S
physics = S
anim = 100
Ctrl = 0
sprpriority = 1

[State 99, 1]
type = VelSet
trigger1 = 1
x = const(velocity.run.fwd.x)

[State 99, 2] ;Prevent run from canceling into walk
type = AssertSpecial
trigger1 = 1
flag = NoWalk

[State 99, 3] ;Prevent from turning
type = AssertSpecial
trigger1 = 1
flag = NoAutoTurn

[State 04,AI]
type = ChangeState
triggerall = var(59)>=1
triggerall = stateno = 99 && time>=10
Trigger1 = inguarddist
Trigger2 = EnemyNear,MoveType!=H
Trigger2 = P2BodyDist X<=30
Trigger2 = P2BodyDist Y>=-120
trigger2 = random<=var(59)*15
Trigger3 = P2BodyDist X=[10,30]
trigger3 = random<=var(59)*15
trigger4 = RoundState != 2 
trigger5 = p2bodydist x <= 5
trigger6 = p2bodydist x = [31,60]
trigger6 = random<=var(59)*20
trigger7 = P2BodyDist X = [61,90]
trigger7 = random <= var(59)*10
trigger8 = time = 60
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; GUARD (start)
[Statedef 120]
type = U    ;Leave state type unchanged
physics = U ;Leave physics unchanged

[State 120, 1]
type = ChangeAnim
trigger1 = Time = 0
value = 120 + (statetype = C) + (statetype = A)*2

[State 120, 2]
type = StateTypeSet
trigger1 = Time = 0 && statetype = S
physics = S

[State 120, 3]
type = StateTypeSet
trigger1 = Time = 0 && statetype = C
physics = C

[State 120, 4]
type = StateTypeSet
trigger1 = Time = 0 && statetype = A
physics = A

[State 120, Hi to Lo]
type = StateTypeSet
TriggerAll=Statetype = S
Trigger1 = var(59) = 0
Trigger1 = command = "holddown"
Trigger2 = var(59) >= 1
Trigger2 = EnemyNear,StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
trigger2 = EnemyNear(Var(50)),stateno!=var(51) && EnemyNear(Var(50)),stateno!=var(52)
statetype = C
physics = C

[State 120, Lo to Hi]
type = StateTypeSet
TriggerAll=Statetype = C
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear,StateType=A || EnemyNear(Var(50)),stateno=var(51) || EnemyNear(Var(50)),stateno=var(52)
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
statetype = S
physics = S

[State 120, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 130 + (statetype = C) + (statetype = A)*2

[State 120, Stop Guarding]
type = ChangeState
Trigger1 = var(59) = 0
trigger1 = command != "holdback"
trigger2 = !inguarddist
Trigger3 = var(59)=[1,9]
Trigger3 = P2BodyDist X<0
Trigger3 = Random <= (10-var(59))*40
value = 140

;---------------------------------------------------------------------------
; STAND GUARD (guarding)
[Statedef 130]
type    = S
physics = S

[State 130, 1]
type = ChangeAnim
trigger1 = Anim != 130
value = 130

[State 130, Hi to Lo]
type = ChangeState
Trigger1 = var(59)=0
Trigger1 = command = "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear(var(50)),StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = enemynear(var(50)),stateno!=var(51) && enemynear(var(50)),stateno!=var(52)
value = 131

[State 130, Stop Guarding]
type = ChangeState
Trigger1 = var(59) = 0
trigger1 = command != "holdback"
trigger2 = !inguarddist
Trigger3 = var(59)=[1,9]
Trigger3 = P2BodyDist X<0
Trigger3 = Random <= (10-var(59))*40
value = 140

;---------------------------------------------------------------------------
; CROUCH GUARD (guarding)
[Statedef 131]
type    = C
physics = C

[State 131, 1]
type = ChangeAnim
trigger1 = Anim != 131
value = 131

[State 131, Lo to Hi]
type = ChangeState
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear(var(50)),StateType=A || enemynear(var(50)),stateno=var(51) || EnemyNear(Var(50)),stateno=var(52)
Trigger2 = Random <= var(59)*20||var(59)>9
value = 130

[State 131, Stop Guarding]
type = ChangeState
Trigger1 = var(59) = 0
trigger1 = command != "holdback"
trigger2 = !inguarddist
Trigger3 = var(59)=[1,9]
Trigger3 = P2BodyDist X<0
Trigger3 = Random <= (10-var(59))*40
value = 140

;---------------------------------------------------------------------------
; AIR GUARD (guarding)
[Statedef 132]
type    = A
physics = N

[State 132, 1]
type = ChangeAnim
trigger1 = Anim != 132
value = 132

[State 132, 2]
type = VelAdd
trigger1 = 1
y = Const(movement.yaccel)

[State 132, 3]
type = VarSet
trigger1 = 1
sysvar(0) = (pos y >= 0) && (vel y > 0)

[State 132, 4]
type = VelSet
trigger1 = sysvar(0)
y = 0

[State 132, 5]
type = PosSet
trigger1 = sysvar(0)
y = 0

[State 132, 6]
type = ChangeState
trigger1 = sysvar(0)
trigger1 = command = "holdback"
trigger1 = inguarddist
value = 130

[State 132, 7]
type = ChangeState
trigger1 = sysvar(0)
value = 52

[State 132, Stop Guarding]
type = ChangeState
trigger1 = command != "holdback"
Trigger1 = var(59) = 0
trigger2 = !inguarddist
Trigger3 = var(59)=[1,9]
Trigger3 = P2BodyDist X<0
Trigger3 = Random <= (10-var(59))*40
value = 140

;---------------------------------------------------------------------------
; GUARD (end)
[Statedef 140]
type = U    ;Leave state type unchanged
physics = U ;Leave physics unchanged
ctrl = 1

[State 140, 1]
type = ChangeAnim
trigger1 = Time = 0
value = 140 + (statetype = C) + (statetype = A)*2

[State 140, 2]
type = StateTypeSet
trigger1 = Time = 0 && statetype = S
physics = S

[State 140, 3]
type = StateTypeSet
trigger1 = Time = 0 && statetype = C
physics = C

[State 140, 4]
type = StateTypeSet
trigger1 = Time = 0 && statetype = A
physics = A

[State 120, Hi to Lo]
type = StateTypeSet
TriggerAll=Statetype = S
Trigger1 = var(59) = 0
Trigger1 = command = "holddown"
Trigger2 = var(59) >= 1
Trigger2 = EnemyNear(Var(50)),StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
trigger2 = EnemyNear(Var(50)),stateno!=var(52) && EnemyNear(Var(50)),stateno!=var(51)
statetype = C
physics = C

[State 120, Lo to Hi]
type = StateTypeSet
TriggerAll=Statetype = C
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear(Var(50)),StateType=A || EnemyNear(Var(50)),stateno=var(52) || EnemyNear(Var(50)),stateno=var(51)
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
statetype = S
physics = S

;[State 140, 5] ;Implemented within engine
;type = ChangeState
;trigger1 = AnimTime = 0
;value = (statetype = C)*11 + (statetype = A)*51

;---------------------------------------------------------------------------
; SGUARDHIT (shaking)
[Statedef 150]
type    = S
movetype= H
physics = N
velset = 0,0

[State 150, 1]
type = ChangeAnim
trigger1 = 1
value = 150

[State 150, 2]
type = ChangeState
trigger1 = HitShakeOver
value = 151 + 2*ifelse(var(59)=0,(command = "holddown"),(enemynear,statetype=C))

[State 120, Hi to Lo]
type = StateTypeSet
TriggerAll=Statetype = S
Trigger1 = var(59) = 0
Trigger1 = command = "holddown"
Trigger2 = var(59) >= 1
Trigger2 = EnemyNear,StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
trigger2 = EnemyNear(Var(50)),stateno!=var(51) && EnemyNear(Var(50)),stateno!=var(52)
statetype = C
physics = C

[State 120, Lo to Hi]
type = StateTypeSet
TriggerAll=Statetype = C
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear,StateType=A || EnemyNear(Var(50)),stateno=var(51) || EnemyNear(Var(50)),stateno=var(52)
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
statetype = S
physics = S

[State 150, 3]
type = ForceFeedback
trigger1 = time = 0
waveform = square
time = 3

;---------------------------------------------------------------------------
; SGUARDHIT2 (knocked back)
[Statedef 151]
type    = S
movetype= H
physics = S
anim = 150

[State 151, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 151, 2]
type = VelSet
trigger1 = Time = GetHitVar(slidetime)
trigger2 = HitOver
x = 0

[State 151, 3]
type = CtrlSet
trigger1 = Time = GetHitVar(ctrltime)
value = 1

[State 120, Hi to Lo]
type = StateTypeSet
TriggerAll=Statetype = S
Trigger1 = var(59) = 0
Trigger1 = command = "holddown"
Trigger2 = var(59) >= 1
Trigger2 = EnemyNear,StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
trigger2 = EnemyNear(Var(50)),stateno!=var(51) && EnemyNear(Var(50)),stateno!=var(52)
statetype = C
physics = C

[State 120, Lo to Hi]
type = StateTypeSet
TriggerAll=Statetype = C
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear,StateType=A || EnemyNear(Var(50)),stateno=var(51) || EnemyNear(Var(50)),stateno=var(52)
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
statetype = S
physics = S

[State 151, 4]
type = ChangeState
trigger1 = HitOver
value = 130
ctrl = 1

;---------------------------------------------------------------------------
; CGUARDHIT (shaking)
[Statedef 152]
type    = C
movetype= H
physics = N
velset = 0,0

[State 152, 1]
type = ChangeAnim
trigger1 = 1
value = 151

[State 152, 3]
type = ChangeState
trigger1 = HitShakeOver
value = 151 + 2*ifelse(var(59)=0,(command = "holddown"),(enemynear,statetype=C))

[State 120, Hi to Lo]
type = StateTypeSet
TriggerAll=Statetype = S
Trigger1 = var(59) = 0
Trigger1 = command = "holddown"
Trigger2 = var(59) >= 1
Trigger2 = EnemyNear,StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
trigger2 = EnemyNear(Var(50)),stateno!=var(51) && EnemyNear(Var(50)),stateno!=var(52)
statetype = C
physics = C

[State 120, Lo to Hi]
type = StateTypeSet
TriggerAll=Statetype = C
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear,StateType=A || EnemyNear(Var(50)),stateno=var(51) || EnemyNear(Var(50)),stateno=var(52)
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
statetype = S
physics = S

[State 152, 4]
type = ForceFeedback
trigger1 = time = 0
waveform = square
time = 4

;---------------------------------------------------------------------------
; CGUARDHIT2 (knocked back)
[Statedef 153]
type    = C
movetype= H
physics = C
anim = 151

[State 153, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 153, 2]
type = VelSet
trigger1 = Time = GetHitVar(slidetime)
trigger2 = HitOver
x = 0

[State 153, 3]
type = CtrlSet
trigger1 = Time = GetHitVar(ctrltime)
value = 1

[State 120, Hi to Lo]
type = StateTypeSet
TriggerAll=Statetype = S
Trigger1 = var(59) = 0
Trigger1 = command = "holddown"
Trigger2 = var(59) >= 1
Trigger2 = EnemyNear,StateType!=A
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
trigger2 = EnemyNear(Var(50)),stateno!=var(51) && EnemyNear(Var(50)),stateno!=var(52)
statetype = C
physics = C

[State 120, Lo to Hi]
type = StateTypeSet
TriggerAll=Statetype = C
Trigger1 = var(59)=0
Trigger1 = command != "holddown"
Trigger2 = var(59)>=1
Trigger2 = EnemyNear,StateType=A || EnemyNear(Var(50)),stateno=var(51) || EnemyNear(Var(50)),stateno=var(52)
Trigger2 = Random <= var(59)*20||var(59)>9
trigger2 = statetype != A
statetype = S
physics = S

[State 153, 4]
type = ChangeState
trigger1 = HitOver
value = 131
ctrl = 1

;---------------------------------------------------------------------------
; AGUARDHIT (shaking)
[Statedef 154]
type    = A
movetype= H
physics = N
velset = 0,0

[State 154, 1]
type = ChangeAnim
trigger1 = 1
value = 152

[State 154, 2]
type = ChangeState
trigger1 = HitShakeOver
value = 155 ;AGUARDHIT2

[State 154, 3]
type = ForceFeedback
trigger1 = time = 0
waveform = square
time = 4

;---------------------------------------------------------------------------
; AGUARDHIT2 (knocked away)
[Statedef 155]
type    = A
movetype= H
physics = N
anim = 152

[State 155, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 155, 2]
type = VelAdd
trigger1 = 1
y = Const(movement.yaccel)

[State 155, 3]
type = CtrlSet
trigger1 = Time = GetHitVar(ctrltime)
value = 1

[State 155, 4]
type = VarSet
trigger1 = 1
sysvar(0) = (pos y >= 0) && (vel y > 0)

[State 155, 5]
type = VelSet
trigger1 = sysvar(0)
y = 0

[State 155, 6]
type = PosSet
trigger1 = sysvar(0)
y = 0

[State 155, 6]
type = ChangeState
trigger1 = sysvar(0)
trigger1 = command = "holdback"
trigger1 = inguarddist
value = 130

[State 155, 7]
type = ChangeState
trigger1 = sysvar(0)
value = 52

;---------------------------------------------------------------------------
;タイムオーバー（負けた時）
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 無敵]
type = NotHitBy
trigger1 = 1 ;トリガーを何も書かず「1」にする事により、『無条件で常に実行させる命令』になる。
value = SCA
time = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;勝利ポーズ分岐（common1.cnsには無いけど、これもコモンステート）
[Statedef 180]
type = S

[State 180, ステート変更]
type = ChangeState
trigger1 = Time = 0
value = 181+(random%3)

;---------------------------------------------------------------------------
;勝利ポーズ（礼をする）
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 8, 0

[State 181, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;勝利ポーズ（礼をする）
[Statedef 182]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 182, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 9,1 

[State 182, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1




[Statedef 183]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 182, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 9,2 

[State 182, 無敵]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;イントロ（試合開始前の登場演出アクション）

[Statedef 190]
type = S
ctrl = 0
anim = 0
velset = 0,0

[State -2, 3]
type = ChangeState
trigger1 =NumEnemy = 2
value = 195


[State 190, 1]
type = ChangeState
trigger1 = Time = 0
value = 191+(random%4)


[Statedef 191]
type = S
ctrl = 0
anim = 11
velset = 0,0

[State 191, アニメ変更];バトル画面に切り替わった瞬間のフェードインの時、アニメを固定している
type = ChangeAnim
trigger1 = RoundState = 0
value = 11

[State 191, 特殊効果];試合が開始するまではこのコントローラを使おう（※２）
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態

[State 191, 音を鳴らす];蹴った瞬間の音
type = PlaySnd
trigger1 = time = 1
value = 8,1

[State 191, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = Animtime = 0
value = 0






[Statedef 192]
type = S
ctrl = 0
anim = 3055
velset = 0,0

[State 192, アニメ変更];バトル画面に切り替わった瞬間のフェードインの時、アニメを固定している
type = ChangeAnim
trigger1 = RoundState = 0
value = 3055

[State 192, 特殊効果];試合が開始するまではこのコントローラを使おう（※２）
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態

[State 192, 音を鳴らす];蹴った瞬間の音
type = PlaySnd
trigger1 = time = 111
value = 8,2


[State 192, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = Animtime = 0
value = 0



[Statedef 193]
type = S
ctrl = 0
anim = 11
velset = 0,0

[State 193, アニメ変更];バトル画面に切り替わった瞬間のフェードインの時、アニメを固定している
type = ChangeAnim
trigger1 = RoundState = 0
value = 11

[State 193, 特殊効果];試合が開始するまではこのコントローラを使おう（※２）
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態

[State 193, 音を鳴らす];蹴った瞬間の音
type = PlaySnd
trigger1 = time = 51
value = 8,3


[State 193, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = Animtime = 0
value = 0




[Statedef 194]
type = S
ctrl = 0
anim = 3055
velset = 0,0

[State 193, アニメ変更];バトル画面に切り替わった瞬間のフェードインの時、アニメを固定している
type = ChangeAnim
trigger1 = RoundState = 0
value = 3055

[State 193, 特殊効果];試合が開始するまではこのコントローラを使おう（※２）
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態

[State 193, 音を鳴らす];蹴った瞬間の音
type = PlaySnd
trigger1 = time = 111
value = 8,4


[State 193, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = Animtime = 0
value = 0


[Statedef 195]
type = S
ctrl = 0
anim = 11
velset = 0,0

[State 191, アニメ変更];バトル画面に切り替わった瞬間のフェードインの時、アニメを固定している
type = ChangeAnim
trigger1 = RoundState = 0
value = 11

[State 191, 特殊効果];試合が開始するまではこのコントローラを使おう（※２）
type = AssertSpecial
trigger1 = 1
flag = Intro ;イントロの状態

[State 191, 音を鳴らす];蹴った瞬間の音
type = PlaySnd
trigger1 = time = 1
value = 8,5

[State 191, ステート変更];アニメーションが終われば「通常立ち」のステートに変更する
type = ChangeState
trigger1 = Animtime = 0
value = 0



;---------------------------------------------------------------------------
; ※２：AssertSpecial
;
; 　他のコントローラでは設定出来ない『特殊な効果』を指定する命令。
; 　設定したトリガーが有効になってる間だけ一時的に適用される。
;
; 　適用出来るパラメータはこのコントローラを一つ設置する場合、最大３つまで。
; 　書式としては「flag」「flag2」「flag3」を順に加えていく形。
; 　flag2とflag3はオプション。ではその特殊効果を全て紹介。
;
; 　Intro          = イントロ（試合開始前の登場演出アクション）の状態になる。イントロステート専用。
; 　Invisible      = 自分の姿を消す。しかし残像（AfterImage）は消せない。
; 　RoundNotOver   = 現在のラウンドを過ぎない。勝利ポーズ専用。
; 　NoBarDisplay   = ライフバーを非表示にする。
; 　NoBG           = ステージの奥の画像を非表示にし、「真っ黒の背景」にする。
; 　NoFG           = ステージの手前の画像を非表示にする。
; 　NoStandGuard   = 立ちガードが出来なくなる。
; 　NoCrouchGuard  = しゃがみガードが出来なくなる。
; 　NoAirGuard     = 空中ガードが出来なくなる。
; 　NoAutoTurn     = 自動で振り向かない。
; 　NoJuggleCheck  = ジャグルをチェックしない。（ジャグルポイントが減らなくなる）
; 　NoKOSnd        = ＫＯ時の音声（11,0）を鳴らさないようにする。画面中に存在する全員に有効なので注意。
; 　NoKOSlow       = ＫＯ時のスローモーションを無効にする。（ＫＯ直前に有効にしないといけない）
; 　NoShadow       = 自分の影を消す。
; 　GlobalNoShadow = 画面中に存在する全てのプレイヤー（ヘルパーとProjectileも含む）の影を消す。
; 　NoMusic        = 演奏しているＢＧＭを止める。（プラグインによってはＢＧＭがバグるので要注意）
; 　NoWalk         = 歩かない。（前か後ろのキーを入力中コントロールが可能の時に勝手に[Statedef 20]にならない）
; 　TimerFreeze    = タイムカウント（制限時間）を停止する。
; 　UnGuardable    = 自分の全ての攻撃が『ガード不可』になる。
;
;---------------------------------------------------------------------------
;挑発
[Statedef 196]
type = S
movetype = I
physics = S
ctrl = 0
anim = 195
velset = 0,0
sprpriority = 2

[State 195, コントロール]
type = CtrlSet
trigger1 = Time = 40 ;このステートが４０フレームになったら
value = 1            ;キーコントロールが可能になる。

[State 195, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1



;===========================================================================
; 通常攻撃技
;===========================================================================
;---------------------------------------------------------------------------
; 通常技はそんなに難しいテクニックは使ってないから、
; テンプレートを見ながら確認すれば覚えやすいと思う。
; 基本忘るべからず。
;
; ステートナンバーは、立ち技が２００～２９９、しゃがみ技が４００～４９９、
; ジャンプ技が６００～６９９の間で決めて作るのが一般的。
; しかし強制じゃないので自由に作っちゃってＯＫ。
;---------------------------------------------------------------------------
;立ち弱パンチ
[Statedef 200]
type    = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 200
poweradd = 7
sprpriority = 2
facep2 = 1

[State 200, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 200, ヒット定義]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA ;立ち通常打撃（Standing, Normal Attack）
damage = 20, 0
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 8, 8
sparkno = s2060
sparkxy = -10, -76
hitsound = s5, 0
getpower = 0,0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 10
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 200, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; 下の「立ち強パンチ」のステートを見てみましょ。
;
;「Width」のコントローラは相手や画面端を押すための『物理的な幅』を
; 一時的に伸ばしたり縮ませたりする命令。
; キャラの幅はバトル中に「Ctrl+C」を押して「判定ボックス」を表示させてる時に
; 一緒に確認出来る。「軸位置から伸びる黄緑色の線」がその幅。
;
; 後は「ChangeAnim」を使って５枚目で攻撃を当てたらすぐに６枚目に
; コマを進ませる命令をしてたり、
;『画像表示優先度』で「振りかぶる時は奥」「振り切った直後から手前」に
; モーション表示の操作をしてるくらいで、難しくない処理。
;
; これは余談だけど、Widthの読み方は「ウィッズ」。
; この解説文書いた時に初めて読み方知ったよ！　｡ﾟ(ﾟつД`ﾟ)ﾟ｡
;---------------------------------------------------------------------------
;立ち強パンチ
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 15
ctrl = 0
velset = 0,0
anim = 210
sprpriority = -1
facep2   = 1

[State 210, アニメ変更]
type = ChangeAnim
trigger1 = AnimElemTime(5) > 0 && AnimElemTime(6) <= 0
trigger1 = movecontact
value = 210
elem = 6
ignorehitpause = 1
persistent = 0

[State 210, 画像表示優先度]
type = SprPriority
trigger1 = AnimElem = 5
value = 2

[State 210, 物理的なキャラの幅]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0  ;この場合キャラの幅を一時的に前に１５ピクセル伸ばす事になる。
              ;値の意味は「前方のピクセル増減量,後方のピクセル増減量」

[State 210, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 2
value = 0, 4

[State 210, ファイヤ！！]
type = PlaySnd
trigger1 = Time = 0
trigger1 = Random <= 400
value = 15, 0

[State 210, ヒット定義]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Medium
damage    = 40
guardflag = MA
getpower = 0,0
pausetime = 12,12
sparkno = s2065
sparkxy = -10,-70
hitsound   = s13,0
guardsound = 6,0
ground.type = High
ground.slidetime = 12
ground.hittime  = 13
ground.velocity = -5.5
air.velocity = -2.5,-4

[State 210, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;立ち弱キック
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 12
ctrl = 0
velset = 0,0
anim = 230
sprpriority = 2
facep2   = 1

[State 230, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 2
value = 13, 2

[State 230, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, NA
animtype  = diagup
damage    = 76,25
guardflag = HA
pausetime = 12,12
sparkno = s3061
sparkxy = -10,-77
hitsound   = s13,1
guardsound = 6,0
ground.type = high
ground.slidetime = 10
ground.hittime  = 11
ground.velocity = -5,-10
air.velocity = -2.5,-3.5

[State 230, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;立ち強キック
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 35
ctrl = 0
velset = 0,0
anim = 240
sprpriority = 2
facep2   = 1


[State 240, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 2
value = 0, 0

[State 240, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, NA
animtype  = Medium
damage    = 63,10
guardflag = HA
pausetime = 12,12
sparkno = s2060
sparkxy = -10,-60
hitsound   = s6,1
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -6
air.velocity = -2.2,-3.2

[State 240, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------
; ２Ｄ格ゲーでのしゃがみ通常攻撃は空中ガードが不可な作品が結構多い。
; カンフーマンも例外ではなかったみたい。
; ↓のしゃがみ弱パンチのguardflagが「L」のみになってるのに注目。
; 意味は「Low」。相手はこのしゃがみ弱パンチをガードする場合、
; 「しゃがみガードだけしか出来ない」という事になる。
;
; それ以外は簡単。
;---------------------------------------------------------------------------
;しゃがみ弱パンチ
[Statedef 400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 5
ctrl = 0
anim = 400
sprpriority = 2
facep2 = 1

[State 400, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 400, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = C, NA ;しゃがみ通常打撃（Crouching, Normal Attack）
damage    = 12
priority  = 3
animtype  = Light
hitflag = MAF
guardflag = L
pausetime = 10,11
getpower = 0,0
sparkno = s2060
sparkxy = -10,-42
hitsound   = s5,0
getpower = 0,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 4
ground.hittime  = 10
ground.velocity = -4
air.velocity = -1.5,-3

[State 400, コントロール]
type = CtrlSet
trigger1 = Time = 5
value = 1

[State 400, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 11 ;しゃがむステートへ（コモンステート）

;---------------------------------------------------------------------------
; 効果の違う攻撃を連続でヒットさせる場合は、複数のHitDefが必要。
; ↓のしゃがみ強パンチのguardflagの効果がそれぞれ別々（MとMA）なように、
; パラメータが数値じゃなければ特に。こればかりはどうしようもない。
;---------------------------------------------------------------------------
;しゃがみ強パンチ
[Statedef 410]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 40
ctrl = 0
anim = 410
sprpriority = 2
facep2   = 1

[State 410, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 410, 音を鳴らす2]
type = PlaySnd
trigger1 = Animelem = 13
value = 12, 0


[State 410, 地面揺らし]
type = envshake
trigger1 = Animelem = 13
time = 10
freq = 90
ampl = 10
phase = 0




[State 410, ヒット定義]
type = HitDef
trigger1 = AnimElem = 1
attr = C, NA
damage    = 126,30
animtype  = hard
hitflag = MAFD
guardflag = M
sparkno = s3061
pausetime = 12,12
sparkxy = -10,-83
hitsound   = s13,1
getpower = 0,0
guardsound = 6,0
ground.type = High
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -7
air.velocity = -3,-4

[State 410, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
;しゃがみ弱キック
[Statedef 430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 12
ctrl = 0
anim = 430
sprpriority = 2
facep2   = 1

[State 430, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 13, 2

[State 430, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 75,10
animtype  = up
hitflag = MAFD
guardflag = MA
pausetime = 12,12
sparkno = s2065
sparkxy = 0,-80
hitsound   = s13,0
guardsound = 6,0
getpower = 0,0
ground.type = high
ground.slidetime = 6
ground.hittime  = 10
ground.velocity = 0,-6
air.velocity = -2,-6
down.velocity = -5,-6
down.hittime = 20

[State 430, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;---------------------------------------------------------------------------
; 誰もが攻撃手段としてお世話になる「足払い」はダウン属性の攻撃。
; 実際に足払いの効果にするにはground.typeを「Trip」に、
; fallを「1」にする必要がある。もちろん当たればジャグルポイントも消費。
;
; ここで一つ補足。ground.typeが「Trip」になっている場合、
; 攻撃力や防御力に関係無くコンボなど転ばした後に続く攻撃が
;『全て無条件でダメージに補正が掛かる』。
; 必ず通常の半分のダメージ量に下がるので注意。
;---------------------------------------------------------------------------
;しゃがみ強キック（足払い攻撃）
[Statedef 440]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 40
ctrl = 0
anim = 440
sprpriority = 2

[State 440, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 17
value = 0, 1

[State 440, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 82,35
hitflag = MAFD
guardflag = L
pausetime = 12,12
sparkno = s2060
sparkxy = -5,-10
hitsound   = s100,0
guardsound = 6,0
ground.type = Trip ;この攻撃を食らうと相手は吹っ飛べば「コケるアニメ」になる
ground.slidetime = 10
ground.hittime  = 15
ground.velocity = -1.5,-2
air.velocity = -1.2,-3
guard.velocity = -5
fall = 1

[State 440, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 11
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------
; ジャンプ通常攻撃にChangeStateのコントローラが無いのは、
; Physicsを「A」にしているから。
; おまけフォルダの「小ネタ.txt」を参照。（Physicsの仕組み）
;
; しゃがみ通常技とは逆に、ジャンプ通常技は基本的に「中段属性」の攻撃。
; しゃがみガードが出来ないのが普通なので、guardflagを「HA」にしておくのが定石。
;「立ちガードの需要性」と「空対地のガードの揺さぶりによる駆け引き」を
; プレイヤーに楽しんでもらうための先人達の知恵だね。
;---------------------------------------------------------------------------
;ジャンプ弱パンチ
[Statedef 600]
type    = A
movetype= A
physics = A
juggle  = 2
poweradd= 11
ctrl = 0
anim = 600
sprpriority = 2

[State 600, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 600, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, NA ;空中通常打撃（Air, Normal Attack）
damage    = 100
guardflag = H ;相手はしゃがみガードが出来ない
priority = 3
pausetime = 7,8
sparkno = s2060
sparkxy = -10,-58
hitsound   = s5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 5
ground.hittime  = 5
ground.velocity = -4
air.velocity = -1.3,-3

[State 600, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1
;---------------------------------------------------------------------------
;ジャンプ強パンチ
[Statedef 610]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 45
ctrl = 0
anim = 610
sprpriority = 2
facep2   = 1

[State 610, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 2
value = 0, 4

[State 610, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage = 55
guardflag = HA
priority = 4
pausetime = 12,12
sparkno = s3061
sparkxy = -10,-25
hitsound   = s6,3
guardsound = 6,0
animtype = Med
ground.type = High
ground.slidetime = 17
ground.hittime  = 17
ground.velocity = -5
air.velocity = -3,-4


;---------------------------------------------------------------------------
;ジャンプ弱キック
[Statedef 630]
type    = A
movetype= A
physics = A
juggle  = 3
poweradd= 20
ctrl = 0
anim = 630
sprpriority = 2

[State 630, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 630, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage = 25
guardflag = HA
priority = 3
pausetime = 8,8
sparkno = s2060
sparkxy = -10,-40
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 6
ground.hittime  = 6
ground.velocity = -4
air.velocity = -2,-3

[State 630, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1
;---------------------------------------------------------------------------
;ジャンプ強キック
[Statedef 640]
type    = A
movetype= A
physics = A
juggle  = 4
poweradd= 35
ctrl = 0
anim = 640
sprpriority = 2
facep2   = 1

[State 640, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 640, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, NA
damage    = 70,10
guardflag = HA
priority = 4
pausetime = 12,12
sparkno = s2060
sparkxy = -10,-40
hitsound   = s6,1
guardsound = 6,0
animtype = Med
ground.type = High
ground.slidetime = 15
ground.hittime  = 15
ground.velocity = -5
air.velocity = -3,-4

[State 640, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1
;===========================================================================
; 投げ技
;===========================================================================
;---------------------------------------------------------------------------
; エレクバイトが「作るのが退屈と感じる時もあるよ」って言ってるけど、
; 作り出したら意外とハマって楽しくなる投げ技。
; 投げる相手の正確な座標取りは面倒臭いけどね（コラ
; 投げ用のHitDefはテンプレートと見比べて確認すればわかるはず。
;---------------------------------------------------------------------------
;カンフースルー：掴み
[Statedef 800]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
ctrl = 0
anim = 800
sprpriority = 2

[State 800, ヒット定義（投げ用）]
type = HitDef
trigger1 = Time = 0
attr = S, NT ;立ち通常投げ（Standing, Normal Throw）
hitflag = M-  ;マイナスが付加されてるので相手が食らい中の時は掴めない
priority = 1, Miss
sparkno = -1  ;-1だからヒットスパークは表示しない
p1sprpriority = 1
p1facing = 1
p2facing = 1
p1stateno = 810
p2stateno = 820
guard.dist = 0 ;相手のガード態勢に入る距離を０にしてるので、ガード不可
fall = 1

[State 800, ステート変更]
type = ChangeState
Trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;カンフースルー：成功（放り投げる）
[Statedef 810]
type    = S
movetype= A
physics = N
anim = 810
poweradd = 60

[State 810, 変数];「holdfwd」のコマンドが入力されているかどうかを判断する
type = VarSet
trigger1 = Time = 0
var(2) = command = "holdfwd"

[State 810, 音を鳴らす];掴み用
type = PlaySnd
trigger1 = AnimElem = 2
value = 1, 1

[State 810, 音を鳴らす];ド低能
type = PlaySnd
trigger1 = AnimElem = 6
trigger1 = Random <= 400
value = 18, 1



[State 810, 音を鳴らす];放り投げ用
type = PlaySnd
trigger1 = AnimElem = 7
value = 800, 0

[State 810, 掴んだ相手の位置１];TargetBindで相手を一時的に拘束
type = TargetBind
trigger1 = AnimElemTime(2) < 0
pos = 28, 0  ;自分の軸位置から相手の軸をX=28・Y=0の位置にする

[State 810, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(2) >= 0 && AnimElemTime(12) < 0
edge = 60,0 ;画面端を押す幅を変える（オレンジの線）

[State 810, 掴んだ相手の位置２]
type = TargetBind
trigger1 = AnimElemTime(2) >= 0 && AnimElemTime(5) < 0
pos = 58, 0

[State 810, 掴んだ相手の位置３]
type = TargetBind
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
pos = 47, 0



[State 810, 軸位置移動];Var(2)が有効な時
type = PosAdd
trigger1 = var(2)
trigger1 = AnimElem = 6
x = -37

[State 810, 掴んだ相手の向き];Var(2)が有効な時
type = TargetFacing
trigger1 = var(2)
trigger1 = AnimElem = 6
value = -1

[State 810, 掴んだ相手の位置４]
type = TargetBind
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(7) < 0
pos = 41, -60

[State 810, 掴んだ相手の位置５]
type = TargetBind
trigger1 = AnimElemTime(7) >= 0 && AnimElemTime(8) < 0
pos = 25, -75

[State 810, 掴んだ相手の位置６]
type = TargetBind
trigger1 = AnimElemTime(8) >= 0 && AnimElemTime(9) < 0
pos = 15, -90

[State 810, 掴んだ相手の位置７]
type = TargetBind
trigger1 = AnimElemTime(9) >= 0 && AnimElemTime(10) < 0
pos = -5, -96

[State 810, 掴んだ相手の位置８]
type = TargetBind
trigger1 = AnimElemTime(10) >= 0 && AnimElemTime(11) < 0
pos = -14, -90

[State 810, 掴んだ相手の位置９]
type = TargetBind
trigger1 = AnimElem = 11
pos = -50, -50

;相手が食らい状態の時のみ機能するTarget系コントローラ
[State 810, 掴んだ相手のライフ増減]
type = TargetLifeAdd
trigger1 = AnimElem = 11
value = -78

[State 810, 掴んだ相手のステート変更]
type = TargetState
trigger1 = AnimElem = 11
value = 821

[State 810, 振り返る]
type = Turn
trigger1 = AnimElem = 12

[State 810, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 15
x = -10

[State 810, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; こっちは制御を奪った相手の食らいステート。
; 相手の制御を解く場合、「ChangeState」のコントローラにしてしまうと
;「相手が制御を奪われた状態のままになるバグ」が発生してしまう。
; なので必ず『SelfState』で相手のステートに戻し、制御を解除しないといけない。
; そこさえ注意しておけば、自由に相手の食らいモーションを設定出来る。
;
; デバッグ表示中に相手の情報の一部の文字が黄色になったら、それが
; P2StateNoやTargetStateで制御を奪われた状態の証。
; 投げが成功したらCtrl+Dで相手側の情報を確認だ！m9っ｀Д´)
;---------------------------------------------------------------------------
;カンフースルー：相手側１（掴まれて放り投げられるまで）
[Statedef 820]
type    = A
movetype= H
physics = N
velset = 0,0

[State 820, 相手のアニメ変更]
type = ChangeAnim2
trigger1 = Time = 0
value = 820

[State 820, 相手ステートに戻す]
type = SelfState
trigger1 = !GetHitVar(IsBound) ;（※３）
value = 5050

;---------------------------------------------------------------------------
; ※３：GetHitVar
;
; 　食らってしまった『相手の攻撃の効果』を
; 　自分側が「特殊な変数」に変換して判断するトリガー。
;　「GetHitVar(**)」の『**』に該当する、予め決められているパラメータを全て紹介。
;
; 　大概「相手のHitDefとProjectileのパラメータ」から引き出すので、かなり多い（苦笑
;
;
; 　XVelAdd             = 自分が負けて吹っ飛んだ時の「Ｘ軸方向の加速度(float)」を計測する
; 　YVelAdd             = 自分が負けて吹っ飛んだ時の「Ｙ軸方向の加速度(float)」を計測する
; 　Type                = 自分の「食らいアニメの種類」。（0=None・1=High・2=Low・3=Trip）
; 　AnimType            = 相手のHitDefに設定されている「animtype」を判断する
;                        （0=Light・1=Medium・2=Hard・3=Back・4=Up・5=DiagUp）
; 　GroundType          = 相手のHitDefに設定されている「ground.type」を判断する
; 　AirType             = 相手のHitDefに設定されている「air.type」を判断する
;
; 　Damage              = 相手から食らってしまった「ダメージ量」を計測する
; 　HitCount            = 相手の「現在のヒット数」を計測する
; 　FallCount           = 自分が「地面に激突した回数」を判断する
; 　HitShakeTime        = 自分の「ヒット硬直時間」を計測する
; 　HitTime             = 自分の「食らい時間」を計測する
; 　SlideTime           = 相手のHitDefに設定されている「slidetime」を判断する
; 　CtrlTime            = 相手のHitDefに設定されている「(air)guard.ctrltime」を判断する
; 　RecoverTime         = 横に倒れている時の「起き上がるまでの時間」を判断する
;
; 　XOff                = 相手のHitDefに設定されている「"snap"のＸ軸」を判断する（非推奨）
; 　YOff                = 相手のHitDefに設定されている「"snap"のＹ軸」を判断する（非推奨）
; 　ZOff                = 相手のHitDefに設定されている「"snap"のＺ軸」を判断する？（存在しないので無意味）
;
; 　XVel                = 相手のHitDefに設定されている「Ｘ軸の食らい状態の移動速度」を判断する
; 　YVel                = 相手のHitDefに設定されている「Ｙ軸の食らい状態の移動速度」を判断する
; 　YAccel              = 相手のHitDefに設定されている「yaccel」を判断する
; 　chainID             = 相手のHitDefに設定されている「chainID」を判断する
; 　Guarded             =「相手のコンボでの最後の攻撃をガードした場合」を判断する
; 　IsBound             =「TargetBindで掴まれてる状態」を判断する
;
; 　Fall                = 相手のHitDefに設定されている「fall」を判断する
; 　Fall.Damage         = 相手のHitDefに設定されている「fall.damage」を判断する
; 　Fall.XVel           = 相手のHitDefに設定されている「fall.xvelocity」を判断する
; 　Fall.YVel           = 相手のHitDefに設定されている「fall.yvelocity」を判断する
; 　Fall.Recover        = 相手のHitDefに設定されている「fall.recover」を判断する
; 　Fall.RecoverTime    = 相手のHitDefに設定されている「fall.recovertime」を判断する
; 　Fall.Kill           = 相手のHitDefに設定されている「fall.kill」を判断する
; 　Fall.EnvShake.Time  = 相手のHitDefに設定されている「fall.envshake.time」を判断する
; 　Fall.EnvShake.Freq  = 相手のHitDefに設定されている「fall.envshake.freq」を判断する
; 　Fall.EnvShake.Ampl  = 相手のHitDefに設定されている「fall.envshake.ampl」を判断する
; 　Fall.EnvShake.Phase = 相手のHitDefに設定されている「fall.envshake.phase」を判断する
;
;---------------------------------------------------------------------------
;カンフースルー：相手側２（放り投げられた）
[Statedef 821]
type    = A
movetype= H
physics = N
velset = 2.8,-7
poweradd = 40

[State 821, 速度加算];重力
type = VelAdd
trigger1 = 1
y = .4 ;現在のＹ軸方向の移動速度を「0.4ポイント」ずつ増やしていく

[State 821, ステート変更]
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive      ;生きている時
triggerall = CanRecover ;空中受け身が可能な時
trigger1 = Command = "recovery"
value = 5200

[State 821, 相手ステートに戻す]
type = SelfState
triggerall = Vel Y > 0
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210

[State 821, 相手ステートに戻す]
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 5100

;===========================================================================
; 必殺技
;===========================================================================
;---------------------------------------------------------------------------
; カンフーマンを代表する必殺技『カンフー突き手』。
; 最初に公開されたM.U.G.E.N（1999/1/1当時のMS-DOS版）では
; この技と超必殺技の『三烈カンフー突き手』しか持ってなかった。
;
;「P2BodyDist」は「自分から相手までの距離」を測るトリガー。
; Bodyの記述が無い「P2Dist」の場合は、
;「自分の軸位置から相手の軸位置との距離」を測る。
;---------------------------------------------------------------------------
;カンフー突き手（弱）
[Statedef 1000]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 110
velset = 0,0
anim = 1000
ctrl = 0
sprpriority = 2

[State 1000, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 8
value = 0, 3

[State 1000, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 2
x = 20

[State 1000, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 3
trigger2 = AnimElem = 13
x = 10

[State 1000, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 5
x = 5

[State 1000, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 9
x = -5

[State 1000, ヒット定義];相手に近い場合
type = HitDef
trigger1 = AnimElem = 5
trigger1 = p2bodydist X < 40 ;相手とのＸ軸の距離が４０ピクセル未満の時
attr = S, SA ;立ち必殺技（Standing, Special Attack）
animtype  = Hard
damage    = 90, 4
priority  = 5
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -4,-3.5
air.velocity = -4,-3
fall = 1

[State 1000, ヒット定義];相手よりも遠い場合
type = HitDef
trigger1 = AnimElem = 5
trigger1 = p2bodydist X >= 40 ;相手とのＸ軸の距離が４０ピクセル以上の時
attr = S, SA
animtype  = Hard
damage    = 85, 4
priority  = 4
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -7
air.velocity = -4,-2.5

[State 1000, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;カンフー突き手（強）
[Statedef 1010]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 120
velset = 0,0
anim = 1010
ctrl = 0
sprpriority = 2

[State 1010, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 9
value = 0, 3

[State 1010, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 2
x = 20

[State 1010, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 3
trigger2 = AnimElem = 13
x = 10

[State 1010, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 5
x = 5

[State 1010, 移動速度]
type = VelSet
trigger1 = AnimElem = 5
x = 4

[State 1010, ヒット定義]
type = HitDef
trigger1 = AnimElem = 5
trigger1 = p2bodydist X < 40
attr = S, SA
animtype  = Hard
damage    = 90, 4
priority  = 5
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -4,-3.5
air.velocity = -4,-3
fall = 1

[State 1010, ヒット定義]
type = HitDef
trigger1 = AnimElem = 5
trigger1 = p2bodydist X >= 40
attr = S, SA
animtype  = Hard
damage    = 85, 4
priority  = 4
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 12
ground.hittime  = 15
ground.velocity = -7
air.velocity = -4,-2.5

[State 1010, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; ↓のステートでは少し難しい設定をいくつか実行してます。
;
; 投げ技の応用で、攻撃が当たれば相手を「特殊な吹っ飛び状態」にする事が出来る。
; HitDefと[Statedef 1025]辺りを見てね。
;---------------------------------------------------------------------------
;速いカンフー突き手
[Statedef 1020]
type    = S
movetype= A
physics = N
juggle  = 6
poweradd= -330 ;パワーゲージを３３０ポイント消費
velset = 0,0
anim = 1020
ctrl = 0
sprpriority = 2

[State 1020, 速度乗算]
type = VelMul
trigger1 = 1
x = .85 * ifelse(AnimElemTime(6) < 0, 1, .8) ;（※４）
;Ｘ軸の速度を毎フレーム「0.15ポイントにIfElse文の中身を掛けた数値分ずつ」遅くしていく事になる。

[State 1020, 残像]
type = AfterImage
trigger1 = Time = 0
time = 2                   ;残像が出ている時間（フレーム）
PalBright   =  30, 30,  0  ;残像の色の明るさ（赤,緑,青・ＲＧＢ）
PalContrast =  70, 70, 20  ;残像の色合い　　（赤,緑,青・ＲＧＢ）
PalAdd      = -10,-10,-10  ;残像の色の加算値（赤,緑,青・ＲＧＢ）
PalMul      = .85,.85,.50  ;残像の色の乗算値（赤,緑,青・ＲＧＢ・float）
Trans = Add                ;残像の透過処理（Add,Add1,Sub,None,AddAlpha）
TimeGap  = 1               ;残像の表示をスキップする間隔（デフォルトは1）
FrameGap = 2               ;残像の形を変化させる間隔（デフォルトは4）
length = 13                ;残像の表示する長さ（最大60・デフォルト20）

[State 1020, 残像表示時間]
type = AfterImageTime
trigger1 = AnimElemTime(8) < 0
time = 2

[State 1020, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 20           ;画像の色を変化させる時間（フレーム）
add = 32,16,0       ;画像の色合い（赤,緑,青・ＲＧＢ）
sinadd = 64,32,5,3  ;振幅赤,振幅緑,振幅青,周期

[State 1020, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 2
value = 0, 3

[State 1020, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 2
x = 20

[State 1020, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 3
trigger2 = AnimElem = 12
x = 10

[State 1020, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 4
x = 5

[State 1020, 移動速度]
type = VelSet
trigger1 = AnimElem = 4
x = 13

[State 1020, ヒット定義]
type = HitDef
trigger1 = AnimElem = 4
attr = S, SA
animtype  = Hard
damage    = 95, 5
getpower  = 0
priority  = 4
guardflag = MA
pausetime = 8,7
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 20
ground.hittime  = 20
ground.velocity = -8,-7
guard.velocity = -7
air.velocity = -8,-7
airguard.velocity = -5, -4
fall = 1
p2stateno = 1025 ;この攻撃がヒットすれば相手は↓の[Statedef 1025]へ
p2facing = 1     ;相手の向きを指定

[State 1020, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; ※４：IfElse文
;
; 　条件を『分岐』させ、適用する値を細分化する命令。書式を見てみよう。
; 
; 　　IfElse(■,●,▲)
;
; 　　■ = 分岐させる条件（トリガーを使う）
; 　　● =「■」が『有効な時』に適用する値（真）
; 　　▲ =「■」が『有効ではない時』に適用する値（偽）
;
; 　つまり『もし■が実行されていたら●（真）、そうでない場合は▲（偽）』
; 　という処理の流れになる。
;
; 　M.U.G.E.NでのIfElse文は数式として分類されているので、
; 　●と▲には「数値（数値を適用するトリガー）」しか使えない。
;　（その中に更にIfElse文は何個も追加出来るけどね）
;
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;速いカンフー突き手：相手側１（ヒット硬直）
[Statedef 1025]
type    = A
movetype= H
physics = N
velset = 0,0

[State 1025, 相手のアニメ変更]
type = ChangeAnim2
trigger1 = 1
value = 1025

[State 1025, ステート変更]
type = ChangeState
trigger1 = HitShakeOver = 1 ;ヒット硬直が解けたら
value = 1026

;---------------------------------------------------------------------------
;「FrontEdgeBodyDist」は『自分から前方の画面端までの距離』を、
;「BackEdgeBodyDist」は『自分から後方の画面端までの距離』を計測するトリガー。
; 使ってないけど、さらに「Body」を抜いた『FrontEdgeDist』及び『BackEdgeDist』は
; それぞれ『自分の「軸位置」から前か後ろの画面端までの距離』を計測する事になる。
; ちなみにこれはＸ軸のみ。Ｙ軸は無いので気を付けてね。
;---------------------------------------------------------------------------
;速いカンフー突き手：相手側２（吹っ飛び）
[Statedef 1026]
type    = A
movetype= H
physics = N

[State 1026, 食らい中の速度]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 1026, 速度加算];重力
type = VelAdd
trigger1 = 1
y = .45

[State 1026, スクロール]
type = ScreenBound
triggerall = Pos y < -15
trigger1 = BackEdgeBodyDist < 65
trigger2 = FrontEdgeBodyDist < 65
value = 1         ;画面スクロールの影響を受けるか否か。0=受けない・1=受ける
movecamera = 0,1  ;カメラの動きをキャラに依存させるか否か。0=させない・1=させる（Ｘ軸,Ｙ軸）

[State 1026, ステート変更];壁に激突するステートへ
type = ChangeState
triggerall = Pos y < -15
trigger1 = BackEdgeBodyDist <= 20
trigger2 = FrontEdgeBodyDist <= 20
value = 1027

[State 1026, 相手ステートに戻す]
type = SelfState
trigger1 = (Vel y > 0) && (Pos y >= 0)
value = 5100

;---------------------------------------------------------------------------
;「Pos」はＸ軸が画面中央から、Ｙ軸が地面からの座標を決めるのに対し、
;『ScreenPos』は『常にウィンドウの一番左上からの横と縦の座標』を取る。
;---------------------------------------------------------------------------
;速いカンフー突き手：相手側３（壁に激突）
[Statedef 1027]
type    = A
movetype= H
physics = N

[State 1027, 振り返る]
type = Turn
trigger1 = (Time = 0) && (FrontEdgeBodyDist <= 30)

[State 1027, 軸位置移動]
type = PosAdd
trigger1 = Time = 0
x = 15 - BackEdgeBodyDist

[State 1027, 位置固定]
type = PosFreeze
trigger1 = 1
x = 1
y = 1

[State 1027, スクロール]
type = ScreenBound
trigger1 = 1
value = 1
movecamera = 0,1

[State 1027, エフェクト]
type = Explod
trigger1 = Time = 0
anim = F72
pos = 0, floor(screenpos y) - 50 ;（※５）
postype = back
sprpriority = 3

[State 1027, 相手のアニメ変更]
type = ChangeAnim2
trigger1 = Time = 0
value = 1027

[State 1027, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = F7,0

[State 1027, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 1028

;---------------------------------------------------------------------------
; ※５：端数処理（floorとか付いてる所）
;
; 　括弧で挟んで中の数値をどうするか？小数点以下の数値を
;　「四捨五入」したり「切り捨てたり」する命令。
; 　これはプログラミングでは『端数処理』と呼ばれているものの一部で、
;
; 　Ceil(**)  = 天井関数(Ceiling)
; 　　　　　　（正の値は小数点以下を四捨五入、負の値は小数点以下を切り捨てる）
;
; 　Floor(**) = 床関数
; 　　　　　　（正の値は小数点以下を切り捨て、負の値は小数点以下を四捨五入する）
;
; 　という処理を値に適用し、整数への補正を行う。
; 　もちろん「正の値」は『０よりも上の数値』、「負の値」は『０よりも下の数値』の事。
; 　例えば、正の値2.8・負の値-2.8があるとする。これにCeilかFloorを与えると、
;
; 　Ceil(2.8)   = 3
; 　Ceil(-2.8)  = -2
; 　Floor(2.8)  = 2
; 　Floor(-2.8) = -3
;
; 　となる。
;---------------------------------------------------------------------------
;速いカンフー突き手：相手側４（壁からのバウンド）
[Statedef 1028]
type    = A
movetype= H
physics = N

[State 1028, 相手の特定の攻撃属性無効];（※６）
type = NotHitBy
trigger1 = 1
value = , NA, NP

[State 1028, 移動速度]
type = VelSet
trigger1 = Time = 0
y = -6

[State 1028, 移動速度]
type = VelSet
trigger1 = Time = 0
x = 1.6

[State 1028, 振り返る]
type = Turn
trigger1 = (Time = 0) && (BackEdgeDist < 30)

[State 1028, 速度加算];重力
type = VelAdd
trigger1 = 1
y = .35

[State 1028, アニメ変更]
type = ChangeAnim
trigger1 = Time = 0
trigger1 = !SelfAnimExist(5052) ;「!」が付いてるので、[Begin Action 5052]が無い場合
value = 5050

[State 1028, アニメ変更]
type = ChangeAnim
trigger1 = Time = 0
trigger1 = SelfAnimExist(5052)  ;airファイルに[Begin Action 5052]が存在してれば
value = 5052

[State 1028, アニメ変更]
type = ChangeAnim
trigger1 = Vel Y > -2
trigger1 = Anim = 5050
trigger1 = SelfAnimExist(5060)
persistent = 0
value = 5060

[State 1028, アニメ変更]
type = ChangeAnim
trigger1 = Vel Y > -2
trigger1 = Anim = 5052
trigger1 = SelfAnimExist(5062)
persistent = 0
value = 5062

[State 1028, 相手ステートに戻す]
type = SelfState
trigger1 = (Vel y > 0) && (Pos y >= 0)
value = 5100

;---------------------------------------------------------------------------
; ※６：NotHitBy
;
; 　通常は「無敵状態」を設定するけど、本当は
;　『相手の「特定の属性を設定しているHitDef」を当たらなくする』コントローラ。
; 　特定の属性はHitDefの「attr」のパラメータが該当する。テンプレート参照。
; 　まぁvalueに与える値を見れば早い。
;
; 　value = (相手のattrの状態), (相手のattrの属性１)(相手のattrの属性２),・・・
;
; 　これが本来の記述方法。
;　「value2」を増やす事により、もう一つ無敵にしたい属性を指定出来る。
; 　(属性１)と(属性２)を省略して書けば
; 　相手の(状態)のみを判断して攻撃を当たらなくする事が出来る。（「SC」など）
; 　逆に(状態)に関係無く特定の(属性１)と(属性２)に対して無敵にしたい場合は、
;　『(状態)を省略して(属性１)と(属性２)を設定する』。
; 　というか全ての状態（SとCとA全部の場合）で属性を実行したい時、
; 　SCAを加えてしまうと(属性１)と(属性２)が機能しない（苦笑
;
; 　(例)　：　value = , AA,AP,AT
; 　もしくは　value = , NA,SA,HA,NP,SP,HP,NT,ST,HT
;
; 　実はSCAじゃなくても、この記述でも「無敵状態」になれる。
; 　例に挙げた見慣れない属性（AA・AP・AT）の意味は以下の通り。
;
; 　AA = 相手の「全ての打撃」が当たらなくなる　　　　（All Attack）
; 　AP = 相手の「全てのProjectile」が当たらなくなる　（All Projectile）
; 　AT = 相手の「全ての投げ」が当たらなくなる　　　　（All Throw）
;
; 　この３つは「HitBy」「ReversalDef」「HitOverRide」のコントローラと、
;　「HitDefAttr」のトリガーにも使える。
;===========================================================================
;---------------------------------------------------------------------------
; 膝蹴りの時にＡボタンかＢボタンを押すと
;「撥ね蹴り」が出る、飛び上がる連続入力攻撃技。
; ステートが「地上での開始→飛び膝蹴り（ボタンを押すと連続技）→着地」
; の３つに分かれている。
;---------------------------------------------------------------------------
;カンフーニー（弱）地上での開始
[Statedef 1050]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 110
velset = 0,0
anim = 1050
ctrl = 0
sprpriority = 2

[State 1050, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 2

[State 1050, 何もしない];『Null』は何もしない命令。コントローラを機能させない時に使う。
type = null;PosAdd
trigger1 = AnimElem = 2
x = 15

[State 1050, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 4
x = 20

[State 1050, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, SA
animtype  = Medium
damage    = 80, 4
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = -10,-70
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 20
ground.hittime  = 20
ground.velocity = -3.5,-7
guard.velocity = -7
air.velocity = -3.5,-7
fall = 1

[State 1050, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 1051

;---------------------------------------------------------------------------
; ここでＡかＢのボタンを押すと別のステートにも変更される。難しくない処理。
;
; Physicsが「N」になっているので、摩擦や重力の影響を受けない。
; なので地面に着いたら「特定の着地ステート」へ変える必要がある。
;
;「hitdefpersist」で直前のステートで設定したHitDefの効果が
; 持続してるのに気を付けて。攻撃判定ボックス（Clsn1）があれば
; そのまま攻撃が当たるようになる。
;---------------------------------------------------------------------------
;カンフーニー（弱）飛び膝蹴り
[Statedef 1051]
type    = A
movetype= A
physics = N
velset = 2,-6
anim = 1051
hitdefpersist = 1 ;直前のステートのHitDefを持続させる

[State 1051, 速度加算];重力
type = VelAdd
trigger1 = 1
y = .45

[State 1051, ステート変更];追加入力
type = ChangeState
trigger1 = Command = "a" || Command = "b"
trigger1 = Vel y < -1
value = 1055

[State 1051, ステート変更];特定の着地ステートへ
type = ChangeState
trigger1 = Vel Y > 0 && Pos Y >= -10
value = 1052

;---------------------------------------------------------------------------
; 着地ステートでは必ず「Ｙ軸方向の軸位置を０」に、かつ「Ｙ軸の速度も０」に
; リセットする事。そうしないと地面にめり込むか、画面下へ消えてしまう（苦笑
;---------------------------------------------------------------------------
;カンフーニー：着地
[Statedef 1052]
type    = S
movetype= I
physics = S
anim = 1052
sprpriority = 1
velset = 0,0 ;ここで速度をリセットしている

[State 1052, 軸位置];地面に軸をリセットしている
type = PosSet
trigger1 = Time = 0
y = 0

[State 1052, 音を鳴らす];着地音
type = PlaySnd
trigger1 = Time = 0
value = 40, 0

[State 1052, コントロール]
type = CtrlSet
trigger1 = AnimElem = 3, -1
value = 1

[State 1052, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 4
x = -15

[State 1052, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;カンフーニー：追加入力攻撃
[Statedef 1055]
type    = A
movetype= A
physics = N
anim = 1055

[State 1055, 音を鳴らす];カンフーマンの声
type = PlaySnd
trigger1 = Time = 0
value = 100,0
channel = 0 ;「チャンネル０」に設定

[State 1055, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 0, 1

[State 1055, 軸位置移動]
type = PosAdd
trigger1 = Time = 0
x = 10
y = -10

[State 1055, 速度加算];重力
type = VelAdd
trigger1 = 1
y = .45

[State 1055, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, SA
animtype  = Med
damage    = 35 + (prevstateno = 1061)*5, 2 ;（※７）
priority  = 4
guardflag = MA
pausetime = 12,12
sparkxy = 0,-90
hitsound   = 5,2
guardsound = 6,0
ground.type = High
ground.slidetime = 15
ground.hittime  = 16
ground.velocity = -6
guard.velocity = -8
guard.ctrltime = 12
air.velocity = -4,-5
airguard.velocity = -4,-4.5
air.fall = 1

[State 1055, ステート変更];特定の着地ステートへ
type = ChangeState
trigger1 = Vel Y > 0 && Pos Y >= -5
value = 1056

;---------------------------------------------------------------------------
; ※７：トリガーの代入
;
; 　なんと！数値でないトリガーは『式に代入』する事も可能！(ﾟдﾟ)
; 　トリガー１個単位が有効になっていれば「１」、無効なら「０」として判断される。
;
; 　↑のステートに使ってるHitDefのDamageのパラメータを例にして仕組みを説明。
; 　この場合、
; 　「prevstateno = 1061」が有効なら「１」、無効なら「０」
; 　（「PrevStateNo」は直前のステートを判断するトリガー）
; 　という事になるので、
; 　Damageは「prevstateno = 1061」が有効なら「35+1*5」で「40」になり、
; 　逆に無効なら「35+0*5」で「35」になる。
;
;　「StateType」と「MoveType」はその仕様により「２以上」も存在する。
; 　デバッグ表示中にそれぞれ「Type」と「MoveType」の項目を確認してみよう。
; 　おまけフォルダの「デバッグ表示の見方.gif」も見てね♪
;---------------------------------------------------------------------------
;カンフーニー：追加入力攻撃後の着地
[Statedef 1056]
type    = S
movetype= I
physics = S
anim = 1056
sprpriority = 1
velset = 0,0

[State 1056, 軸位置]
type = PosSet
trigger1 = Time = 0
y = 0

[State 1056, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 40, 0

[State 1056, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;カンフーニー（強）
[Statedef 1060]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 120
velset = 0,0
anim = 1060
ctrl = 0
sprpriority = 2

[State 1060, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 2

[State 1060, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 2
x = 6

[State 1060, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 4
x = 21

[State 1060, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, SA
animtype  = Medium
damage    = 90, 4
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = -10,-70
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 20
ground.hittime  = 20
ground.velocity = -3.5,-7.5
guard.velocity = -7
air.velocity = -3.5,-7.5
fall = 1

[State 1060, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 1061

;---------------------------------------------------------------------------
;カンフーニー（強）飛び膝蹴り
[Statedef 1061]
type    = A
movetype= A
physics = N
velset = 2.5,-7.5
anim = 1061
hitdefpersist = 1

[State 1061, 速度加算]
type = VelAdd
trigger1 = 1
y = .45

[State 1061, ステート変更]
type = ChangeState
trigger1 = Command = "a" || Command = "b"
trigger1 = Vel y < -1
value = 1055

[State 1061, ステート変更]
type = ChangeState
trigger1 = Vel Y > 0 && Pos Y >= -10
value = 1052

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;速いカンフーニー
[Statedef 1070]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= -330
velset = 0,0
anim = 1070
ctrl = 0
sprpriority = 2

[State 1070, 残像]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1070, 残像表示時間]
type = AfterImageTime
trigger1 = 1
time = 2

[State 1070, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1070, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 1
value = 0, 2

[State 1070, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 2
x = 6

[State 1070, 軸位置移動]
type = PosAdd
trigger1 = AnimElem = 4
x = 21

[State 1070, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Medium
getpower  = 0
damage    = 35, 3
priority  = 5
hitflag   = MA
guardflag = MA
pausetime = 8,7
sparkxy = -10,-70
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -2,-6
guard.velocity = -7
air.velocity = -2,-6
fall = 1
fall.animtype = Med
fall.recovertime = 30

[State 1070, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 1071

;---------------------------------------------------------------------------
;速いカンフーニー：飛び膝蹴り
[Statedef 1071]
type    = A
movetype= A
physics = N
velset = 2.5,-9
anim = 1071

[State 1071, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 18
add = 32,16,0
sinadd = 64,32,5,3

[State 1071, 残像表示時間]
type = AfterImageTime
trigger1 = Vel Y < 0
time = 2

[State 1071, 速度加算]
type = VelAdd
trigger1 = 1
y = .5

[State 1071, 速度加算]
type = VelAdd
trigger1 = Vel Y >= -1
y = .2

[State 1071, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, SA
animtype  = Medium
getpower  = 0
damage    = 68, 4
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = -10,-70
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 18
ground.hittime  = 18
ground.velocity = -3,-9.5
guard.velocity = -7
air.velocity = -3,-9.5
fall = 1
fall.recovertime = 30

[State 1071, ステート変更]
type = ChangeState
trigger1 = Command = "a" || Command = "b"
trigger1 = Vel y < -1
trigger1 = Time > 0
value = 1075

[State 1071, ステート変更]
type = ChangeState
trigger1 = Vel Y > 0 && Pos Y >= -10
value = 1052

;---------------------------------------------------------------------------
;速いカンフーニー：追加入力攻撃
[Statedef 1075]
type    = A
movetype= A
physics = N
anim = 1055

[State 1075, 残像表示時間]
type = AfterImageTime
trigger1 = 1
time = 2

[State 1075, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1075, 音を鳴らす];カンフーマンの声
type = PlaySnd
trigger1 = Time = 0
value = 100,0
channel = 0

[State 1075, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 0, 1

[State 1075, 軸位置移動]
type = PosAdd
trigger1 = Time = 0
x = 10
y = -10

[State 1075, 速度加算]
type = VelAdd
trigger1 = 1
y = .45

[State 1075, 速度加算]
type = VelAdd
trigger1 = Vel Y >= -1
y = .2

[State 1075, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = A, SA
animtype  = Med
damage    = 42, 2
getpower  = 0
priority  = 4
guardflag = MA
pausetime = 12,12
sparkxy = 0,-90
hitsound   = 5,2
guardsound = 6,0
ground.type = High
ground.slidetime = 15
ground.hittime  = 18
ground.velocity = -6
guard.velocity = -6
air.velocity = -4,-6
airguard.velocity = -4,-4.5
air.fall = 1

[State 1075, ステート変更]
type = ChangeState
trigger1 = Vel Y > 0 && Pos Y >= -5
value = 1056

;===========================================================================
;---------------------------------------------------------------------------
; ２ヒットする何の変哲も無い対空必殺技。これといって難しい処理は使ってない。
; カンフーニーとの併用で画面端でのコンボも上手く行けば出来る。
; 対空技に付き物な「無敵時間」が無いので、潰されやすいのが難点。
;---------------------------------------------------------------------------
;カンフーアッパー（弱）
[Statedef 1100]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 110
velset = 0,0
anim = 1100
ctrl = 0
sprpriority = 2

[State 1100, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(13) < 0
value = 5,0

[State 1100, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2

[State 1100, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Med
damage    = 52, 4
priority  = 5
guardflag = MA
pausetime = 4,8
sparkxy = 0,-48
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 15
ground.hittime  = 18
ground.velocity = -3
guard.velocity = -6
air.velocity = -2,-2
airguard.velocity = -4,-4.5
p2facing = 1
forcestand = 1 ;攻撃を当てた相手を強制的に「立ち状態」にする

[State 1100, ヒット定義]
type = HitDef
trigger1 = AnimElem = 7
attr = S, SA
animtype  = Up ;相手のアニメが『垂直吹っ飛び』になる（相手のairに[Begin Action 5051]がある場合）
damage    = 55, 4
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = 0,-110
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 15
ground.hittime  = 18
ground.velocity = -1,-9.5
guard.velocity = -6
air.velocity = -1,-7.5
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1               ;相手は「ダウン状態」に
fall.recovertime = 40  ;相手は「４０フレームの間空中受け身が出来ない」
yaccel = .4            ;相手のＹ軸方向の移動速度を「0.4ポイント」ずつ増やしていく

[State 1100, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;カンフーアッパー（強）
[Statedef 1110]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 120
velset = 0,0
anim = 1110
ctrl = 0
sprpriority = 2

[State 1110, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(14) < 0
value = 5,0

[State 1110, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2

[State 1110, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Med
damage    = 57, 4
priority  = 5
guardflag = MA
pausetime = 4,8
sparkxy = 0,-48
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 15
ground.hittime  = 18
ground.velocity = -3
guard.velocity = -6
air.velocity = -2,-2
airguard.velocity = -4,-4.5
p2facing = 1
forcestand = 1

[State 1110, ヒット定義]
type = HitDef
trigger1 = AnimElem = 7
attr = S, SA
animtype  = Up
damage    = 60, 4
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = 0,-110
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 15
ground.hittime  = 18
ground.velocity = -1,-10.5
guard.velocity = -6
air.velocity = -1,-8.5
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1
fall.recovertime = 50
yaccel = .4

[State 1110, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;速いカンフーアッパー
[Statedef 1120]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= -330
velset = 0,0
anim = 1120
ctrl = 0
sprpriority = 2

[State 1120, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(14) < 0
value = 5,0

[State 1120, 残像]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1120, 残像表示時間]
type = AfterImageTime
trigger1 = AnimTime < -2
time = 2

[State 1120, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1120, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2

[State 1120, ヒット定義]
type = HitDef
trigger1 = Time = 0
trigger2 = AnimElem = 4
attr = S, SA
animtype  = Med
damage    = 30, 4
getpower  = 0
priority  = 5
guardflag = MA
pausetime = 6,10
sparkxy = 0, ifelse(Time = 0, -48, -55)
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 18
ground.hittime  = 21
ground.velocity = -3
guard.velocity = -6
air.velocity = -2,-2
airguard.velocity = -4,-4.5
p2facing = 1
forcestand = 1

[State 1120, ヒット定義]
type = HitDef
trigger1 = AnimElem = 7
attr = S, SA
animtype  = Up
damage    = 68, 4
getpower  = 0
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = 0,-110
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 18
ground.hittime  = 21
ground.velocity = -1.2,-11
guard.velocity = -6
air.velocity = -1.2,-9
airguard.velocity = -4,-4.5
p2facing = 1
fall = 1
fall.recovertime = 60
yaccel = .4

[State 1120, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------
; Win版カンフーマンの新必殺技、カンフーブロー。
; 要は崩拳で、両手に攻撃判定が有り、Simulにて挟み撃ちされた場合の
; 打開策用である。画面振動を起こすコントローラ（EnvShake）にも注目しよう。
;---------------------------------------------------------------------------
;カンフーブロー（弱）
[Statedef 1200]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 100
velset = 0,0
anim = 1200
ctrl = 0
sprpriority = 2

[State 1200, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 3

[State 1200, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
value = 10,0

[State 1200, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(9) < 0
value = 20,0

[State 1200, 画面振動];※縦揺れしか出来ません。横揺れ用は存在しません。
type = EnvShake
trigger1 = AnimElem = 6
time = 4    ;「画面が揺れる時間」を設定。
ampl = 2    ;「画面が揺れる縦の幅（範囲）」を設定。デフォルトは-4。
freq = 180  ;「画面が揺れる速度」を設定。デフォルトは60。
;phase = 90 ;「画面が揺れる最初の段階の強さ（規模）」を設定。デフォルトは90。
            ;ここで決めた段階から徐々に揺れが弱くなっていく。

[State 1200, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Hard
damage    = 100, 6
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = 0,-65
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 16
ground.hittime  = 18
ground.velocity = -10
ground.cornerpush.veloff = -12 ;相手が画面端の場合、自分に「ヒットバック」の速度を与える
guard.velocity = -7
air.velocity = -3.5,-4.5
airguard.velocity = -3.5,-4.5

[State 1200, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;カンフーブロー（強）
[Statedef 1210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 120
velset = 0,0
anim = 1210
ctrl = 0
sprpriority = 2

[State 1210, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 3

[State 1210, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
value = 10,0

[State 1210, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(9) < 0
value = 20,0

[State 1210, 画面振動]
type = EnvShake
trigger1 = AnimElem = 6
time = 8
ampl = 2
freq = 170

[State 1210, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Hard
damage    = 125, 9
priority  = 5
guardflag = MA
pausetime = 12,12
sparkxy = 0,-65
hitsound   = 5,3
guardsound = 6,0
ground.type = Low
ground.slidetime = 18
ground.hittime  = 20
ground.velocity = -10
ground.cornerpush.veloff = -15
guard.velocity = -8
air.velocity = -4,-4.5
airguard.velocity = -4,-4.5

[State 1210, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;速いカンフーブロー
[Statedef 1220]
type    = S
movetype= A
physics = S
juggle  = 6
poweradd= -330
velset = 0,0
anim = 1220
ctrl = 0
sprpriority = 2

[State 1220, 残像]
type = AfterImage
trigger1 = Time = 0
length = 13
PalBright   =  30, 30,  0
PalContrast =  70, 70, 20
PalAdd      = -10,-10,-10
PalMul      = .85,.85,.50
TimeGap  = 1
FrameGap = 2
Trans = Add
time = 2

[State 1220, 残像表示時間]
type = AfterImageTime
trigger1 = AnimTime < -2
time = 2

[State 1220, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 20
add = 32,16,0
sinadd = 64,32,5,3

[State 1220, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 3

[State 1220, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(5) >= 0 && AnimElemTime(6) < 0
value = 10,0

[State 1220, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(6) >= 0 && AnimElemTime(9) < 0
value = 20,0

[State 1220, 画面振動]
type = EnvShake
trigger1 = AnimElem = 6
time = 8
ampl = 3
freq = 170

[State 1220, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, SA
animtype  = Hard
damage    = 125, 9
getpower  = 0
priority  = 5
guardflag = MA
pausetime = 15,15
sparkxy = 0,-65
hitsound   = 5,4
guardsound = 6,0
ground.type = Low
ground.slidetime = 20
ground.hittime  = 30
ground.velocity = -15
ground.cornerpush.veloff = -20
guard.velocity = -9
air.velocity = -5,-5
airguard.velocity = -5,-5
air.fall = 1
fall.animtype = Hard
yaccel = .4

[State 1220, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;===========================================================================
; 超必殺技
;===========================================================================
;---------------------------------------------------------------------------
; 最初のM.U.G.E.Nから存在するカンフーマンの超必殺技。
; 超必なので攻撃を当ててもゲージを増やさないようにする事に気を付けるだけで、
; 後は結構簡単な処理にまとめられてる。
; 超必時の暗転用の処理（SuperPause）にも刮目せよ！m9っ｀Д´)
;---------------------------------------------------------------------------
;エネルギーコンタクト
[Statedef 3000]
type    = S
movetype= A
physics = S
juggle  = 4
velset = 0,0
anim = 2050
ctrl = 0
sprpriority = 2
facep2   = 1

[State 3000, 物理的なキャラの幅]
type = Width
trigger1 = AnimElem = 2, >= 0
value = 15,0


[State 3000, 超必殺技暗転時間停止anten]
type = BGPALFX
trigger1 =time= 1
time = 35
invertall = 1
ignorehitpause = 1

[State 3000, 残像]
type = AfterImage
trigger1 = AnimElem = 1
time = 35

[State 3000, 超必殺技暗転時間停止]
type = superpause
trigger1 = AnimElem = 1
anim = s1400       ;超必エフェクトのアクションナンバー。通常は「fightfx.air」のアニメを使うが、
                 ;左に「s」を付ければ「自分のairファイル」のアクションナンバーが使える。
pos = -300, -270    ;超必エフェクトの座標（Ｘ軸,Ｙ軸）
sound = s16, 0    ;超必発動サウンド。通常は「common.snd」の音を使うが、
                 ;左に「s」を付ければ「自分のsndファイル」の音が使える。
poweradd = -1000 ;パワーゲージ増減量
time =35       ;ポーズする時間（フレーム）
movetime =35    ;ポーズ中に動ける時間。timeよりも多いとバグる（デフォルトは０）
darken = 0      ;ポーズ中画面を暗転するか否か（0=しない・1=する）
                 ;暗転する色は「ownpal」の有無により「Explod」や「ヘルパー」にも影響するので注意。
p2defmul = 1 ;直前のステートを「SuperPauseを設置したステート」でキャンセルした場合、
                 ;『相手に一時的に与える防御力乗算値(float)』。
                 ;デフォルトは０。（相手の防御力が上がり、ダメージ量に下方修正が掛かる）
                 ;１にすれば『ダメージ補正が掛からなくなる』事になる。
                 ;自分が攻撃以外（MoveTypeが「A」以外）のステートになれば解除される。
;unhittable = 1  ;ポーズ中自分を無敵状態にするか否か（0=しない・1=する）
                 ;デフォルトは１。



[State 6141, hibasira]
type = Projectile
trigger1 = AnimElem = 25
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
Projremove = 0
pos = -50, 0
Velocity = 0
Postype=p1
Offset=50,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 74
ground.hittime  = 26
ground.velocity = -16,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1


[State 6141, hibasira2]
type = Projectile
trigger1 = AnimElem = 27
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
Projremove = 0
pos = -50, 0
Velocity = 0
Postype=p1
Offset=100,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 74
ground.hittime  = 26
ground.velocity = -16,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1

[State 6141, hibasira3]
type = Projectile
trigger1 = AnimElem = 29
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
Projremove = 0
pos = -50, 0
Velocity = 0
Postype=p1
Offset=150,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 74
ground.hittime  = 26
ground.velocity = -16,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1



[State 6141, hibasira4]
type = Projectile
trigger1 = AnimElem = 29, = 4
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
pos = -50, 0
Projremove = 0
Velocity = 0
Postype=p1
Offset=200,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 74
ground.hittime  = 26
ground.velocity = -16,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1

[State 6141, hibasira5]
type = Projectile
trigger1 = AnimElem = 29, = 8
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
pos = -50, 0
Velocity = 0
Projremove = 0
Postype=p1
Offset=250,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 74
ground.hittime  = 26
ground.velocity = -16,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1



[State 6141, hibasira6]
type = Projectile
trigger1 = AnimElem = 29, = 12
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
pos = -50, 0
Projremove = 0
Velocity = 0
Postype=p1
Offset=300,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 74
ground.hittime  = 26
ground.velocity = -16,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1


[State 6141, hibasira7]
type = Projectile
trigger1 = AnimElem = 29, = 16
ProjID = 2051
projAnim = 2051
projRemoveTime = 36
projPriority = 7
postype = p1
pos = -50, 0
Velocity = 0
Postype=p1
Projremove = 0
Offset=350,0
attr = S, HP
damage   = 46,10
animtype = diagup
guardflag = MA
pausetime = 0,20
sparkno = s2052
sparkxy =  0, 0
hitsound   = s7,0
guardsound = s0,2
ground.type = high
ground.slidetime = 14
ground.hittime  = 36
ground.velocity = -10,-12
air.juggle = 5
palfx.time = 30
palfx.add = -100,0,150
palfx.sinadd = 0,50,50,10
palfx.color = 0
palfx.invertall = 1


[State 3000, 炎エフェクト]
type = Explod
trigger1 = ProjHit2051 = 1
anim = 2052
ownpal = 1
sprpriority = 7
postype = p2
pos = 0,-50
bindtime = 200






[State 3000, 相手の特定の攻撃属性無効]
type = NotHitBy
trigger1 = AnimElemTime(2) >= 0 && AnimElemTime(14) < 0
value2 = C, NA
time = 1


[State 3000, 地面揺らし]
type = envshake
trigger1 = Animelem = 20
time = 70
freq = 90
ampl = 10
phase = 0

[State 3000, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 27
trigger2 = AnimElem = 31
trigger3 = AnimElem = 35
trigger4 = AnimElem = 35,=8
trigger5 = AnimElem = 20
trigger6 =  AnimElem = 35, = 16
trigger7= AnimElem = 35, = 24

value = 0, 3


[State 3000, kamera]
type = ScreenBound
trigger1 = 1
value = 0

[State 3000, ヒット定義]
type = HitDef
trigger1 = time%4= 0
attr = S, HA ;立ち超必殺技（Standing, Hyper Attack）
animtype  = Hard
damage    = 12,7
getpower  = 0 ;攻撃を当てた時にパワーゲージを増やさないようにしてる
priority  = 6
guardflag = MA
pausetime = 15,15
sparkxy = 0,0
hitsound   = s7,0
guardsound = 6,0
ground.type = high
ground.slidetime = 30
ground.hittime  = 30
ground.velocity = -10,-12
air.fall = 1
fall.animtype = Hard
fall.recover = 0

[State 3000, ヒット定義];フィニッシュ
type = HitDef
trigger1 = AnimElem = 21
attr = S, HA
animtype  = Hard
damage    = 20,8
getpower  = 0
priority  = 5
guardflag = MA
pausetime = 15,15
sparkxy = -10,-60
hitsound   = 5,4
guardsound = 6,0
ground.type = high
ground.slidetime = 30
ground.hittime  = 30
ground.velocity = -5, -4
guard.velocity = -12
air.velocity = -5,-4
airguard.velocity = -3,-3
fall.animtype = Hard
fall = 1
fall.recover = 0


[State 3000, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------　








;---------------------------------------------------------------------------
;黄泉への回廊
[Statedef 3050]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
anim = 3050
ctrl = 0
sprpriority = 2
facep2   = 1

[State 3050, 物理的なキャラの幅]
type = Width
trigger1 = AnimElemTime(4) >= 0 && AnimElemTime(16) < 0
value = 5,0

[State 3050, 超必殺技暗転時間停止]
type = SuperPause
trigger1 = AnimElem = 1
pos = -300, -270
anim = s1400
sound = s16, 0
poweradd = -1000
time =35
movetime =35
darken = 0
p2defmul = 1


[State 3050, 超必殺技暗転時間停止anten]
type = BGPALFX
trigger1 =time= 1
time = 35
invertall = 1
ignorehitpause = 1


[State 3050, 残像]
type = AfterImage
trigger1 = AnimElem = 1
time = 2

[State 3050, 残像表示時間]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 0
time = 2

[State 3050, 相手の特定の攻撃属性無効]
type = NotHitBy
trigger1 = AnimElem = 2
value = , NA, SA, AT
time = 6

[State 3050, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 0, 2


[State 3050, 音を鳴らす2]
type = PlaySnd
trigger1 = AnimElem = 17
value = 0, 4
 
[State 3050, imarakuni]
type = PlaySnd
trigger1 = AnimElem = 1
trigger1 =Random <= 249
value = 20, 1
volume = 255


[State 3050, kamera]
type = ScreenBound
trigger1 = 1
value = 0


[State 3050, ヒット定義]
type = HitDef
trigger1 = Time = 0
attr = S, HT
animtype  = diagup
damage    = 70, 12
getpower  = 0
priority  = 7
guardflag = MA
pausetime = 20,20
sparkno = s2065
sparkxy = 0,-90
hitsound   = s13,0
guardsound = 6,0
ground.type = high
ground.slidetime = 26
ground.hittime  = 26
ground.velocity = -90,0
guard.velocity = -11
air.velocity = -1.3,-25
airguard.velocity = -4.5,-5
envshake.time = 10        ;攻撃を当てた場合の画面振動の処理
envshake.ampl = 7
envshake.freq = 76
p2facing = 1
fall = 1
fall.recover = 0          ;相手は空中受け身が出来なくなる
fall.envshake.ampl = 6    ;相手が地面に激突した瞬間の画面振動
fall.envshake.freq = 178
fall.envshake.time = 15
mindist = 50,-100         ;攻撃を当てた相手の位置を補正する最小の座標
maxdist = 100,-10         ;攻撃を当てた相手の位置を補正する最大の座標
yaccel = .8 

kill = 0 
guard.kill = 0 
hitonce = 0
p1stateno = 3051
p2stateno = 3052

[State 3050, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
;スマッシュカンフーアッパー：ヒット後
[Statedef 3051]
type    = A
movetype= A
physics = N
anim = 3051

[State 3051, 残像表示時間]
type = AfterImageTime
trigger1 = AnimElem=1
time = 2

[State 3051, 敵、右に吹っ飛ぶ]
type = targetvelset
trigger1 = AnimElem=1
X=-40
Y=0



[State 3051, カメラ、敵のみ追う]
type = ScreenBound
trigger1 = time = [1,33]
value = 0



[State 3051, hurikaeru]
type = turn
trigger1=AnimElem=1



[State 3051, 後ろだ。ばかめ！]
type = bindtotarget
trigger1 = AnimElem=4
id = -1
time = 1
pos = -90,0,food


[State 3051, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 6
value = 6, 3
volume = 255

[State 3051, 音を鳴らす2]
type = PlaySnd
trigger1 = AnimElem = 6
value = 0, 4
freqmul = 2.0  

[State 3051, 敵、上に吹っ飛ぶ]
type = targetvelset
trigger1 = time=14
X=-7
Y=-13

[State 3051, エフェクト画像]
type = Explod
trigger1 = AnimElem = 7
anim = 2065
pos = 0,-90
postype = p2 
ownpal = 1 
bindtime = 1
removetime = 24

[State 3051, ダメージ]
type = targetlifeadd
trigger1 = AnimElem = 7
value = -70
kill = 0


[State 3051, 上だ。ばかめ！]
type = bindtotarget
trigger1 = AnimElem=10
id = -1
time = 1
pos = 0,30,head

[State 3051, 敵、下に吹っ飛ぶ]
type = targetvelset
trigger1 = time=79
X=0
Y=75

[State 3051, 音を鳴らす3]
type = PlaySnd
trigger1 = AnimElem = 12
value = 12, 0
 
[State 3051, 音を鳴らす4]
type = PlaySnd
trigger1 = AnimElem = 12
value = 13, 1
 
[State 3051, 音を鳴らす5]
type = PlaySnd
trigger1 = AnimElem = 10
value = 19, 0
 

[State 3051, エフェクト画像2]
type = Explod
trigger1 = AnimElem = 12
anim = 3061
pos = 0,0
postype = p1 
ownpal = 1 
bindtime = 1
removetime = 8
scale = 2,2 


[State 3051, ダメージ2]
type = targetlifeadd
trigger1 = AnimElem = 12
value = -160


[State 3051, まだ死んでねー]
type = PlaySnd
trigger1 = Animtime = -1
trigger1 =P2Life= [1,50]
value = 20, 0
 


[State 3051, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 50
ctrl = 1
;===========================================================================
[Statedef 3052]
type    = A
movetype= H
physics = N
velset = 0,0


[State 3052, 吹っ飛ぶannie]
type = changeanim2
trigger1 = time=1
value = 3052

[State 3052, tekihurikaeru]
type = turn
trigger1=time=32



[State 3052, ueanime]
type = changeanim2
trigger1=time=32
value = 3053

[State 3052, shitaanime]
type = changeanim2
trigger1=time=88
value = 3054

[State 3052, 相手ステートに戻す]
type = SelfState
trigger1 = time=100
value = 5050



;細胞分裂
[Statedef 3060]
type    = S
movetype= A
physics = S
juggle  = 0
velset = 0,0
anim = 3060
ctrl = 0
sprpriority = 2

[State 3050, 超必殺技暗転時間停止]
type = SuperPause
trigger1 = AnimElem = 1
pos = -300, -270
anim = s1400
sound = s16, 0
poweradd = -6000
time =35
movetime =35
darken = 0
p2defmul = 1


[State 3050, 超必殺技暗転時間停止anten]
type = BGPALFX
trigger1 =time= 1
time = 35
invertall = 1
ignorehitpause = 1


[State 3050, 残像]
type = AfterImage
trigger1 = AnimElem = 1
time = 2

[State 3050, 残像表示時間]
type = AfterImageTime
trigger1 = AnimElemTime(2) >= 0
time = 2

[State 3050, 相手の特定の攻撃属性無効]
type = NotHitBy
trigger1 = AnimElem = 2
value = , NA, SA, AT
time = 6


[State 100];ヘルパー1001を作成
type = Helper

trigger1 =  AnimElem = 18
name = "Helper1"
id = 1001
pos = 100,-270
postype = front
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0




[State 3050, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1





[Statedef 9999];ヘルパー用のステート
type = A
movetype = I
physics = N
velset = 0,4.5
anim = 41
sprpriority = -2

[State -2, ClipBoard]
type = DisplayToClipBoard
trigger1 = 1
Text =  "%d"
Params = floor(ParentDist x)

[State 1000, 0]
type = veladd
trigger1 = 1
y = 0.5

[State 6000, 4]
type = HitOverride
trigger1 = 1
attr = SCA, AA, AT, AP
stateno = 105000
time = -1
forceair = 1

[State 1000, 0]
type = PalFX
trigger1 = 1
time = -1
color = 100

[State 3051, 2]
type = ChangeState
trigger1 = pos y>=0;time = 0
value = 100052


[Statedef 100000]
type = S
physics = S
sprpriority = 0

[State 0, 1]
type = ChangeAnim
trigger1 = Anim != 0 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0 ;Turn anim over
value = 0

[State 0, 2]
type = VelSet
trigger1 = Time = 0
y = 0

[State 0, 3] ;Stop moving if low velocity or 4 ticks pass
type = VelSet
trigger1 = abs(vel x) < 2
trigger2 = Time = 4
x = 0

[State 0, 4] ;Are you dead?
type = ChangeState
;trigger1 =Parent,alive != 1
trigger1 =Parent,life <= 0
value = 105050

[State 0, 4] ;Are you lose?
type = ChangeState
trigger1 =Parent,stateno = 170
value = 170


[State 3051, 2]
type = ChangeState
triggerall = !win && !lose
trigger1 = anim = 0 && time >= 7
trigger1 = p2dist x <= 150
trigger1 = random < 300
value = 100010

[State 3051, 2]
type = ChangeState
trigger1 = random < 3
value = 100200

[State 6001, Win Pose]
type = ChangeState
triggerall = win
trigger1 = parent, stateno = [180,189]
trigger1 = time >= 0 && anim = 0
value = 182

[State 6001, Turn]
type = ChangeState
triggerall = !win && !lose
triggerall = (parent, stateno != 920) && (parent, stateno != 930)
trigger1 = time >= 0
trigger1 = p2dist x < 1
value = 100005

[State 6001, Rush Forward]
type = ChangeState
triggerall = !win && !lose
trigger1 = anim = 0 && time >= 7
trigger1 = p2dist x >= 150
value = 100100


[State 6001, Standing RoundHouse]
type = changestate
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
triggerall = anim = 0 && time >= 7
triggerall = random<200
trigger1 = p2dist x < 80 && (p2statetype = S || p2statetype = C)
trigger2 = p2dist x < 100 && p2statetype = A
value = 100230

[State 6001, Crouching Forward]
type = changestate
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
triggerall = random<200
trigger1 = anim = 0 && time >= 7
trigger1 = p2dist x < 100
value = 100240

[State 6001, Overhead or Rush Fierce]
type = changestate
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
trigger1 = anim = 0 && time >= 7
trigger1 = p2dist x < 60
value = ifelse(random>500,100200,100210)

[State 6001, Walk]
type = ChangeState
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
triggerall = anim = 0 && time >= 8
trigger1 = p2dist x < 150
value = 100020


;================= ターン =========================================================
[Statedef 100005]
type = S
movetype = I
physics = S
sprpriority = 0
anim = 5
velset = 0,0
ctrl = 0

[State 6002, 1]
type = turn
trigger1 = time = 0

[State 6002, 9]
type = ChangeState
trigger1 = animtime = 0
value = 100000
;---------------------------------------------------------------------------
; Stand to Crouch
[Statedef 100010]
type    = C
physics = C
anim = 10

[State 10, 1]
type = VelMul
trigger1 = Time = 0
x = .75

[State 10, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 100011

;---------------------------------------------------------------------------
; Crouching
[Statedef 100011]
type    = C
physics = C
anim = 11
sprpriority = 0

[State 11, 1] ;Change from turning animation
type = ChangeAnim
trigger1 = Anim = 6 && AnimTime = 0
value = 100011

[State 6001, Overhead or Rush Fierce]
type = changestate
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
trigger1 = anim = 11 && time >= 7
trigger1 = p2dist x < 60
value = ifelse(random>500,100400,100410)

[State 6001, Standing RoundHouse]
type = changestate
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
triggerall = anim = 11 && time >= 7
triggerall = random<200
trigger1 = p2dist x < 80 && (p2statetype = S || p2statetype = C)
trigger2 = p2dist x < 100 && p2statetype = A
value = 100430

[State 6001, Crouching Forward]
type = changestate
triggerall = !win && !lose
triggerall = p2stateno != 5100 && p2stateno != 5101 && p2stateno != 5110 && p2stateno != 5120
;triggerall = (parent, stateno != 920) && (parent, stateno != 930)
triggerall = random<200
trigger1 = anim = 11 && time >= 7
trigger1 = p2dist x < 100
value = 100440

[State 10, 2]
type = ChangeState
trigger1 = random < 300
value = 100012

;---------------------------------------------------------------------------
; Crouch to Stand
[Statedef 100012]
type    = S
physics = S
anim = 12

[State 12, 1]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000

;---------------------------------------------------------------------------
; Walk
[Statedef 100020]
type    = S
physics = S
sprpriority = 0
anim = 20

[State 6002, 1]
type = Velset
trigger1 = anim = 20
x = 2.1

[State 6001, Rush Forward]
type = ChangeState
triggerall = !win && !lose
trigger1 = anim = 20
trigger1 = p2dist x >= 150
value = 100100

[State 6002, 9]
type = ChangeState
trigger1 = win || lose
trigger2 = p2dist x < 60
value = 100000





;---------------------------------------------------------------------------
; Jump Land
[Statedef 100052]
type    = S
physics = S
ctrl = 0
anim = 47

[State 52, 1]
type = VelSet
trigger1 = Time = 0
y = 0

[State 52, 2]
type = PosSet
trigger1 = Time = 0
y = 0

[State 52, 3]
type = CtrlSet
trigger1 = Time = 3
value = 1

[State 52, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000
;ctrl = 1

;---------------------------------------------------------------------------
; RUN_FWD
[Statedef 100100]
type    = S
physics = S
anim = 100
sprpriority = 1

[State 100, 1]
type = VelSet
trigger1 = 1
x = const(velocity.run.fwd.x)

[State 100, 2] ;Prevent run from canceling into walk
type = AssertSpecial
trigger1 = 1
flag = NoWalk

[State 100, 3] ;Prevent from turning
type = AssertSpecial
trigger1 = 1
flag = NoAutoTurn

[State 100, 4]
type = ChangeState
trigger1 = random < 300
;trigger1 = command != "holdfwd"
value = 100000





;---------------------------------------------------------------------------
; HITG_SHAKE
[Statedef 105000]
type    = S
movetype= H
physics = N
velset = 0,0

[State 5000, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = ifelse((GetHitVar(groundtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5000, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5000, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5000, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5000, 5] ;State type gets set to aerial if getting hit up
type = StateTypeSet
trigger1 = Time = 0
trigger1 = GetHitVar(yvel) != 0 || GetHitVar(fall)
trigger2 = Pos Y != 0
statetype = a

[State 5000, 6]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0 && !GetHitVar(fall)
value = 105001 ;HITG_SLIDE

[State 5000, 7]
type = ChangeState
trigger1 = HitShakeOver
value = 105030

[State 5000, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5000, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5000, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

;---------------------------------------------------------------------------
; HITG_SLIDE
[Statedef 105001]
type    = S
movetype= H
physics = S

[State 5001, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5001, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
value = 5005 + GetHitVar(animtype) + (GetHitVar(groundtype)=2)*10

[State 5001, 3] ;Stop sliding back
type = VelMul
trigger1 = Time >= GetHitVar(slidetime)
x = .6

[State 5001, 4]
type = VelSet
trigger1 = HitOver
x = 0

[State 5001, 5]
type = DefenceMulSet
trigger1 = HitOver
value = 1

[State 5001, 6]
type = ChangeState
trigger1 = HitOver
value = 100000
;ctrl = 1

;---------------------------------------------------------------------------
; HITC_SHAKE
[Statedef 105010]
type    = C
movetype= H
physics = N
velset = 0,0

[State 5010, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = 5020 + GetHitVar(animtype)

[State 5010, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5010, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5010, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5010, 5] ;State type gets set to aerial if getting hit up
type = StateTypeSet
triggerall = Time = 0
trigger1 = GetHitVar(yvel) != 0 || GetHitVar(fall)
trigger2 = Pos Y != 0
statetype = a

[State 5010, 6]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0 && !GetHitVar(fall)
value = 105011 ;HITC_SLIDE

[State 5010, 7]
type = ChangeState
trigger1 = HitShakeOver
value = 105030

[State 5010, FFB Light]
type = ForceFeedback
trigger1 = anim = 5020
persistent = 0
time = 6
waveform = square

[State 5010, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5021
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5010, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5022
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

;---------------------------------------------------------------------------
; HITC_SLIDE
[Statedef 105011]
type    = C
movetype= H
physics = C

[State 5011, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5011, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
value = 5025 + GetHitVar(animtype)

[State 5011, 3] ;Stop sliding back
type = VelMul
trigger1 = Time >= GetHitVar(slidetime)
x = .6

[State 5011, 4]
type = VelSet
trigger1 = HitOver
x = 0

[State 5011, 5]
type = DefenceMulSet
trigger1 = HitOver
value = 1

[State 5011, 6]
type = ChangeState
trigger1 = HitOver
value = 100011
;ctrl = 1


;---------------------------------------------------------------------------
; HITA_SHAKE
[Statedef 105020]
type    = A
movetype= H
physics = N
velset = 0,0

[State 5020, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = ifelse((GetHitVar(airtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5020, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5020, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5020, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5020, 5]
type = ChangeState
trigger1 = HitShakeOver
value = 105030

[State 5020, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5020, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5020, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
trigger4 = anim = [5051,5059]
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

;---------------------------------------------------------------------------
; HITA_UP (initial going up)
[Statedef 105030]
type    = A
movetype= H
physics = N
ctrl = 0

[State 5030, 1]
type = VelAdd;Gravity
trigger1 = 1
y = GetHitVar(yaccel)

[State 5030, 2]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 5030, 3]
type = ChangeState
triggerall = !HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= 10  ;.
value = 105040 ;HITA_RECOV

[State 5030, 4]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= 10  ;.
value = 105050 ;HITA_FALL

[State 5030, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 105035 ;HITA_UP (transition)

;---------------------------------------------------------------------------
; HITA_UP_T (transition)
[Statedef 105035]
type    = A
movetype= H
physics = N

[State 5035, 1]
type = ChangeAnim
trigger1 = Time = 0
trigger1 = SelfAnimExist(5035)
trigger1 = Anim != [5051,5059] ;Not if in hit up anim
trigger1 = Anim != 5090 ;Not if hit off ground anim
value = 5035

[State 5035, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5035, 3]
type = ChangeState
triggerall = !HitFall
trigger1 = HitOver  ;Hit is over
trigger2 = AnimTime = 0 ;Animation over
trigger3 = Vel Y > 0    ;Hit ground
trigger3 = Pos Y >= 10  ;.
trigger4 = Time = 0     ;No transition anim
trigger4 = Anim != 5035 ;.
value = 105040 ;HITA_RECOV

[State 5035, 4]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver  ;Hit is over
trigger2 = AnimTime = 0 ;Anim is over
trigger3 = Vel Y > 0    ;Hit ground
trigger3 = Pos Y >= 10  ;.
trigger4 = Time = 0     ;No transition anim
trigger4 = Anim != 5035 ;.
value = 105050 ;HITA_FALL

;---------------------------------------------------------------------------
; HITA_RECOV (recovering in air, not falling)
[Statedef 105040]
type    = A
movetype= H
physics = N

[State 5040, 1]
type = ChangeState
trigger1 = !Alive
value = 105050

[State 5040, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim != 5040
trigger2 = Time = 0
trigger2 = Anim != 5035
value = 5040

[State 5040, 3]
type = CtrlSet
trigger1 = HitOver
value = 1

[State 5040, 4]
type = StateTypeSet
trigger1 = HitOver
movetype = I

[State 5040, 5]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5040, 6]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 100052 ;JUMPLAND

;---------------------------------------------------------------------------
; HITA_FALL (knocked up, falling)
[Statedef 105050]
type    = A
movetype= H
physics = N

[State 5050, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 5050, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= ifelse(anim = 5050, 1, -2)
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 5050, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5050, 4] ;Recover near ground
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= -20
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 105200 ;HITFALL_RECOVER

[State 5050, 5]; Recover in mid air
type = ChangeState
triggerall = Vel Y > -1
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 105210 ;HITFALL_AIRRECOVER

[State 5050, 6]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= ifelse((anim = [5051,5059]) || (anim = [5061,5069]), 0, 25)
value = 105100 ;HIT_BOUNCE

;---------------------------------------------------------------------------
; HIT_TRIP (shaking)
[Statedef 105070]
type    = A
movetype= H
physics = N
velset = 0,0

[State 5070, 1]
type = ChangeAnim 
trigger1 = 1
value = 5070

[State 5070, 2]
type = ChangeState
trigger1 = HitShakeOver
value = 105071

[State 5070, 3]
type = ForceFeedback
trigger1 = time = 0
time = 12
waveform = sinesquare
ampl = 140

;---------------------------------------------------------------------------
; HIT_TRIP2 (fall through air)
[Statedef 105071]
type    = A
movetype= H
physics = N

[State 5071, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 5071, 2] ;Acceleration
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5071, 3] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 15
type = ChangeState
value = 105110

;---------------------------------------------------------------------------
; HITL_SHAKE
[Statedef 105080]
type    = L
movetype= H
physics = N
velset = 0,0

[State 5080, 1] ;Set default anim
type = VarSet
trigger1 = time = 0
sysvar(2) = ifelse (GetHitVar(yvel) = 0, 105080, 105090)

[State 5080, 2]
type = VarAdd
trigger1 = time = 0
trigger1 = (anim = [5081,5089]) || (anim = [5111,5119])
trigger1 = SelfAnimExist(sysvar(2) + (anim % 10))
sysvar(2) = anim % 10

[State 5080, 3] ;If 5090 doesn't exist, default to 5030
type = VarSet
trigger1 = time = 0
trigger1 = sysvar(2) = 105090
trigger1 = !SelfAnimExist(5090)
sysvar(2) = 105030

[State 5080, 3] ;Freeze
type = ChangeAnim
trigger1 = 1
value = sysvar(2)

[State 5080, 4]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0
value = 105081 ;HITL_SLIDE

[State 5080, 5]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) != 0
value = 105030 ;HITA_UP

;---------------------------------------------------------------------------
; HITL_SLIDE
[Statedef 105081]
type    = L
movetype= H
physics = C

[State 5081, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5081, 2]
type = VelSet
trigger1 = HitOver
x = 0

[State 5081, 3] ;Don't show hit ground frame
type = VarSet
trigger1 = Time = 0
sysvar(0) = 1

[State 5081, 4]
type = ChangeState
trigger1 = HitOver
value = 105110 ;HIT_LIEDOWN

;---------------------------------------------------------------------------
; HIT_BOUNCE (hit ground)
[Statedef 105100]
type    = L
movetype= H
physics = N

[State 5100, 1]
type = VelSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
trigger1 = vel x > 1
x = 1

[State 5100, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5100, Var] ;Save fall velocity
type = VarSet
trigger1 = Time = 0
sysvar(1) = floor(vel y)

[State 5100, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = (anim != [5051,5059]) && (anim != [5061,5069])
trigger2 = !SelfAnimExist(5100 + (anim % 10))
value = 5100

[State 5100, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
trigger1 = time = 0
trigger1 = (anim = [5051,5059]) || (anim = [5061,5069])
trigger1 = SelfAnimExist(5100 + (anim % 10))
value = 5100 + (anim % 10)

[State 5100, 4]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5100, 5]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5100, 6] ;Reduce speed
type = VelMul
trigger1 = Time = 0
x = 0.75

[State 5100, 7]
type = ChangeState
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) = 0
value = 105110 ;HIT_LIEDOWN

[State 5100, 8]
type = GameMakeAnim
trigger1 = Time = 1
value = 60 + (sysvar(1) > 5) + (sysvar(1) > 14)
pos = 0, 0
under = sysvar(1) <= 14

[State 5100, 9]
type = HitFallDamage
trigger1 = Time = 3

[State 5100, 10]
type = PlaySnd
trigger1 = Time = 1
value = F7, (sysvar(1) > 5) + (sysvar(1) > 14)

[State 5100, 11]
type = PosFreeze
trigger1 = 1

[State 5100, 12]
type = ChangeState
trigger1 = AnimTime = 0
value = 105101

[State 5100, 13]
type = ForceFeedback
trigger1 = Time = 0
waveform = sinesquare
ampl = 128,-3,-.2,.005
time = 20

;---------------------------------------------------------------------------
; HIT_BOUNCE (bounce into air)
[Statedef 105101]
type    = L
movetype= H
physics = N

[State 5101, 1] ;Coming hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5101,5109]
trigger2 = !SelfAnimExist(5160 + (anim % 10))
value = 5160

[State 5101, 2] ;Coming hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5101,5109]
trigger1 = SelfAnimExist(5160 + (anim % 10))
value = 5160 + (anim % 10)

[State 5101, 3]
type = HitFallVel
trigger1 = Time = 0

[State 5101, 4]
type = PosSet
trigger1 = Time = 0
y = 20

[State 5101, 5] ;Acceleration
type = VelAdd
trigger1 = 1
y = .4

[State 5101, 6] ;Hit ground
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 12
type = ChangeState
value = 105110

;---------------------------------------------------------------------------
; HIT_LIEDOWN
[Statedef 105110]
type    = L
movetype= H
physics = N

[State 5110, EnvShake]
type = FallEnvShake
trigger1 = Time = 0

[State 5110, 1] ;For hit up/up-diag type (from state 5081)
type = ChangeAnim
persistent = 0
trigger1 = SelfAnimExist(5110 + (anim % 10))
trigger1 = anim = [5081,5089]
value = 5110 + (anim % 10)

[State 5110, 2] ;Hit ground anim (normal)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim != [5161,5169]
trigger2 = !SelfAnimExist(5170 + (anim % 10))
value = 5170

[State 5110, 3] ;Hit ground anim (for hit up)
type = ChangeAnim
triggerall = time = 0
triggerall = anim != [5110,5119] ;Not already changed anim
trigger1 = anim = [5161,5169]
trigger1 = SelfAnimExist(5170 + (anim % 10))
value = 5170 + (anim % 10)

[State 5110, 4]
type = HitFallDamage
trigger1 = Time = 0

[State 5110, 5]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5110, Var] ;Get fall velocity
type = VarSet
trigger1 = Time = 0
trigger1 = GetHitVar(fall.yvel) != 0
sysvar(1) = floor(vel y)

[State 5110, 6]
type = PlaySnd
trigger1 = Time = 0
trigger1 = !SysVar(0)
value = F7, (sysvar(1) > 5) + (sysvar(1) > 14)

[State 5110, 7]
type = GameMakeAnim
trigger1 = Time = 0
trigger1 = !SysVar(0)
value = 60 + (sysvar(1) > 5) + (sysvar(1) > 14)
pos = 0, 0
under = sysvar(1) <= 14

[State 5110, 8]
type = VelSet
trigger1 = Time = 0
y = 0

[State 5110, 9] ;For hit up type
type = ChangeAnim
persistent = 0
triggerall = anim = [5171,5179]
triggerall = SelfAnimExist(5110 + (anim % 10))
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground anim
value = 5110 + (anim % 10)

[State 5110, 10] ;For normal
type = ChangeAnim
persistent = 0
triggerall = Anim != [5111,5119]
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
value = 5110

[State 5110, 11] ;If just died
type = null;ChangeState
triggerall = !alive
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
trigger3 = Anim = [5110,5119]
value = 105150

[State 5110, 11] ;If just died
type = ChangeState
triggerall =Parent,alive != 1
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
trigger3 = Anim = [5110,5119]
value = 105150

[State 5110, 11] ;If just died
type = ChangeState
triggerall =Parent,alive = 1
trigger1 = AnimTime = 0
trigger2 = SysVar(0) ;SysVar(0) = 1 avoids hit ground frame
trigger3 = Anim = [5110,5119]
value = 105120

[State 5110, 12]
type = VarSet
trigger1 = SysVar(0)
trigger1 = Time = 0
sysvar(0) = 0

[State 5110, 13] ;Friction
type = VelMul
trigger1 = 1
x = 0.85

[State 5110, 14]
type = ForceFeedback
trigger1 = alive
trigger1 = Time = 0
time = 8
ampl = 240
waveform = sine

[State 5110, 15]
type = ForceFeedback
trigger1 = !alive
trigger1 = Time = 0
ampl = 200, 7, -.467
time = 30
waveform = sine

;---------------------------------------------------------------------------
; HIT_GETUP
[Statedef 105120]
type    = L
movetype= I
physics = N



[State 5120, 1a] ;Get up anim (normal)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim != [5111,5119]
trigger2 = !SelfAnimExist(5120 + (anim % 10))
value = 5120

[State 5120, 1b] ;Get up anim (for hit up/diag-up)
type = ChangeAnim
triggerall = time = 0
trigger1 = anim = [5111,5119]
trigger1 = SelfAnimExist(5120 + (anim % 10))
value = 5120 + (anim % 10)

[State 5120, 2]
type = VelSet
trigger1 = Time = 0
x = 0

[State 5120, 3]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

[State 5120, 4]
type = HitFallSet
trigger1 = AnimTime = 0
value = 1

[State 5120, 5] ;Can't be thrown right after getting up
type = NotHitBy
trigger1 = AnimTime = 0
value = , NT,ST,HT
time = 12

[State 5120, 6] ;Can't be hit right after getting up (short time)
type = NotHitBy
trigger1 = AnimTime = 0
value2 = SCA
time = 3

[State 5120, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000
;ctrl = 1

;---------------------------------------------------------------------------
; HIT_LIEDEAD
[Statedef 105150]
type    = L
movetype= H
physics = N
sprpriority = -3

[State 5150, 1] ;Normal anim
type = ChangeAnim
triggerall = Time = 0
triggerall = SelfAnimExist(5140)
trigger1 = (anim != [5111,5119]) && (anim != [5171,5179])
trigger2 = !SelfAnimExist(5140 + (anim % 10))
value = 5140

[State 5150, 3] ;Hit up type anim
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (anim = [5111,5119]) || (anim = [5171,5179])
trigger1 = SelfAnimExist(5140 + (anim % 10))
value = 5140 + (anim % 10)

[State 5150, 4] ;Match over anim
type = ChangeAnim
persistent = 0
;trigger1 = Time = 0
trigger1 = MatchOver = 1
trigger1 = Anim = [5140,5149]
trigger1 = SelfAnimExist(anim+10)
value = anim+10

[State 5150, 5] ;Switch to 5110 if liedead anim does not exist
type = ChangeAnim
trigger1 = Time = 0
trigger1 = Anim != [5140,5159]
trigger1 = Anim != [5110,5119]
value = 5110

[State 5150, 6] ;Friction
type = VelMul
trigger1 = 1
x = 0.85

[State 5150, 7] ;Friction
type = VelSet
trigger1 = Vel x < .05
persistent = 0
x = 0

[State 5150, 8]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; HIT_FALLRECOVER (still falling)
[Statedef 105200]
type    = A
movetype= H
physics = N

[State 5200, 1] ;Change anim if done with transition
type = ChangeAnim
trigger1 = Anim = 5035
trigger1 = AnimTime = 0
value = 5050

[State 5200, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5200, 3]
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 10
value = 105201

;---------------------------------------------------------------------------
; HIT_FALLRECOVER (on the ground)
[Statedef 105201]
type    = A
movetype= H
physics = A
anim = 5200

[State 5201, 1] ;Turn if not facing opponent
type = Turn
trigger1 = Time = 0
trigger1 = p2dist X < -5

[State 5201, 2]
type = VelSet
trigger1 = Time = 0
x = -.15
y = -3.5

[State 5201, 3]
type = PosSet
trigger1 = Time = 0
y = 0

[State 5201, 4]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

[State 5201, 5] ;Blink white
type = PalFX
trigger1 = Time = 0
time = 3
add = 128,128,128 ;256,256,256

[State 5201, 6]
type = GameMakeAnim
trigger1 = Time = 1
value = 60
pos = 0, 0
under = 1

;---------------------------------------------------------------------------
; HIT_AIRFALLRECOVER
[Statedef 105210]
type    = A
movetype= I
physics = N
anim = 5210
ctrl = 0

[State 5210, 1] ;Blink white
type = PalFX
trigger1 = Time = 0
time = 3
add = 128,128,128 ;256,256,256

[State 5210, 1]
type = PosFreeze
trigger1 = Time = 0
value = 4

[State 5210, 2] ;Turn if not facing opponent
type = Turn
trigger1 = Time = 0
trigger1 = p2dist X < -20

[State 5210, 1] 
type = VelMul
trigger1 = Time = 4
x = .8
y = .8

[State 5210, 1]
type = VelAdd
trigger1 = Time = 4
y = -4.5

[State 5210, 1] 
type = VelMul
trigger1 = Time = 4
trigger1 = Vel Y > 0
y = .5

[State 5210, 1]
type = VelAdd
trigger1 = Time = 4
trigger1 = Vel Y > -3
y = -2

[State 5210, 1]
type = VelAdd
trigger1 = Time = 4
trigger1 = Vel Y > -2
y = -1

[State 5210, 2] ;Go up
type = VelAdd
trigger1 = Time = 4
trigger1 = Command = "holdup"
y = -2

[State 5210, 2] ;Go down
type = VelAdd
trigger1 = Time = 4
trigger1 = Command = "holddown"
y = 1.5

[State 5210, 2] ;Go fwd
type = VelMul
trigger1 = Time = 4
trigger1 = Command = "holdfwd"
x = 1

[State 5210, 2] ;Go back
type = VelAdd
trigger1 = Time = 4
trigger1 = Command = "holdback"
x = -1

[State 5210, 3]
type = NotHitBy
trigger1 = Time = 0
value = SCA
time = 15

[State 5210, 4]
type = CtrlSet
trigger1 = Time = 20
value = 1

[State 5210, 5]
type = VelAdd;Gravity
trigger1 = Time >= 4
y = .35

[State 5210, 5] ;Land on ground
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 100052 ;JUMP_LAND
;ctrl = 1

;---------------------------------------------------------------------------
; Continue?
[Statedef 105500]
type = S
ctrl = 0
anim = 5300
velset = 0,0

[State 5500, 1] ;Use continue animation if available
type = ChangeAnim
trigger1 = time = 0
trigger1 = SelfAnimExist(5500)
value = 105500

;---------------------------------------------------------------------------
; Initialize (at the start of the round)
[Statedef 105900]
type = S

[State 5900, 1] ;Clear all int variables
type = VarRangeSet
trigger1 = roundsexisted = 0
value = 0

[State 5900, 2] ;Clear all float variables
type = VarRangeSet
trigger1 = roundsexisted = 0
fvalue = 0

[State 5900, 3] ;Intro for round 1
type = ChangeState
trigger1 = roundno = 1
value = 100190



;---------------------------------------------------------------------------
; Stand Light Punch
; CNS difficulty: easy
[Statedef 100200]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 200                       ;Change animation (Def: no change)
poweradd = 20*var(11)                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 4*var(10)+1, 0                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8,4;8, 8                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 3;5             ;Time that the opponent slides back
ground.hittime  = 6;12             ;Time opponent is in hit state
ground.velocity = -4             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air
guard.ctrltime = 0

[State 200, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0




[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000
ctrl = 1



;---------------------------------------------------------------------------
; Standing strong punch
; CNS difficulty: easy
; Note the width controller. It makes KFM's push box larger, so he doesn't
; stand so close to the opponent. Hit Ctrl-C and look at the red bar at his
; feet.
; The sprpriority for this state is at -1, instead of the usual 2 for
; attacks. This makes KFM appear behind the opponent initially.
; The SprPriority controller in [State 210, 4] brings KFM to the front when
; his arm has swung over.
; To stop KFM from pausing in his swing frame, there is a ChangeAnim in
; [State 210, 3] that detects if the hit has come in contact with the
; opponent during that frame, and switches to the next animation element
; (notice the elem=6 parameter). If you don't see what I mean, try commenting
; out that controller, then hit someone with this attack.
[Statedef 100210]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 65*var(11)
ctrl = 0
velset = 0,0
anim = 210
sprpriority = -1

[State 210, Width]
type = Width
trigger1 = (AnimElemTime (2) >= 0) && (AnimElemTime (7) < 0)
value = 15,0

[State 210, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 4

[State 210, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
animtype  = Medium
damage    = 11*var(10)+2
guardflag = MA
pausetime = 12,6;12,12
sparkno = 1
sparkxy = -10,-70
hitsound   = 5,2
guardsound = 6,0
ground.type = High
ground.slidetime = 6;12
ground.hittime  = 7;15
ground.velocity = -5.5
air.velocity = -2.5,-4
guard.ctrltime = 2

[State 210, 3]
type = ChangeAnim
trigger1 = AnimElemTime(5) > 0 && AnimElemTime(6) <= 0
trigger1 = movecontact
ignorehitpause = 1
persistent = 0
value = 210
elem = 6

[State 210, 4]
type = SprPriority
trigger1 = AnimElem = 5
value = 2

[State 210, 5]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000
;ctrl = 1

;---------------------------------------------------------------------------
; Standing light kick
; CNS difficulty: easy
[Statedef 100230]
type    = S
movetype= A
physics = S
juggle  = 4
poweradd= 22*var(11)
ctrl = 0
velset = 0,0
anim = 230
sprpriority = 2

[State 230, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 230, 2]
type = HitDef
trigger1 = Time = 0
attr = S, NA
animtype  = Medium
damage    = 5*var(10)+1
guardflag = MA
pausetime = 12,6;12,12
sparkno = 0
sparkxy = -10,-37
hitsound   = 5,1
guardsound = 6,0
ground.type = Low
ground.slidetime = 5;10
ground.hittime  = 6;12
ground.velocity = -5
air.velocity = -2.5,-3.5
guard.ctrltime = 1

[State 230, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000
;ctrl = 1

;---------------------------------------------------------------------------
; Standing strong kick
; CNS difficulty: easy
[Statedef 100240]
type    = S
movetype= A
physics = S
juggle  = 5
poweradd= 65*var(11)
ctrl = 0
velset = 0,0
anim = 240
sprpriority = 2

[State 240, 1]
type = PlaySnd
trigger1 = Time = 2
value = 0, 1

[State 240, 2]
type = HitDef
trigger1 = Time = 0
attr = S, NA
animtype  = Medium
damage    = 12*var(10)+2
guardflag = MA
pausetime = 12,6;12,12
sparkno = 1
sparkxy = -10,-60
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 6;12
ground.hittime  = 7;15
ground.velocity = -6
air.velocity = -2.2,-3.2
guard.ctrltime = 2

[State 240, 3]
type = PosAdd
trigger1 = AnimElem = 7
x = 12

[State 240, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 100000
;ctrl = 1

;---------------------------------------------------------------------------
;Crouching light punch
; CNS difficulty: easy
; Description: Simple crouching attack. The HitDef's guardflag parameter
;     is set to "L", meaning that the move can only be guarded low
;     (crouching), and not by standing or jumping opponents.
;     Like for all light attacks, it's a good idea to keep the slidetime
;     and hittime parameters at a smaller number, so the opponent isn't
;     stunned for too long. For all crouching attacks you have to
;     remember to set the attr parameter to indicate that it is crouching
;     attack. In this case, "C, NA" stands for "crouching, normal attack".
;     The HitDef's priority is set at 3, instead of the default of 4,
;     so this attack has a lower priority than most others, meaning
;     KFM will get hit instead of trading hits with his opponent if
;     their attack collision boxes (Clsn1) intersect each other's Clsn2
;     boxes at the same time.
[Statedef 100400]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 15*var(11)
ctrl = 0
anim = 400
sprpriority = 2

[State 400, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 400, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 4*var(10)+1
priority  = 3
animtype  = Light
hitflag = MAF
guardflag = L
pausetime = 10,5;10,11
sparkno = 0
sparkxy = -10,-42
hitsound   = 5,0
guardsound = 6,0
ground.type = Low
ground.slidetime = 2;4
ground.hittime  = 6;12
ground.velocity = -4
air.velocity = -1.5,-3
guard.ctrltime = 0

[State 400, 3]
type = CtrlSet
trigger1 = Time = 5
value = 1

[State 400, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 100011

;---------------------------------------------------------------------------
;Crouching strong punch
; CNS difficulty: easy
; Description: This is a 2-hit move. It is done by having two HitDefs
;     triggered, one for each frame of animation that hits.
;     Notice how the first hit cannot be guarded by an opponent in the
;     air, because of the "M" in the guardflag, meaning it can only
;     be guarded "middle". The second hit has an "MA" guardflag, so
;     it can be guarded both on the ground and in the air.
; CNS レベル: 易
; 詳細: これは殴打が二発ある攻撃です。
; 殴打できるアニメーションの枚は一々HitDefを登録しています。
; 一発目の攻撃のHitDefにはguardflagが「M」（middle＝中段ガード）
; にセットされているので、相手は空中でガードできません。二発目
; の攻撃のguardflagは「MA」（middle+air＝中段＋空中ガード）で、
; 地上、空中でもガードすることができます。
[Statedef 100410]
type    = C
movetype= A
physics = C
juggle  = 6
poweradd= 50*var(11)
ctrl = 0
anim = 410
sprpriority = 2

[State 410, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

;This is the first hit, triggered on the 3rd element of animation.
[State 410, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = C, NA
damage    = 7*var(10)+1
animtype  = Medium
hitflag = MAF
guardflag = M
pausetime = 12,6;12,12
sparkno = 1
sparkxy = -10,-55
hitsound   = 5,2
guardsound = 6,0
ground.type = Low
ground.slidetime = 6;12
ground.hittime  = 7;15
ground.velocity = -4
air.velocity = -3,-4
guard.ctrltime = 1

;This is the second hit, triggered on the 4th element of animation.
[State 410, 3]
type = HitDef
trigger1 = AnimElem = 4
attr = C, NA
damage    = 7*var(10)+1
animtype  = Medium
hitflag = MAF
guardflag = MA
pausetime = 12,6;12,12
sparkxy = -10,-83
hitsound   = 5,2
guardsound = 6,0
ground.type = High
ground.slidetime = 6;12
ground.hittime  = 7;15
ground.velocity = -7
air.velocity = -3,-4
guard.ctrltime = 1

[State 410, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 100011
ctrl = 1

;---------------------------------------------------------------------------
;Crouching light kick
; CNS difficulty: easy
[Statedef 100430]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= 22*var(11)
ctrl = 0
anim = 430
sprpriority = 2

[State 430, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 0

[State 430, 2]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 5*var(10)+1
animtype  = Light
hitflag = MAFD
guardflag = L
pausetime = 12,6;12,12
sparkno = 0
sparkxy = -10,-8
hitsound   = 5,1
guardsound = 6,0
ground.type = Low
ground.slidetime = 3;6
ground.hittime  = 6;12
ground.velocity = -5
air.velocity = -2,-3
down.velocity = -5,0
;down.hittime = 20
guard.ctrltime = 2

[State 430, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 100011
ctrl = 1

;---------------------------------------------------------------------------
;Crouch Strong Kick
; CNS difficulty: easy
; Description: This move uses "Trip" for the "ground.type" parameter in
;     its HitDef. It's a special type that puts the opponent in a tripped
;     animation as he falls. Also, the hitflag parameter in the HitDef
;     is set to "MAFD". The "D" indicates that a downed opponent can be
;     hit by the attack.
; CNS レベル: 易
; 詳細:
[Statedef 100440]
type    = C
movetype= A
physics = C
juggle  = 7
poweradd= 70*var(11)
ctrl = 0
anim = 440
sprpriority = 2

[State 440, 2]
type = PlaySnd
trigger1 = Time = 2
value = 0, 2

[State 440, 3]
type = HitDef
trigger1 = Time = 0
attr = C, NA
damage    = 12*var(10)+2
hitflag = MAFD
guardflag = L
pausetime = 12,6;12,12
sparkno = 1
sparkxy = -5,-10
hitsound   = 5,2
guardsound = 6,0
ground.type = Trip
ground.slidetime = 5;10
ground.hittime  = 7;15
ground.velocity = -1.5,-2
air.velocity = -1.2,-3
guard.velocity = -5
fall = 1
guard.ctrltime = 2

[State 440, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 100011
ctrl = 1




;===========================================================================
; ちょっとこ丸が追加したステート
;===========================================================================
;---------------------------------------------------------------------------
; ここから下の５つのステートは僕が修正前の和訳ＫＦＭに
; 追加パッチとして入れていたものです。修正と調整も済んでます。
; 本家のカンフーマンには存在しません。
; 見慣れないステートコントローラ・トリガーやテクニックがあるので
; キャラ作りのスキルを上げたい方は参考にしてください。
;
; ただし、作成者自身のスキルアップのためにわざと「不完全な状態」にしてます。
; 試行錯誤考えながら改善して、あなたが今作っているキャラに流用してください。
;===========================================================================
;---------------------------------------------------------------------------
; 単なるパワーゲージを溜めるためのステート。
; 攻撃用のステートじゃないので、movetypeは「I」にしてます。
;
; このステートで「hold_c」のコマンドを入力し続けてる間（押しっぱなし）は、
;「PowerAdd」にてパワーゲージが毎フレーム６ポイント増加するようになってる。
;
; エフェクト画像を消すための命令（RemoveExplod）を
;『常時監視ステート（－２）』にて設定しているので、そちらも参照してね。
;---------------------------------------------------------------------------
;パワー溜め（特殊行動）
[Statedef 700]
type     = S
movetype = I
physics  = S
ctrl     = 0
velset   = 0,0
anim     = 700
sprpriority = 1

[State 700, パワーゲージ増減]
type = PowerAdd
trigger1 = 1
value = 6

[State 700, 押し判定]
type = PlayerPush
trigger1 = 1
value = 0 ;相手を押さず、すり抜ける事が出来る。

[State 700, エフェクト];「テンプレート.txt」参照
type = Explod
trigger1 = NumExplod(130) = 0 ;ＩＤナンバー「130」のExplodが画面中に１枚も出ていない時
anim = f130
facing = -1
postype = p1
pos = -5,0
sprpriority = 3
ownpal = 1
removetime = -1 ;「-1」なのでアニメーションが終わらず常に繰り返す
ID = 130

[State 700, ステート変更]
type = ChangeState
trigger1 = command != "hold_c" ;「hold_c」のコマンドではない時（Ｃボタンが離されたら）
trigger2 = power >= 3000       ;パワーゲージがレベル３まで溜まったら
value = 0
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------
; 同人格闘ゲーム『メルティブラッド』よりボタン１個で出せる、
; 相手の攻撃を受け流す防御システム。初代無印版に近い仕様にしてます。
; 複数のテクニックの組み合わせで再現出来る。
;
; これを応用して、ストリートファイターⅢの『ブロッキング』、
; 餓狼MOTWの『ジャストディフェンス（ＥＦＺのリコイルガード）』も再現出来る。
;---------------------------------------------------------------------------
;シールド（特殊行動）
[Statedef 701] 
type     = U ;前のステートの状態を引き継ぐ
movetype = I
physics  = N
ctrl     = 0
anim     = ifelse(StateType=A,705,ifelse(StateType=C,703,701))

[State 701, 状態変更];自分の状態や体勢などを変えるコントローラ
type = StateTypeSet
trigger1 = StateType = A ;自分が今「空中」の状態なら、
Physics = A              ;「物理的な体勢」を「Ａ」にする。自動で重力が掛かるようになるし、
                         ;「Pos Y」が「0以上」になれば強制的に「着地ステート（[Statedef 52]）」になる。

;こちらは相手のHitDef用
[State 701, 受け止め定義];（※８）
type = ReversalDef
trigger1 = Time = 0
reversal.attr = SCA, AA,AP              ;受け止める相手の攻撃属性を指定
;reversal.attr = SCA, NA,SA,HA,NP,SP,HP ;（↑と意味は同じ）
pausetime     = 0,14
numhits       = 0
sparkno       = -1
sparkxy       = 0,0
hitsound      = -1,0
P1StateNo     = 702

;こちらは相手のProjectile用
[State 701, 食らい上書き];（※９）
type = HitOverRide
trigger1 = Time = [0,13]
time = 1
attr = SCA, AA,AP              ;上書き出来る相手の攻撃属性を指定
;attr = SCA, NA,SA,HA,NP,SP,HP ;（↑と意味は同じ）
;forceair = 1                  ;上書きしたら「空中状態」にするか否か（デフォルトは０）
stateno = 702                  ;上書き先のステート
;slot = 0                      ;このHitOverRideのスロットナンバー（デフォルトは０）
IgnoreHitPause = 1

[State 701, 画像の色]
type = PalFX
trigger1 = Time = 0
time = 13
add = 20,70,150
sinadd = 64,32,5,3

[State 701, 軸位置]
type = PosSet
trigger1 = StateType != A
y = 0

[State 701, 移動速度]
type = VelSet
trigger1 = StateType != A
x = 0
y = 0

[State 701, ステート変更]
type = ChangeState
trigger1 = (StateType != A) && (AnimTime = 0)
trigger2 = (StateType = A) && (Time > 19)
value = ifelse(StateType=A,51,ifelse(StateType=C,11,0))
ctrl = 1

;---------------------------------------------------------------------------
; ※８：ReversalDef
;
; 　攻撃判定ボックス（Clsn1）の設置はHitDefを有効にするためだけでなく、
; 　相手の攻撃を受け止める判定を設ける『ReversalDef』にも使う。
;
; 　実際に攻撃を受け止めるには、「attr」の代わりに
;　「reversal.attr」のパラメータを使い、受け止める相手の攻撃属性を指定する。
; 　それ以外はHitDefと設定の仕方が一緒。
;
; 　ReversalDefの設置について二つ注意する事がある。
;
; 　まず、ReversalDefは『Projectileを受け止める事は出来ない』。
; 　あくまでもこのコントローラは「HitDefを受け止めるもの」であるため。
; 
; 　そしてそのHitDefに関係するもう一つの注意点。
;
;　「HitDefを使っている攻撃用ヘルパー」を受け止める場合、
; 　ReversalDefにP2StateNoを設置していたならば
;　『そのヘルパーがそのステートに変わり、相手キャラに分身してしまう』。
; 　波動拳の気弾などのエフェクトにヘルパーを使っていた場合は明らかにバグになる。
;　「受け止める目標がヘルパーになってしまった場合に、分身するバグを回避する方法」
; 　を自分・相手両方共に駆使する必要がある。コンプリートゲームなら楽だけどね。
;
; 　ちなみに、『MoveReversed』というトリガーは
;　「相手のReversalDef」に「自分のHitDef」が受け止められた時間を計測するトリガー。
; 　逆に「自分のReversalDef」で相手の攻撃を受け止めた事を判断する場合は、
; 　なぜか「MoveHit」が使える。なんでか教えてよエレクバイト先生！（コラ
; 　まぁReversalDefも「攻撃判定を定義する」系統だからなんだろうけどね。
;
;---------------------------------------------------------------------------
; ※９：HitOverRide
;
; 　この命令はその名の如く、攻撃を食らった時
;　『食らい状態を任意のステートで上書きする事が出来る』命令。
; 　これの応用で『ブロッキング』なども作る事が出来る。
;
; 　しかし相手のHitDefに「P2StateNo」がある場合、自分がHitOverRideで
; 　食らい動作を上書き出来る状態なら『その攻撃を食らう事が出来なくなる』ので注意。
;
;---------------------------------------------------------------------------
;シールド成功
[Statedef 702]
type     = U
movetype = I
physics  = N
ctrl     = 0
velset   = 0,0
anim     = ifelse(StateType=A,706,ifelse(StateType=C,704,702))

[State 702, 音を鳴らす]
type = PlaySnd
trigger1 = Time = 0
value = 1, 1

[State 702, 状態変更]
type = StateTypeSet
trigger1 = StateType = A
Physics = A
IgnoreHitPause = 1

[State 702, ライフ増減]
type = LifeAdd
trigger1 = Time = 0
value = 10 ;ライフが１０ポイント回復
IgnoreHitPause = 1

[State 702, 時間停止];自分も相手も制限時間も一時的に止める（ポーズ）
type = Pause
trigger1 = Time = 0
time = 13      ;ポーズする時間（フレーム）
movetime = 13  ;ポーズ中に動ける時間。timeよりも多いとバグる（デフォルトは０）
IgnoreHitPause = 1

[State 702, コントロール]
type = CtrlSet
trigger1 = Time = 14
value = 1

[State 702, 画面全体の色]
type = EnvColor
trigger1 = Time = 0
value = 255,255,255 ;画面全体を塗り潰す色合い（赤,緑,青）
time = 1

[State 702, 軸位置]
type = PosSet
trigger1 = StateType != A
y = 0

[State 702, 移動速度]
type = VelSet
triggerall = StateType = A
trigger1 = Time = [0,13]
x = 0
y = 0

[State 702, ステート変更]
type = ChangeState
trigger1 = (StateType != A) && (AnimTime = 0)
trigger2 = (StateType = A) && (Time > 19)
value = ifelse(StateType=A,51,ifelse(StateType=C,11,0))
ctrl = 1

;===========================================================================
;---------------------------------------------------------------------------
; 木の板を投げる飛び道具技。どこかで似たのを見た事があるのは気のせいだ（ﾏﾃｺﾗ
;
; 攻撃判定のあるオブジェクトを発射する命令である『Projectile』を使う。
; ただし、Win版ではキャラ本体がPalFXで色が変わると
;『Projectileも一緒に色が変わってしまう』というバグが発生する。
; ownpalを付けても無駄。
;
; ちなみに、なぜProjectileの発射物に食らい判定（Clsn2）も付いてるのか？
;「相手のProjectile」と「自分のProjectile」が衝突した場合、
;『相殺（互いに打ち消される事）』させるために付けている。
; 自分のや相手のに無ければ当然すり抜ける。
;
; 他に、変数の面白い使い方をしている。「トリガーの代入」を利用して、Var(5)の値が
;「０フレーム目の瞬間Ｂボタンが押されていたら１、それ以外なら０」になるように設定。
; このVar(5)を他のコントローラ・トリガー・パラメータで呼び出せば、
;『一つのステートだけで必殺技の強弱が付けられるようになる』という処理を実行出来る。
; 値が１になった場合に板投げ以外になれば、０にリセットする処理も
;『常時監視ステート（－２）』にて設定しているので、そっちも見忘れないでね。
;
; 一つのステートで強弱が付けられるテクニック、これ悪咲さん方式（爆
;---------------------------------------------------------------------------
;板投げ（必殺技）
[Statedef 1300]
type    = S
movetype= A
physics = S
poweradd= 20
velset = 0,0
anim = 1300
ctrl = 0
sprpriority = 2

[State 1300, 変数];Ｂボタンが押されたら１、それ以外なら０
type = VarSet
trigger1 = Time = 0
v = 5                   ;変数用パラメータの記述方法その２
value = ifelse(var(59)=0,(command = "b"),(p2bodydist x>=80||enemynear(var(50)),statetype=A)) ;（その１はコマンドファイルにて）

[State 1300, 物理的なキャラの幅]
type = Width
trigger1 = (AnimElemTime(2) >= 0) && (AnimElemTime(10) < 0)
player = 30,0 ;相手を押す幅を変える（黄緑の線）
edge = 48,0   ;画面端を押す幅を変える（オレンジの線）

[State 1300, 音を鳴らす]
type = PlaySnd
trigger1 = AnimElem = 4
value = 800, 0



[State 1300, 飛び道具];HitDefに飛び道具専用のパラメータを加えたようなものが「Projectile」
type = Projectile
trigger1 = AnimElem = 4
attr = S, SP ;立ち必殺飛び道具（Standing, Special Projectile）
damage = 20
animtype = Hard
pausetime = 0,12
;-----------------------------------Projectile専用のパラメータ
offset = 10,-97                ;飛び道具を発射する位置（Ｘ軸,Ｙ軸）
velocity = ceil(4+var(5)*2),-3 ;飛び道具の移動速度（Ｘ軸,Ｙ軸）
accel = 0,0.4                  ;飛び道具の加速度(float)（Ｘ軸,Ｙ軸）
projID = 1302                  ;飛び道具のＩＤナンバー（NumProjIDなどで判断）
projanim = 1302                ;飛び道具のアニメ（アクションナンバー）
projhitanim = 1303             ;飛び道具がヒットした時のアニメ（アクションナンバー）
projremanim = 1303             ;飛び道具が消える時のアニメ（アクションナンバー）
projscale = 1,1                ;飛び道具の大きさ（Ｘ軸,Ｙ軸）※現在２倍
projshadow = 0,0,0             ;飛び道具の影の色合い（赤,緑,青）※現在影無し
projhits = 1                   ;飛び道具のヒット数（２以上なら多段ヒットになる）
projmisstime = 1               ;飛び道具の連続でヒットしない間隔　※projhitsが２以上の時のみ
projpriority = 3               ;飛び道具の攻撃優先度・相手のProjectileよりも高いと消しながら進む
projremovetime = -1            ;飛び道具の消えるまでの時間（フレーム）※-1なら当たるか画面外に出るまで消えない
;-----------------------------------これ以外にまだまだある。docsフォルダ参照。
guardflag = MA
priority = 3
sparkno = s2060
sparkxy = 0,0
guard.sparkno = 40
hitsound = s5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 14
ground.hittime = 16
ground.velocity = -6,0
air.velocity = -3,-4
air.juggle = 4 ;Projectileの場合はここで設定しないとヒットした時ジャグルが消費しない
envshake.time = 8
envshake.ampl = 6
envshake.freq = 100

[State 1300, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1



;アリス（必殺技）
[Statedef 1301]
type    = S
movetype= A
physics = S
poweradd= 20
velset = 0,0
anim = 3052
ctrl = 0
sprpriority = 2




[State 1301, 音を鳴らす2]
type = PlaySnd
trigger1 = AnimElem = 1
value = 21, 0

[State 1301, dame-ji]
type = lifeadd
trigger1 = AnimElem = 1
value = -10

[State 1301, 飛び道具];HitDefに飛び道具専用のパラメータを加えたようなものが「Projectile」
type = Projectile
trigger1 = AnimElem = 1
attr = S, SP ;立ち必殺飛び道具（Standing, Special Projectile）
damage = 20
animtype =DiagUp
pausetime = 0,12
hitflag = MAFD  
affectteam = B
;-----------------------------------Projectile専用のパラメータ
offset = -20,0                ;飛び道具を発射する位置（Ｘ軸,Ｙ軸）
velocity = 10,0 ;飛び道具の移動速度（Ｘ軸,Ｙ軸）
Projanim=3056                 ;飛び道具の加速度(float)（Ｘ軸,Ｙ軸）
projID = 1303                  ;飛び道具のＩＤナンバー（NumProjIDなどで判断）  
projmisstime = 1               ;飛び道具の連続でヒットしない間隔　※projhitsが２以上の時のみ
projpriority = 3               ;飛び道具の攻撃優先度・相手のProjectileよりも高いと消しながら進む
projremovetime = -1  
Projremove=0
Projstagebound=120
Postype=back
Removevelocity=-20,-10
Projcancelanim=3057
Projremanim=3057
Projhitanim=3057
;-----------------------------------これ以外にまだまだある。docsフォルダ参照。
guardflag = MA
ground.velocity = -10,-12
priority = 3
sparkno = s2060
sparkxy = 0,0
guard.sparkno = 40
hitsound = s13,1
guardsound = 6,0
ground.type = High
ground.slidetime = 14
ground.hittime = 16
ground.velocity = -6,0
air.velocity = -3,-4
air.juggle = 4 ;Projectileの場合はここで設定しないとヒットした時ジャグルが消費しない
envshake.time = 8
envshake.ampl = 6
envshake.freq = 100

[State 1301, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;hyu-go（必殺技）
[Statedef 1302]
type    = S
movetype= A
physics = S
poweradd= 20
velset = 0,0
anim = 3052
ctrl = 0
sprpriority = 2

[State 1301, dame-ji]
type = lifeadd
trigger1 = AnimElem = 1
value = -10



[State 1301, 音を鳴らす2]
type = PlaySnd
trigger1 = AnimElem = 1
value = 21, 1


[State 1301, 飛び道具];HitDefに飛び道具専用のパラメータを加えたようなものが「Projectile」
type = Projectile
trigger1 = AnimElem = 1
attr = S, SP ;立ち必殺飛び道具（Standing, Special Projectile）
damage = 20
animtype =DiagUp
pausetime = 0,12
hitflag = MAFD  
affectteam = B
;-----------------------------------Projectile専用のパラメータ
offset = 0,0                ;飛び道具を発射する位置（Ｘ軸,Ｙ軸）
velocity = 8,-8 ;飛び道具の移動速度（Ｘ軸,Ｙ軸）
Projanim=3058               ;飛び道具の加速度(float)（Ｘ軸,Ｙ軸）
projID = 1354                 ;飛び道具のＩＤナンバー（NumProjIDなどで判断）  
projmisstime = 1               ;飛び道具の連続でヒットしない間隔　※projhitsが２以上の時のみ
projpriority = 3               ;飛び道具の攻撃優先度・相手のProjectileよりも高いと消しながら進む
projremovetime = -1  
Projremove=0
accel = 0,0.4  
Projstagebound=120
Postype=back
Removevelocity=-20,-10
Projcancelanim=3057
Projremanim=3057
Projhitanim=3057
;-----------------------------------これ以外にまだまだある。docsフォルダ参照。
guardflag = MA
ground.velocity = -10,-12
priority = 3
sparkno = s2060
sparkxy = 0,0
guard.sparkno = 40
hitsound = s13,1
guardsound = 6,0
ground.type = High
ground.slidetime = 14
ground.hittime = 16
ground.velocity = -6,0
air.velocity = -3,-4
air.juggle = 4 ;Projectileの場合はここで設定しないとヒットした時ジャグルが消費しない
envshake.time = 8
envshake.ampl = 6
envshake.freq = 100

[State 1301, ステート変更]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1
;---------------------------------------------------------------------------
; ※１０：ヘルパーオブジェクト（Helper）
;
; 　その名の通り本来は『支援キャラクター』を呼び出すコントローラ。
; 　多目的にオブジェクトを画面中に出現させる事が出来る。
;
;　「ヘルパー専用のステートを作る」「用途によっては目的を済ませたら消す」の
; 　二点さえ気を付ければ、後は支援キャラ・エフェクトなどを自由に作れる。
;
; 　で、肝心なHelper用パラメータの説明を。
;
;
; [State 1000, ヘルパーを出す]
; type = Helper
; trigger1 = Time = 0
;
; helpertype = normal    ;ヘルパーの属性。「Normal」ならば画面スクロールの影響を受けず、画面外に出られる。
;                        「Player」なら画面スクロールの影響を受け、画面外に出られない上に、
;                         ヘルパー自体も「プレイヤー」として相手に判断される。
;                         デフォルトはNormal。
;
; name = "Striker"       ;ヘルパーの名前。省略すれば勝手に「(ヘルパーを出した親)'s Helper」という名前になる。
;
; stateno = 12345        ;ヘルパーの最初に向かうステートナンバー。
;
; pos = 0,0              ;ヘルパーの座標（Ｘ軸,Ｙ軸）
;                         postypeに依存。
;
; postype = p1           ;ヘルパーの位置属性（p1・p2・front・back・left・right）
;                         効果については「小ネタ.txt」を参照（PosTypeの違い）
;
; facing = 1             ;ヘルパーの左右の向き（1=そのまま・-1=左右反転）
;                         デフォルトは１。
;
; keyctrl = 0            ;ヘルパーのキーコントロールを可能にするか否か（0=しない・1=する）
;                         1の場合、[Statedef -1]に登録されたステートコントローラを
;                         そのヘルパーにも適用する事が出来る。デフォルトは０。
;
; ownpal = 1             ;ヘルパーの色を独立させるか否か（0=させない,1=させる）
;                         0にすればキャラ本体が「PalFX」などで色を変化させた場合、
;                         ヘルパーオブジェクトも一緒に色が変わってしまう。
;
; supermovetime = 6      ;「SuperPause」での時間停止を無視して有効にする時間を設定。
;                         「小ネタ.txt」を参照。
;
; pausemovetime = 6      ;「Pause」での時間停止を無視して有効にする時間を設定。
;                         「小ネタ.txt」を参照。
;
; ID = 54321             ;ヘルパーのＩＤナンバー。
;                         リダイレクションの「Helper(***),***」などでヘルパーの状況を確認する場合や
;                        「NumHelper」でヘルパーの個数を調べる場合など、『ヘルパーを特定する時』に必要。
;
; size.xscale = 1        ;｝
; size.yscale = 1        ;｝
; size.ground.back = 15  ;｝
; size.ground.front = 15 ;｝
; size.air.back = 10     ;｝これらは全てヘルパーへのサイズ指定（オプション）。
; size.air.front = 10    ;｝
; size.height = 60       ;｝やり方はコンスタンツファイルの[Size]の項目と一緒。
; size.proj.doscale = 0  ;｝
; size.head.pos = -5,-90 ;｝
; size.mid.pos = -5,-60  ;｝
; size.shadowoffset = 0  ;｝
;
;---------------------------------------------------------------------------
; こっちがヘルパー用に設定したステート。
;
; 今回は敢えて簡単にしてるけど、
; ヘルパー専用ステートにも、ヘルパー専用のコントローラやトリガーがある。
; それらも駆使して「Explodで表現出来ないエフェクト画像」など、
; 様々なオブジェクトを画面中に出す事も可能。
;
; ↓のコントローラの種類やトリガーに「Parent」や「Root」が付いているけど、
; これはヘルパー専用の処理。効果自体については「おまけフォルダ」にある
;「小ネタ.txt」を参照してください。（トリガーリダイレクション）
;---------------------------------------------------------------------------
;放り投げるまでの板（ヘルパー用ステート）

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
; カンフーマンのこのコンスタンツファイルをそのまま使う場合は、
; ここからステートを追加すると整理しやすいでしょう。
;
; ・・・ってエレクバイト先生が言ってるけど、正直使いにくいかも（ﾏﾃｺﾗ
; 冗談です(´・ω:;.:...
;---------------------------------------------------------------------------





;===========================================================================
; 常時監視ステート（－２）
;===========================================================================
;---------------------------------------------------------------------------
; 通常の食らい状態（Statedef 5000～5199間）でも、
; 相手に（「P2StateNo」や「TargetState」等で）制御を奪われても、
; 常に登録したステートコントローラが有効になります。
; サブシステム等を制御する時に重宝するでしょう。
;---------------------------------------------------------------------------

[Statedef -2]

[State -2, 変数];板投げ用
type = VarSet
trigger1 = (StateNo != 1300)
var(5) = 0


[State -2, 13];強攻撃のﾀﾞﾒｰｼﾞﾎﾞｲｽ系A
type = PlaySnd
triggerall = Random <= 300
triggerall=time=1
trigger1 = stateno = 5000
trigger1 = Anim = 5002
value = 9, 0

[State -2, ga-do];強攻撃のﾀﾞﾒｰｼﾞﾎﾞｲｽ系A
type = PlaySnd
triggerall = Random <= 100
triggerall=time=1
trigger1 = stateno = 150 
trigger2 = stateno = 152 
trigger3 = stateno = 154 
value = 10, 0

[State -2, ga-do1];強攻撃のﾀﾞﾒｰｼﾞﾎﾞｲｽ系A
type = PlaySnd
triggerall=time=1
trigger1 = stateno = 150 
trigger2 = stateno = 152 
trigger3 = stateno = 154 
value = 10, 1

[State -2, これは強敵だ！]
type = PlaySnd
triggerall=time=1
triggerall=life <= LifeMax*.2
triggerall=enemynear,Life>= enemynear,LifeMax*.8
triggerall=Random <= 400
trigger1 = stateno = 5000
trigger2 = stateno = 5010
trigger3 = stateno = 5020 
value = 20, 2

[State -2, 無駄なあがきを]
type = PlaySnd
triggerall=time=1
triggerall=life >= LifeMax*.5
triggerall=enemynear,Life<= enemynear,LifeMax*.2
triggerall=Random <= 300
trigger1 = stateno = 150
trigger2 = stateno = 152
trigger3 = stateno = 154
value = 20, 3

[State -2, kuraiゲージ]
type = poweradd
triggerall=time=1
trigger1 = stateno = 5000
trigger2 = stateno = 5010
trigger3 = stateno = 5020
value = 150


[State -2, ガ－ドゲージ]
type = poweradd
triggerall=time=1
trigger1 = stateno = 150
trigger2 = stateno = 152
trigger3 = stateno = 154
value = 70

[State -2, huttobi]
type = poweradd
triggerall=time=1
trigger1 = stateno = 5035
trigger2 = stateno = 5071
trigger3 = stateno = 5080
value = 250


[State -2, ga-do2];強攻撃のﾀﾞﾒｰｼﾞﾎﾞｲｽ系A
type = explod
triggerall=time=1
trigger1 = stateno = 150 
trigger2 = stateno = 152 
trigger3 = stateno = 154 
anim = 2062
wnpal = 1
sprpriority = 2

pos = 30,0
bindtime = 1

[State -2, temeeee]
type = PlaySnd
triggerall=time=1
trigger1 = stateno = 5071
value = 18, 0

[State -2, potyan]
type = PlaySnd
trigger1=Animelem = 6
trigger1 = stateno = 0
trigger2=Animelem = 6
trigger2 = stateno = 20
trigger3=Animelem = 6
trigger3 = stateno = 19 || stateno = 21
value = 17, 0


[State -2, ダッシュ砂]
type = explod
triggerall = Time = 1
trigger1 = stateno = 100 || stateno = 99
anim = 2061
ownpal = 1
sprpriority = 1

pos = 0,0
bindtime = 1

[State -2, ダッシュoto]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 100||stateno = 99  
value = 19, 1

[State -2, janpuoto]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 40 || stateno = 41  
value = 19, 0



[State -2, janpu砂]
type = explod
triggerall = Time = 1
trigger1 = stateno = 40 || stateno = 41  
anim = 2063
ownpal = 1
sprpriority = 1
scale =0.4,0.4
pos = 0,0
bindtime = 1

[State -2, ダッシュ砂2]
type = explod
triggerall= stateno = 100 || stateno = 99 
trigger1 = Time = 1 
trigger2 = (time % 27) = 0
anim = 2064
ownpal = 1
sprpriority = 1
scale =0.6,0.6
pos = 0,0
bindtime = 30



[State -2, ClipBoard]
type = DisplayToClipBoard
trigger1 = RoundState = 2
trigger1 = NumHelper(1001) > 0
Text =  "1=%d,2=%d,3=%d,4=%d"
Params = floor(Helper(1001),p2Dist x),floor(Helper(1002),p2Dist x),floor(Helper(1003),p2Dist x),floor(Helper(1004),p2Dist x)

[State -2, ClipBoard]
type = AppendToClipboard
trigger1 = RoundState = 2
trigger1 = NumHelper(1001) > 0
Text =  "\n 1=%d,2=%d,3=%d,4=%d,near=%d"
Params = Var(1),Var(2),Var(3),Var(4),Var(5)

[State 100];ヘルパー1001を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1001) = 0
trigger1 = PalNo = 10
name = "Helper1"
id = 1001
pos = 40,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1002を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1002) = 0
trigger1 = PalNo = 10
name = "Helper2"
id = 1002
pos = 120,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1003を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1003) = 0
trigger1 = PalNo = 10
name = "Helper3"
id = 1003
pos = 200,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1004を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1004) = 0
trigger1 = PalNo = 10
name = "Helper4"
id = 1004
pos = 280,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0


[State 100];ヘルパー1005を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1005) = 0
trigger1 = PalNo = 10
name = "Helper5"
id = 1005
pos = 40,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1006を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1006) = 0
trigger1 = PalNo = 10
name = "Helper6"
id = 1006
pos = 120,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1007を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1007) = 0
trigger1 = PalNo = 10
name = "Helper7"
id = 1007
pos = 200,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1008を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1008) = 0
trigger1 = PalNo = 10
name = "Helper8"
id = 1008
pos = 280,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0


[State 100];ヘルパー1009を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1009) = 0
trigger1 = PalNo = 10
name = "Helper9"
id = 1009
pos = 40,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1010を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1010) = 0
trigger1 = PalNo = 10
name = "Helper10"
id = 1010
pos = 120,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1011を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1011) = 0
trigger1 = PalNo = 10
name = "Helper11"
id = 1011
pos = 200,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1012を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1012) = 0
trigger1 = PalNo = 10
name = "Helper12"
id = 1012
pos = 280,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1012を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1013) = 0
trigger1 = PalNo = 10
name = "Helper13"
id = 1013
pos = 281,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0

[State 100];ヘルパー1012を作成
type = Helper
trigger1 = RoundState = 2
trigger1 = NumHelper(1014) = 0
trigger1 = PalNo = 10
name = "Helper14"
id = 1014
pos = 284,-270
postype = left
stateno = 9999
Helpertype = player
keyctrl = 0
ownpal = 1
size.ground.back = 0
size.ground.front = 0
size.air.back = 0
size.air.front = 0



;---------------------------------------------------------------------------
;ヘルパー攻撃力

[State -2,];ダメージ設定
type = varset
trigger1 = 1
v = 10
value = 1 ; ←0,1,2,3,4,5のいずれかで設定してください

[State -2,];ゲージ増の有無
type = varset
trigger1 = 1
v = 11
value = 0 ; ←0＝無し,1＝有りかで設定してください
;---------------------------------------------------------------------------

[State -2, 7];★相手の位置を調査
type = VarSet
trigger1 = stateno != 189
trigger1 = win = 1
var(30) = ceil(p2dist x);小数点以下を切り捨ててる
ignorehitpause = 1

[State -2, 7]
type = VarSet
trigger1 = Var(30) != 0
var(31) = var(30)
ignorehitpause = 1


;-----------------------------------
;ここは「パワー溜め」のステートで発生させた「Explod」のエフェクト画像を
;特定の条件が有効になれば消す、という処理をしています。

[State -2, エフェクトを消す];パワー溜めステート用
type = RemoveExplod
triggerall = NumExplod(130) > 0
                          ;↑はＩＤナンバー「130」のExplodの画面中の数が0よりも多い、
                          ;つまり１枚以上表示されている時
trigger1 = StateNo != 700 ;ステートが７００（パワー溜め）以外の時
trigger2 = MoveType != I  ;MoveTypeが「I（何もしてない）」以外の時
ID = 130                  ;消すExplodの特定のＩＤナンバーを指定

;-----------------------------------
[State -2, クリップボード]
type = DisplayToClipboard
trigger1 = 1
text = "Cancel=%d, Throw=%d, v58=%d, Body-Distance X=%d,Y=%d \n"
params = var(1),var(2),var(58),floor(P2BodyDist X),floor(P2BodyDist Y)

[State -2, クリップボード（追加専用）]
type = AppendToClipboard
trigger1 = 1
text = "Position X=%d,Y=%d, Velocity X=%f,Y=%f,fv39=%.1f\n";Hit=%d \n"
params = floor(Pos X),floor(Pos Y),(Vel X),(Vel Y),fvar(39);(MoveHit)

;===========================================================================
; 準常時監視ステート（－３）
;===========================================================================
;---------------------------------------------------------------------------
; こちらは通常の食らい状態以外の「P2StateNo」や「TargetState」等で制御された、
; 作成者が任意に指定した相手側の食らいステートに限り、
; 登録したステートコントローラが有効にはなりません。
; －１や－２と上手く使い分けて行きましょう。
;---------------------------------------------------------------------------

[Statedef -3]

;-----------------------------------
;ここは「ジャンプ」か「バックステップ」をした後に
;着地する音を鳴らす設定をしています。

[State -3, 音を鳴らす]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52  ;着地ステート
trigger2 = stateno = 106 ;バックステップ後の着地ステート
value = 40, 0

;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
; ■最後に『コモンステート』について■
; コモンステートとは、全キャラ共通の基本動作のステートです。
; 通常は特に変更しない限り、M.U.G.E.N本体のdataフォルダにある
;「common1.cns（コモンステートファイル）」を使います。
;
; しかし、もしもあなたのキャラのステートファイルでcommon1.cnsと同じ番号の
; 基本動作のステートを作った場合は処理が上書きされ、
; common1.cns側の同じ番号のステートは無効になります。
;
; common1.cnsのプログラム優先度は最低に属しているので、
; ステートの作成には番号に注意しないといけません。
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;---------------------------------------------------------------------------
;AIヘルパー
;---------------------------------------------------------------------------
[Statedef 10000]
anim=10000;なにも表示しないｱﾆﾒでもいいけど入れなくても全然問題ない
ctrl=0

[State 10000]
type = assertspecial
trigger1 = 1
flag = invisible

[State 10000]
type = NotHitBy
value = SCA
trigger1 = 1

[State 10000,間違いで本体が来たら立ちへ移行]
type=selfstate
trigger1=!ishelper
value=0

[State 10000,プレイヤー判定]
type=varset
trigger1=command="up"&&root,command="up"
trigger2=command="down"&&root,command="down"
trigger3=command="back"&&root,command="back"
trigger4=command="fwd"&&root,command="fwd"
trigger5=command="a"&&root,command="a"
trigger6=command="b"&&root,command="b"
trigger7=command="c"&&root,command="c"
trigger8=command="x"&&root,command="x"
trigger9=command="y"&&root,command="y"
trigger10=command="z"&&root,command="z"
trigger11=command="start"&&root,command="start"
var(59)=-1

[State 10000,立ったら消失]
Type = DestroySelf
triggerAll = isHelper
Trigger1 = root,var(59)||var(59)=-1
trigger2=command="up"&&root,command="up"
trigger3=command="down"&&root,command="down"
trigger4=command="back"&&root,command="back"
trigger5=command="fwd"&&root,command="fwd"
trigger6=command="a"&&root,command="a"
trigger7=command="b"&&root,command="b"
trigger8=command="c"&&root,command="c"
trigger9=command="x"&&root,command="x"
trigger10=command="y"&&root,command="y"
trigger11=command="z"&&root,command="z"
trigger12=command="start"&&root,command="start"

[State 10000,ﾌﾗｸﾞON]
type=varset
triggerall=var(59)!=-1
trigger1=root,command="up"
trigger2=root,command="down"
trigger3=root,command="back"
trigger4=root,command="fwd"
trigger5=root,command="a"
trigger6=root,command="b"
trigger7=root,command="c"
trigger8=root,command="x"
trigger9=root,command="y"
trigger10=root,command="z"
trigger11=root,command="start"
var(59)=1

